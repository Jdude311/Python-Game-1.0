"2e4a65187f8e333f2ac0bcc33f32c054b9f1d608"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#151=[nil nil ((#("
    def move(self):
        super().move()
" 0 1 (fontified t) 1 2 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #1=((#<marker at 2064 in main.py> . #<marker at 2465 in main.py>))) face highlight-indent-guides-even-face) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #1#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #1#)) 4 5 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #1#)) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t) 14 18 (fontified t face font-lock-keyword-face) 18 21 (fontified t) 21 22 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #1#) face highlight-indent-guides-even-face) 22 23 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #1#)) 23 24 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #1#)) 24 25 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #1#)) 25 26 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #2=((#<marker at 2362 in main.py> . #<marker at 2362 in main.py>) . #1#)) face highlight-indent-guides-odd-face) 26 27 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #2#)) 27 28 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #2#)) 28 29 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #2#)) 29 34 (fontified t face font-lock-builtin-face) 34 43 (fontified t) 43 44 (fontified t)) . 2362) (undo-tree-id16449 . -1) (undo-tree-id16450 . -41) (undo-tree-id16451 . -41) (undo-tree-id16452 . 2) (undo-tree-id16453 . -42) (undo-tree-id16454 . -44) (undo-tree-id16455 . -44) (undo-tree-id16456 . -21) (undo-tree-id16457 . -21) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -21) (undo-tree-id16461 . -44) (undo-tree-id16462 . -42) (undo-tree-id16463 . -5) (undo-tree-id16464 . -8) (undo-tree-id16465 . -43) (undo-tree-id16466 . -43) (undo-tree-id16467 . -43) (undo-tree-id16468 . -43) (undo-tree-id16469 . -43) (undo-tree-id16470 . -43) (undo-tree-id16471 . -43) (undo-tree-id16472 . -43) (undo-tree-id16473 . -43) (undo-tree-id16474 . -43) (undo-tree-id16475 . -43) (undo-tree-id16476 . -43) (undo-tree-id16477 . -42) (undo-tree-id16478 . -42) (undo-tree-id16479 . -42) (undo-tree-id16480 . -42) (undo-tree-id16481 . -42) (undo-tree-id16482 . -42) (undo-tree-id16483 . -42) (undo-tree-id16484 . -43) (undo-tree-id16485 . -29) (undo-tree-id16486 . -5) (undo-tree-id16487 . -5) (undo-tree-id16488 . -29) (undo-tree-id16489 . -20) (undo-tree-id16490 . -43) (undo-tree-id16491 . -1) (undo-tree-id16492 . -20) (undo-tree-id16493 . -43) (undo-tree-id16494 . -42) (undo-tree-id16495 . -42) (undo-tree-id16496 . -42) (undo-tree-id16497 . -42) (undo-tree-id16498 . -42) (undo-tree-id16499 . -42) (undo-tree-id16500 . -42) (undo-tree-id16501 . -42) (undo-tree-id16502 . -42) (undo-tree-id16503 . -42) (undo-tree-id16504 . -42) (undo-tree-id16505 . -42) (undo-tree-id16506 . -42) (undo-tree-id16507 . -42) (undo-tree-id16508 . -42) (undo-tree-id16509 . -42) (undo-tree-id16510 . -42) (undo-tree-id16511 . -42) (undo-tree-id16512 . -42) (undo-tree-id16513 . -42) (undo-tree-id16514 . -42) (undo-tree-id16515 . -42) (undo-tree-id16516 . -42) (undo-tree-id16517 . -42) (undo-tree-id16518 . -42) (undo-tree-id16519 . -42) (undo-tree-id16520 . -42) (undo-tree-id16521 . -42) (undo-tree-id16522 . -42) (undo-tree-id16523 . -42) (undo-tree-id16524 . -42) (undo-tree-id16525 . -41) (undo-tree-id16526 . -41) (undo-tree-id16527 . -41) (undo-tree-id16528 . -41) (undo-tree-id16529 . -41) (undo-tree-id16530 . -41) (undo-tree-id16531 . -41) (undo-tree-id16532 . -41) (undo-tree-id16533 . -41) (undo-tree-id16534 . -41) (undo-tree-id16535 . -41) (undo-tree-id16536 . -41) (undo-tree-id16537 . -41) (undo-tree-id16538 . -41) (undo-tree-id16539 . -41) (undo-tree-id16540 . -41) (undo-tree-id16541 . -41) (undo-tree-id16542 . -41) (undo-tree-id16543 . -41) (undo-tree-id16544 . -41) (undo-tree-id16545 . -41) (undo-tree-id16546 . -41) (undo-tree-id16547 . -41) (undo-tree-id16548 . -41) (undo-tree-id16549 . -44) (undo-tree-id16550 . -41) (undo-tree-id16551 . -41) (undo-tree-id16552 . -41) (undo-tree-id16553 . -41) (undo-tree-id16554 . -41) (undo-tree-id16555 . -41) (undo-tree-id16556 . -41) (undo-tree-id16557 . -41) (undo-tree-id16558 . -41) (undo-tree-id16559 . -41) (undo-tree-id16560 . -41) (undo-tree-id16561 . -41) (undo-tree-id16562 . -41) (undo-tree-id16563 . -41) (undo-tree-id16564 . -41) (undo-tree-id16565 . -41) (undo-tree-id16566 . -41) (undo-tree-id16567 . -41) (undo-tree-id16568 . -20) (undo-tree-id16569 . -20) (undo-tree-id16570 . -20) (undo-tree-id16571 . -20) (undo-tree-id16572 . -20) (t 24969 58811 647258 180000)) nil (24969 58849 601136 54000) 0 nil]) ((2404 . 2405) (#("self)" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -2404) (undo-tree-id16402 . -4) (undo-tree-id16403 . -5) (undo-tree-id16404 . -4) (undo-tree-id16405 . -4) (undo-tree-id16406 . -4) (undo-tree-id16407 . -4) (undo-tree-id16408 . -4) (undo-tree-id16409 . -4) (undo-tree-id16410 . -4) (undo-tree-id16411 . -5) (undo-tree-id16412 . -5) (undo-tree-id16413 . -5) (undo-tree-id16414 . -5) (undo-tree-id16415 . -5) (undo-tree-id16416 . -5) (undo-tree-id16417 . -5) (undo-tree-id16418 . -5) (undo-tree-id16419 . -5) (undo-tree-id16420 . -5) (undo-tree-id16421 . -5) (undo-tree-id16422 . -5) (undo-tree-id16423 . -5) (undo-tree-id16424 . -5) (undo-tree-id16425 . -5) (undo-tree-id16426 . -5) (undo-tree-id16427 . -5) (undo-tree-id16428 . -5) (undo-tree-id16429 . -5) (undo-tree-id16430 . -5) (undo-tree-id16431 . -5) (undo-tree-id16432 . -5) (undo-tree-id16433 . -5) (undo-tree-id16434 . -5) (undo-tree-id16435 . -5) (undo-tree-id16436 . -5) (undo-tree-id16437 . -5) (undo-tree-id16438 . -5) (undo-tree-id16439 . -5) (undo-tree-id16440 . -5) (undo-tree-id16441 . -5) (undo-tree-id16442 . -5) (undo-tree-id16443 . -5) 2409 (2404 . 2409) (2391 . 2404) (2382 . 2391) (2381 . 2382) (#(" " 0 1 (fontified t)) . -2381) (undo-tree-id16444 . -1) 2382 (2375 . 2382) (#(" " 0 1 (fontified t)) . -2375) (undo-tree-id16445 . -1) 2376 (2367 . 2376) (#("    " 0 4 (fontified t)) . -2367) (undo-tree-id16446 . -4) 2371 (2363 . 2371) (#("    " 0 4 (fontified nil)) . 2362) (undo-tree-id16447 . -4) (2366 . 2367) (#("    " 0 4 (fontified t)) . -2366) (undo-tree-id16448 . -4) 2370 (2361 . 2370) (t 24969 58768 511237 770000) 2335) nil (24969 58811 402151 986000) 0 nil]) ((3009 . 3016)) nil (24969 58768 250876 886000) 0 nil]) ((#("projectile1" 0 1 (fontified t) 1 3 (fontified t) 3 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 10 (fontified t) 10 11 (fontified t)) . 3009) (undo-tree-id16389 . -11) (undo-tree-id16390 . -11) (undo-tree-id16391 . -11) (undo-tree-id16392 . -11) (undo-tree-id16393 . -11) (undo-tree-id16394 . -11) (undo-tree-id16395 . -11) (undo-tree-id16396 . -11) (undo-tree-id16397 . -11) 3020) nil (24969 58768 250908 482000) 0 nil]) ((nil rear-nonsticky nil 3008 . 3009) (#("
" 0 1 (fontified nil)) . -3027) (3004 . 3028) 2976) nil (24969 58768 250914 112000) 0 nil]) ((#("    bullet
" 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #3=((#<marker at 2825 in main.py> . #<marker at 3106 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #3#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #3#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #3#)) 4 10 (fontified t) 10 11 (fontified t)) . 3030) (undo-tree-id16398 . -11) (undo-tree-id16399 . 1) (undo-tree-id16400 . -9) 3039) nil (24969 58768 250922 256000) 0 nil]) ((#("." 0 1 (fontified t)) . -3040) (undo-tree-id16401 . -1) 3041 (3034 . 3041) (3029 . 3034) (t 24969 58748 202564 34000) 3028) nil (24969 58768 250928 818000) 0 nil]) ((2353 . 2361) (2352 . 2353) (#("50, " 0 2 (fontified t face highlight-numbers-number) 2 4 (fontified t)) . -2352) (undo-tree-id16241 . -4) (undo-tree-id16242 . -4) (undo-tree-id16243 . -4) (undo-tree-id16244 . -4) (undo-tree-id16245 . -4) (undo-tree-id16246 . -4) (undo-tree-id16247 . -4) (undo-tree-id16248 . -4) (undo-tree-id16249 . -4) (undo-tree-id16250 . -4) (undo-tree-id16251 . -4) (undo-tree-id16252 . -4) (undo-tree-id16253 . -4) (undo-tree-id16254 . -4) (undo-tree-id16255 . -4) (undo-tree-id16256 . -4) (undo-tree-id16257 . -4) (undo-tree-id16258 . -4) (undo-tree-id16259 . -4) (undo-tree-id16260 . -4) (undo-tree-id16261 . -4) (undo-tree-id16262 . -4) (undo-tree-id16263 . -4) (undo-tree-id16264 . -4) (undo-tree-id16265 . -4) (undo-tree-id16266 . -4) (undo-tree-id16267 . -4) (undo-tree-id16268 . -4) (undo-tree-id16269 . -4) (undo-tree-id16270 . -4) (undo-tree-id16271 . -4) (undo-tree-id16272 . -4) (undo-tree-id16273 . -4) (undo-tree-id16274 . -4) (undo-tree-id16275 . -4) (undo-tree-id16276 . -4) (undo-tree-id16277 . -4) (undo-tree-id16278 . -4) (undo-tree-id16279 . -4) (undo-tree-id16280 . -4) (undo-tree-id16281 . -4) (undo-tree-id16282 . -4) (undo-tree-id16283 . -4) (undo-tree-id16284 . -4) (undo-tree-id16285 . -4) (undo-tree-id16286 . -4) (undo-tree-id16287 . -4) (undo-tree-id16288 . -4) (undo-tree-id16289 . -4) (undo-tree-id16290 . -4) (undo-tree-id16291 . -4) (undo-tree-id16292 . -4) (undo-tree-id16293 . -4) (undo-tree-id16294 . -4) (undo-tree-id16295 . -4) (undo-tree-id16296 . -4) (undo-tree-id16297 . -4) (undo-tree-id16298 . -4) (undo-tree-id16299 . -4) (undo-tree-id16300 . -4) (undo-tree-id16301 . -4) (undo-tree-id16302 . -4) (undo-tree-id16303 . -4) (undo-tree-id16304 . -4) (undo-tree-id16305 . -4) (undo-tree-id16306 . -4) (undo-tree-id16307 . -4) (undo-tree-id16308 . -4) (undo-tree-id16309 . -4) (undo-tree-id16310 . -4) (undo-tree-id16311 . -4) (undo-tree-id16312 . -4) (undo-tree-id16313 . -4) (undo-tree-id16314 . -4) (undo-tree-id16315 . -4) (undo-tree-id16316 . -4) (undo-tree-id16317 . -4) (undo-tree-id16318 . -4) (undo-tree-id16319 . -4) (undo-tree-id16320 . -4) (undo-tree-id16321 . -4) (undo-tree-id16322 . -4) (undo-tree-id16323 . -4) (undo-tree-id16324 . -4) (undo-tree-id16325 . -4) (undo-tree-id16326 . -4) (undo-tree-id16327 . -4) 2356 (#("50" 0 2 (fontified t face highlight-numbers-number)) . -2356) (undo-tree-id16328 . -2) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -2) (undo-tree-id16336 . -2) (undo-tree-id16337 . -2) (undo-tree-id16338 . -2) (undo-tree-id16339 . -2) (undo-tree-id16340 . -2) (undo-tree-id16341 . -2) (undo-tree-id16342 . -2) (undo-tree-id16343 . -2) (undo-tree-id16344 . -2) (undo-tree-id16345 . -2) (undo-tree-id16346 . -2) (undo-tree-id16347 . -2) (undo-tree-id16348 . -2) (undo-tree-id16349 . -2) (undo-tree-id16350 . -2) (undo-tree-id16351 . -2) (undo-tree-id16352 . -2) (undo-tree-id16353 . -2) (undo-tree-id16354 . -2) (undo-tree-id16355 . -2) (undo-tree-id16356 . -2) (undo-tree-id16357 . -2) (undo-tree-id16358 . -2) (undo-tree-id16359 . -2) (undo-tree-id16360 . -2) (undo-tree-id16361 . -2) (undo-tree-id16362 . -2) (undo-tree-id16363 . -2) (undo-tree-id16364 . -2) (undo-tree-id16365 . -2) (undo-tree-id16366 . -2) (undo-tree-id16367 . -2) (undo-tree-id16368 . -2) (undo-tree-id16369 . -2) (undo-tree-id16370 . -2) (undo-tree-id16371 . -2) (undo-tree-id16372 . -2) (undo-tree-id16373 . -2) (undo-tree-id16374 . -2) (undo-tree-id16375 . -2) (undo-tree-id16376 . -2) (undo-tree-id16377 . -2) (undo-tree-id16378 . -2) (undo-tree-id16379 . -2) (undo-tree-id16380 . -2) (undo-tree-id16381 . -2) (undo-tree-id16382 . -2) (undo-tree-id16383 . -2) (undo-tree-id16384 . -2) (undo-tree-id16385 . -2) (undo-tree-id16386 . -2) (undo-tree-id16387 . -2) 2358 (2339 . 2358) (2338 . 2339) (#(" " 0 1 (fontified t)) . -2338) (undo-tree-id16388 . -1) 2339 (2337 . 2339) (2316 . 2337) (2302 . 2316) (2293 . 2302) (t 24969 58554 1138 613000) 2257) nil (24969 58747 931986 569000) 0 nil]) ((2357 . 2361) (2356 . 2357)) nil (24969 58553 744592 576000) 0 nil]) ((2343 . 2348) (t 24969 58547 753721 342000)) nil (24969 58553 744599 635000) 0 nil]) ((2240 . 2243) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -2240) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) 2241 (2238 . 2241) (t 24969 58540 688756 808000)) nil (24969 58547 501039 332000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-variable-name-face)) . 2238) (undo-tree-id16176 . -4) (undo-tree-id16177 . -4) (undo-tree-id16178 . -4) (undo-tree-id16179 . -4) (undo-tree-id16180 . -4) (undo-tree-id16181 . -4) (undo-tree-id16182 . -4) (undo-tree-id16183 . -4) (undo-tree-id16184 . -4) (undo-tree-id16185 . -4) (undo-tree-id16186 . -4) (undo-tree-id16187 . -4) (undo-tree-id16188 . -4) (undo-tree-id16189 . -4) (undo-tree-id16190 . -4) (undo-tree-id16191 . -4) (undo-tree-id16192 . -4) (undo-tree-id16193 . -4) (undo-tree-id16194 . -4) (undo-tree-id16195 . -4) (undo-tree-id16196 . -4) (undo-tree-id16197 . -4) (undo-tree-id16198 . -4) (undo-tree-id16199 . -4) (undo-tree-id16200 . -4) (undo-tree-id16201 . -4) (undo-tree-id16202 . -4) (undo-tree-id16203 . -4) (undo-tree-id16204 . -4) (undo-tree-id16205 . -4) (undo-tree-id16206 . -4) (undo-tree-id16207 . -4) (undo-tree-id16208 . -4) (undo-tree-id16209 . -4) (undo-tree-id16210 . -4) (undo-tree-id16211 . -4) (undo-tree-id16212 . -4) (undo-tree-id16213 . -4) 2242) nil (24969 58540 449180 156000) 0 nil]) ((#("." 0 1 (fontified t)) . 2242) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) 2243 (t 24969 58536 123289 682000)) nil (24969 58540 449218 525000) 0 nil]) ((#("," 0 1 (fontified t)) . -2160) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (#(" " 0 1 (fontified t)) . -2161) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) 2162 (2160 . 2162) (t 24969 58523 855408 677000)) nil (24969 58535 868931 803000) 0 nil]) ((2939 . 2951) (#(" " 0 1 (fontified t)) . -2939) (undo-tree-id16139 . -1) 2940 (2931 . 2940) (2926 . 2931) (t 24969 58507 310963 579000) 2898) nil (24969 58523 603291 116000) 0 nil]) ((#("pygame.draw.circle(screen, (255, 0, 0), (30, 30), 10)
" 0 7 (fontified t) 7 12 (fontified t) 12 14 (fontified t) 14 15 (fontified t) 15 17 (fontified t) 17 25 (fontified t) 25 28 (fontified t) 28 31 (fontified t face highlight-numbers-number) 31 33 (fontified t) 33 34 (fontified t face highlight-numbers-number) 34 36 (fontified t) 36 37 (fontified t face highlight-numbers-number) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 43 (fontified t face highlight-numbers-number) 43 45 (fontified t) 45 47 (fontified t face highlight-numbers-number) 47 48 (fontified t) 48 50 (fontified t) 50 52 (fontified t face highlight-numbers-number) 52 54 (fontified t)) . 2679) (undo-tree-id16122 . -54) (undo-tree-id16123 . -54) (undo-tree-id16124 . -54) (undo-tree-id16125 . -50) (undo-tree-id16126 . -50) (undo-tree-id16127 . -50) (undo-tree-id16128 . -50) (undo-tree-id16129 . -50) (undo-tree-id16130 . -50) (undo-tree-id16131 . -50) (undo-tree-id16132 . -50) (undo-tree-id16133 . -50) (undo-tree-id16134 . -50) (undo-tree-id16135 . -50) (undo-tree-id16136 . -50) (undo-tree-id16137 . -50) (undo-tree-id16138 . -50) 2729 (t 24969 58501 612876 764000)) nil (24969 58507 69013 390000) 0 nil]) ((2648 . 2649) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 2648)) nil (24969 58501 359314 566000) 0 nil]) ((2675 . 2678) (#("3" 0 1 (fontified t face highlight-numbers-number)) . -2675) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -2676) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) 2677 (2675 . 2677) (#("4" 0 1 (fontified t face highlight-numbers-number)) . -2675) (undo-tree-id15767 . -1) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -2676) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) 2677 (2672 . 2677) (#("3" 0 1 (fontified t face highlight-numbers-number)) . -2672) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) 2673 (2664 . 2673) (#("(" 0 1 (fontified t)) . -2664) (undo-tree-id15817 . -1) 2665 (2658 . 2665) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -2658) (undo-tree-id15818 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -2659) (undo-tree-id15819 . -1) (#(" " 0 1 (fontified t)) . -2660) (undo-tree-id15820 . -1) 2661 (2657 . 2661) (2636 . 2657) (#("shot" 0 4 (fontified t face font-lock-string-face)) . -2636) (undo-tree-id15821 . -4) (undo-tree-id15822 . -4) 2640) nil (24969 58501 359472 990000) 0 nil]) ((2556 . 2560)) nil (24969 58501 359485 880000) 0 nil]) ((#("bullet" 0 6 (fontified t face font-lock-string-face)) . 2556) (undo-tree-id15823 . -6) (undo-tree-id15824 . -6) (undo-tree-id15825 . -3) (undo-tree-id15826 . -3) (undo-tree-id15827 . -3) (undo-tree-id15828 . -4) (undo-tree-id15829 . -4) (undo-tree-id15830 . -4) (undo-tree-id15831 . -4) (undo-tree-id15832 . -4) (undo-tree-id15833 . -5) (undo-tree-id15834 . -5) (undo-tree-id15835 . -5) (undo-tree-id15836 . -5) (undo-tree-id15837 . -5) (undo-tree-id15838 . -6) (undo-tree-id15839 . -6) (undo-tree-id15840 . -6) (undo-tree-id15841 . -6) (undo-tree-id15842 . -6) (undo-tree-id15843 . -6) (undo-tree-id15844 . -6) (undo-tree-id15845 . -6) (undo-tree-id15846 . -6) (undo-tree-id15847 . -6) (undo-tree-id15848 . -6) (undo-tree-id15849 . -6) (undo-tree-id15850 . -6) (undo-tree-id15851 . -6) (undo-tree-id15852 . -6) (undo-tree-id15853 . -6) (undo-tree-id15854 . -6) (undo-tree-id15855 . -6) (undo-tree-id15856 . -5) (undo-tree-id15857 . -5) (undo-tree-id15858 . -5) (undo-tree-id15859 . -5) (undo-tree-id15860 . -5) (undo-tree-id15861 . -5) (undo-tree-id15862 . -5) (undo-tree-id15863 . -5) (undo-tree-id15864 . -5) (undo-tree-id15865 . -5) (undo-tree-id15866 . -5) (undo-tree-id15867 . -5) (undo-tree-id15868 . -5) (undo-tree-id15869 . -5) (undo-tree-id15870 . -5) (undo-tree-id15871 . -5) (undo-tree-id15872 . -5) (undo-tree-id15873 . -5) (undo-tree-id15874 . -5) (undo-tree-id15875 . -5) (undo-tree-id15876 . -5) (undo-tree-id15877 . -5) (undo-tree-id15878 . -5) (undo-tree-id15879 . -5) (undo-tree-id15880 . -5) (undo-tree-id15881 . -5) (undo-tree-id15882 . -5) (undo-tree-id15883 . -5) (undo-tree-id15884 . -5) (undo-tree-id15885 . -5) (undo-tree-id15886 . -5) (undo-tree-id15887 . -5) (undo-tree-id15888 . -5) (undo-tree-id15889 . -5) (undo-tree-id15890 . -5) (undo-tree-id15891 . -5) (undo-tree-id15892 . -5) (undo-tree-id15893 . -5) (undo-tree-id15894 . -5) (undo-tree-id15895 . -5) (undo-tree-id15896 . -5) (undo-tree-id15897 . -5) (undo-tree-id15898 . -5) (undo-tree-id15899 . -5) (undo-tree-id15900 . -5) (undo-tree-id15901 . -5) (undo-tree-id15902 . -5) (undo-tree-id15903 . -6) (undo-tree-id15904 . -6) (undo-tree-id15905 . -6) (undo-tree-id15906 . -6) (undo-tree-id15907 . -6) (undo-tree-id15908 . -6) (undo-tree-id15909 . -6) (undo-tree-id15910 . -6) (undo-tree-id15911 . -6) (undo-tree-id15912 . -6) (undo-tree-id15913 . -6) (undo-tree-id15914 . -6) (undo-tree-id15915 . -6) (undo-tree-id15916 . -6) (undo-tree-id15917 . -6) (undo-tree-id15918 . -6) (undo-tree-id15919 . -6) (undo-tree-id15920 . -6) (undo-tree-id15921 . -6) (undo-tree-id15922 . -6) 2562) nil (24969 58501 360058 952000) 0 nil]) ((2556 . 2562)) nil (24969 58501 360069 158000) 0 nil]) ((#("shit" 0 4 (fontified t face font-lock-string-face)) . 2556) (undo-tree-id15923 . -4) (undo-tree-id15924 . -4) (undo-tree-id15925 . -1) (undo-tree-id15926 . -1) (undo-tree-id15927 . -1) (undo-tree-id15928 . -1) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (undo-tree-id15938 . -1) (undo-tree-id15939 . -1) (undo-tree-id15940 . -1) (undo-tree-id15941 . -1) (undo-tree-id15942 . -1) (undo-tree-id15943 . -1) (undo-tree-id15944 . -1) (undo-tree-id15945 . -1) (undo-tree-id15946 . -2) (undo-tree-id15947 . -2) (undo-tree-id15948 . -2) (undo-tree-id15949 . -2) (undo-tree-id15950 . -2) (undo-tree-id15951 . -3) (undo-tree-id15952 . -3) (undo-tree-id15953 . -3) (undo-tree-id15954 . -3) (undo-tree-id15955 . -3) (undo-tree-id15956 . -3) (undo-tree-id15957 . -3) (undo-tree-id15958 . -3) (undo-tree-id15959 . -3) (undo-tree-id15960 . -3) (undo-tree-id15961 . -3) (undo-tree-id15962 . -3) (undo-tree-id15963 . -3) (undo-tree-id15964 . -3) (undo-tree-id15965 . -3) (undo-tree-id15966 . -3) (undo-tree-id15967 . -3) (undo-tree-id15968 . -3) (undo-tree-id15969 . -4) (undo-tree-id15970 . -4) (undo-tree-id15971 . -4) (undo-tree-id15972 . -4) (undo-tree-id15973 . -4) (undo-tree-id15974 . -4) (undo-tree-id15975 . -4) (undo-tree-id15976 . -4) (undo-tree-id15977 . -4) (undo-tree-id15978 . -4) (undo-tree-id15979 . -4) (undo-tree-id15980 . -4) (undo-tree-id15981 . -4) (undo-tree-id15982 . -4) (undo-tree-id15983 . -4) (undo-tree-id15984 . -4) (undo-tree-id15985 . -4) (undo-tree-id15986 . -4) (undo-tree-id15987 . -4) (undo-tree-id15988 . -4) (undo-tree-id15989 . -4) (undo-tree-id15990 . -4) (undo-tree-id15991 . -4) (undo-tree-id15992 . -4) (undo-tree-id15993 . -4) (undo-tree-id15994 . -4) (undo-tree-id15995 . -4) (undo-tree-id15996 . -4) (undo-tree-id15997 . -4) (undo-tree-id15998 . -4) (undo-tree-id15999 . -4) (undo-tree-id16000 . -4) (undo-tree-id16001 . -3) (undo-tree-id16002 . -3) (undo-tree-id16003 . -3) (undo-tree-id16004 . -3) (undo-tree-id16005 . -3) (undo-tree-id16006 . -3) (undo-tree-id16007 . -3) (undo-tree-id16008 . -3) (undo-tree-id16009 . -3) (undo-tree-id16010 . -3) (undo-tree-id16011 . -3) (undo-tree-id16012 . -3) (undo-tree-id16013 . -3) (undo-tree-id16014 . -3) (undo-tree-id16015 . -3) (undo-tree-id16016 . -3) (undo-tree-id16017 . -3) (undo-tree-id16018 . -3) (undo-tree-id16019 . -3) (undo-tree-id16020 . -3) (undo-tree-id16021 . -3) (undo-tree-id16022 . -3) (undo-tree-id16023 . -3) (undo-tree-id16024 . -3) (undo-tree-id16025 . -3) (undo-tree-id16026 . -3) (undo-tree-id16027 . -3) (undo-tree-id16028 . -3) (undo-tree-id16029 . -3) (undo-tree-id16030 . -3) (undo-tree-id16031 . -3) (undo-tree-id16032 . -3) (undo-tree-id16033 . -3) (undo-tree-id16034 . -3) (undo-tree-id16035 . -3) (undo-tree-id16036 . -3) (undo-tree-id16037 . -3) (undo-tree-id16038 . -3) (undo-tree-id16039 . -3) (undo-tree-id16040 . -3) (undo-tree-id16041 . -4) (undo-tree-id16042 . -4) (undo-tree-id16043 . -4) (undo-tree-id16044 . -4) (undo-tree-id16045 . -4) (undo-tree-id16046 . -4) (undo-tree-id16047 . -4) (undo-tree-id16048 . -4) (undo-tree-id16049 . -4) (undo-tree-id16050 . -4) (undo-tree-id16051 . -4) (undo-tree-id16052 . -4) (undo-tree-id16053 . -4) (undo-tree-id16054 . -4) (undo-tree-id16055 . -4) (undo-tree-id16056 . -4) (undo-tree-id16057 . -4) (undo-tree-id16058 . -4) (undo-tree-id16059 . -4) (undo-tree-id16060 . -4) 2560) nil (24969 58501 360318 11000) 0 nil]) ((2556 . 2560) (#("b" 0 1 (fontified t face font-lock-string-face)) . -2556) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) 2557 (2556 . 2557)) nil (24969 58501 360335 187000) 0 nil]) ((#("bullet" 0 1 (fontified t face font-lock-string-face) 1 6 (fontified t face font-lock-string-face)) . 2556) (undo-tree-id16063 . -6) (undo-tree-id16064 . -6) (undo-tree-id16065 . -5) (undo-tree-id16066 . -5) (undo-tree-id16067 . -5) (undo-tree-id16068 . -5) (undo-tree-id16069 . -5) (undo-tree-id16070 . -5) (undo-tree-id16071 . -5) (undo-tree-id16072 . -5) (undo-tree-id16073 . -5) (undo-tree-id16074 . -5) (undo-tree-id16075 . -5) (undo-tree-id16076 . -5) (undo-tree-id16077 . -5) (undo-tree-id16078 . -5) (undo-tree-id16079 . -5) (undo-tree-id16080 . -5) (undo-tree-id16081 . -5) (undo-tree-id16082 . -5) (undo-tree-id16083 . -5) (undo-tree-id16084 . -5) (undo-tree-id16085 . -5) (undo-tree-id16086 . -5) (undo-tree-id16087 . -5) (undo-tree-id16088 . -5) (undo-tree-id16089 . -5) (undo-tree-id16090 . -5) (undo-tree-id16091 . -6) (undo-tree-id16092 . -6) (undo-tree-id16093 . -6) (undo-tree-id16094 . -6) (undo-tree-id16095 . -6) (undo-tree-id16096 . -6) (undo-tree-id16097 . -6) (undo-tree-id16098 . -6) (undo-tree-id16099 . -6) (undo-tree-id16100 . -6) (undo-tree-id16101 . -6) (undo-tree-id16102 . -6) (undo-tree-id16103 . -6) (undo-tree-id16104 . -6) (undo-tree-id16105 . -6) (undo-tree-id16106 . -6) (undo-tree-id16107 . -6) (undo-tree-id16108 . -6) (undo-tree-id16109 . -6) (undo-tree-id16110 . -6) (undo-tree-id16111 . -6) (undo-tree-id16112 . -6) (undo-tree-id16113 . -6) (undo-tree-id16114 . -6) (undo-tree-id16115 . -6) (undo-tree-id16116 . -6) (undo-tree-id16117 . -6) 2562) nil (24969 58501 360422 802000) 0 nil]) ((2636 . 2642) (2610 . 2636) (#("GameObject" 0 10 (fontified t)) . -2610) (undo-tree-id16118 . -10) 2620 (2616 . 2620) (2610 . 2616) (#("g" 0 1 (fontified t)) . -2610) (undo-tree-id16119 . -1) (#("a" 0 1 (fontified t)) . -2611) (undo-tree-id16120 . -1) (#("m" 0 1 (fontified t)) . -2612) (undo-tree-id16121 . -1) 2613 (2600 . 2613) (2599 . 2600) (t 24969 58428 805333 925000) 2544) nil (24969 58501 360440 490000) 0 nil]) ((2384 . 2385)) nil (24969 58428 562523 833000) 0 nil]) ((2383 . 2384) (t 24969 58423 226212 292000)) nil (24969 58428 562547 440000) 0 nil]) ((2375 . 2383) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -2375) (undo-tree-id15724 . -1) (#("," 0 1 (fontified t)) . -2376) (undo-tree-id15725 . -1) 2377 (2374 . 2377)) nil (24969 58422 988319 209000) 0 nil]) ((2367 . 2374) (2360 . 2367) (#("r" 0 1 (fontified t)) . -2360) (undo-tree-id15726 . -1) 2361 (2351 . 2361) (#("player_" 0 7 (fontified t)) . -2351) (undo-tree-id15727 . -7) 2358 (#("img." 0 4 (fontified t)) . -2358) (undo-tree-id15728 . -4) 2362 (2351 . 2362) (2348 . 2351) (2343 . 2348) (2336 . 2343) (#("." 0 1 (fontified t)) . -2336) (undo-tree-id15729 . -1) (#(" " 0 1 (fontified t)) . -2337) (undo-tree-id15730 . -1) 2338 (2331 . 2338) (#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -2331) (undo-tree-id15731 . -5) 2336 (#("sprite " 0 7 (fontified t)) . -2336) (undo-tree-id15732 . -7) 2343 (2339 . 2343) (#("e" 0 1 (fontified t)) . -2339) (undo-tree-id15733 . -1) (#("i" 0 1 (fontified t)) . -2340) (undo-tree-id15734 . -1) 2341 (2331 . 2341) (#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -2331) (undo-tree-id15735 . -5) 2336 (#("sprite " 0 7 (fontified t)) . -2336) (undo-tree-id15736 . -7) 2343 (2339 . 2343) (#("i" 0 1 (fontified t)) . -2339) (undo-tree-id15737 . -1) (#("e" 0 1 (fontified t)) . -2340) (undo-tree-id15738 . -1) 2341 (2331 . 2341) (2322 . 2331) (t 24969 58313 208829 526000) 2307) nil (24969 58422 988362 285000) 0 nil]) ((2238 . 2243) (t 24969 58311 130497 792000)) nil (24969 58312 966468 313000) 0 nil]) (2246) nil (24969 58312 966476 114000) 0 nil]) ((2238 . 2247)) nil (24969 58310 877191 391000) 0 nil]) ((nil rear-nonsticky nil 2237 . 2238) (#("
" 0 1 (fontified nil)) . -2279) (2229 . 2280) 2163) nil (24969 58310 877199 250000) 0 nil]) ((#("        pygame.image.load(\"bullet.png\").convert()
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #1#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #1#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #1#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #1#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #4=((#<marker at 2464 in main.py> . #<marker at 2465 in main.py>) . #1#)) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #4#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #4#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #4#) fontified t) 8 26 (fontified t) 26 38 (fontified t face font-lock-string-face) 38 49 (fontified t) 49 50 (fontified t)) . 2259) (undo-tree-id15583 . -50) (undo-tree-id15584 . -50) (undo-tree-id15585 . -50) (undo-tree-id15586 . -50) (undo-tree-id15587 . 1) (undo-tree-id15588 . -50) (undo-tree-id15589 . -50) (undo-tree-id15590 . -50) (undo-tree-id15591 . -50) (undo-tree-id15592 . -50) (undo-tree-id15593 . -50) (undo-tree-id15594 . -50) (undo-tree-id15595 . -50) (undo-tree-id15596 . -50) (undo-tree-id15597 . -50) (undo-tree-id15598 . -48) (undo-tree-id15599 . -48) (undo-tree-id15600 . -48) (undo-tree-id15601 . -48) (undo-tree-id15602 . -48) (undo-tree-id15603 . -48) (undo-tree-id15604 . -48) (undo-tree-id15605 . -48) (undo-tree-id15606 . -48) (undo-tree-id15607 . -48) (undo-tree-id15608 . -48) (undo-tree-id15609 . -48) (undo-tree-id15610 . -48) (undo-tree-id15611 . -48) (undo-tree-id15612 . -48) (undo-tree-id15613 . -48) (undo-tree-id15614 . -48) (undo-tree-id15615 . -48) (undo-tree-id15616 . -48) (undo-tree-id15617 . -48) (undo-tree-id15618 . -48) (undo-tree-id15619 . -48) (undo-tree-id15620 . -48) (undo-tree-id15621 . -48) (undo-tree-id15622 . -48) (undo-tree-id15623 . -48) (undo-tree-id15624 . -48) (undo-tree-id15625 . -48) (undo-tree-id15626 . -48) (undo-tree-id15627 . -48) (undo-tree-id15628 . -48) (undo-tree-id15629 . -48) (undo-tree-id15630 . -48) (undo-tree-id15631 . -48) (undo-tree-id15632 . -48) (undo-tree-id15633 . -48) (undo-tree-id15634 . -48) (undo-tree-id15635 . -48) (undo-tree-id15636 . -48) (undo-tree-id15637 . -48) (undo-tree-id15638 . -48) (undo-tree-id15639 . -48) (undo-tree-id15640 . -48) (undo-tree-id15641 . -48) (undo-tree-id15642 . -48) (undo-tree-id15643 . -48) (undo-tree-id15644 . -48) (undo-tree-id15645 . -48) (undo-tree-id15646 . -48) (undo-tree-id15647 . -48) (undo-tree-id15648 . -48) (undo-tree-id15649 . -48) (undo-tree-id15650 . -48) (undo-tree-id15651 . -48) (undo-tree-id15652 . -48) (undo-tree-id15653 . -48) (undo-tree-id15654 . -48) (undo-tree-id15655 . -48) (undo-tree-id15656 . -48) (undo-tree-id15657 . -48) (undo-tree-id15658 . -48) (undo-tree-id15659 . -48) (undo-tree-id15660 . -48) (undo-tree-id15661 . -48) (undo-tree-id15662 . -48) (undo-tree-id15663 . -48) (undo-tree-id15664 . -48) (undo-tree-id15665 . -48) (undo-tree-id15666 . -48) (undo-tree-id15667 . -48) (undo-tree-id15668 . -48) (undo-tree-id15669 . -48) (undo-tree-id15670 . -48) (undo-tree-id15671 . -48) (undo-tree-id15672 . -48) (undo-tree-id15673 . -48) (undo-tree-id15674 . -48) (undo-tree-id15675 . -48) (undo-tree-id15676 . -48) (undo-tree-id15677 . -48) (undo-tree-id15678 . -48) (undo-tree-id15679 . -48) (undo-tree-id15680 . -48) (undo-tree-id15681 . -48) (undo-tree-id15682 . -48) (undo-tree-id15683 . -48) (undo-tree-id15684 . -48) (undo-tree-id15685 . -48) (undo-tree-id15686 . -48) (undo-tree-id15687 . -48) (undo-tree-id15688 . -48) (undo-tree-id15689 . -48) (undo-tree-id15690 . -48) (undo-tree-id15691 . -48) (undo-tree-id15692 . -48) (undo-tree-id15693 . -48) (undo-tree-id15694 . -48) (undo-tree-id15695 . -48) (undo-tree-id15696 . -48) (undo-tree-id15697 . -48) (undo-tree-id15698 . -48) (undo-tree-id15699 . -48) (undo-tree-id15700 . -48) (undo-tree-id15701 . -48) (undo-tree-id15702 . -48) (undo-tree-id15703 . -48) (undo-tree-id15704 . -48) (undo-tree-id15705 . -48) (undo-tree-id15706 . -48) (undo-tree-id15707 . -48) (undo-tree-id15708 . -48) (undo-tree-id15709 . -48) (undo-tree-id15710 . -48) (undo-tree-id15711 . -48) (undo-tree-id15712 . -48) (undo-tree-id15713 . -48) (undo-tree-id15714 . -48) (undo-tree-id15715 . -48) (undo-tree-id15716 . -48) (undo-tree-id15717 . -48) (undo-tree-id15718 . -48) (undo-tree-id15719 . -48) (undo-tree-id15720 . -48) (undo-tree-id15721 . -48) (undo-tree-id15722 . -48) (undo-tree-id15723 . -48) 2307 (t 24969 58299 484980 79000)) nil (24969 58310 877472 117000) 0 nil]) ((2298 . 2308) (t 24969 58292 199646 190000)) nil (24969 58299 229846 520000) 0 nil]) ((2296 . 2298) (2285 . 2296) (2274 . 2285) (#("draw." 0 5 (fontified t)) . -2274) (undo-tree-id15580 . -5) 2279 (#("image" 0 5 (fontified t)) . -2279) (undo-tree-id15581 . -5) 2284 (2279 . 2284) (#(" " 0 1 (fontified t)) . -2279) (undo-tree-id15582 . -1) 2280 (2274 . 2280) (t 24969 58104 82053 757000)) nil (24969 58291 943137 319000) 0 nil]) ((585 . 586) (t 24969 58093 936129 360000)) nil (24969 58103 829940 409000) 0 nil]) ((448 . 464) (439 . 448) (437 . 439) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -437) (undo-tree-id15475 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -438) (undo-tree-id15476 . -1) 439 (437 . 439) (#("c" 0 1 (fontified t)) . -437) (undo-tree-id15477 . -1) (#("u" 0 1 (fontified t)) . -438) (undo-tree-id15478 . -1) (#("m" 0 1 (fontified t)) . -439) (undo-tree-id15479 . -1) 440 (429 . 440) (#("height" 0 6 (fontified t)) . -429) (undo-tree-id15480 . -6) 435 (424 . 435) (415 . 424) 414) nil (24969 58093 685006 400000) 0 nil]) ((#(" " 0 1 (fontified t)) . -536) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (undo-tree-id15489 . -1) 537 (534 . 537) (#("g" 0 1 (fontified t)) . -534) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (#("t" 0 1 (fontified t)) . -535) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (undo-tree-id15540 . -1) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) (undo-tree-id15545 . -1) (undo-tree-id15546 . -1) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (undo-tree-id15549 . -1) (undo-tree-id15550 . -1) (undo-tree-id15551 . -1) (undo-tree-id15552 . -1) (undo-tree-id15553 . -1) (undo-tree-id15554 . -1) (undo-tree-id15555 . -1) (undo-tree-id15556 . -1) 536 (530 . 536) (509 . 530) (500 . 509) (#("," 0 1 (fontified t)) . -500) (undo-tree-id15557 . -1) (#("x" 0 1 (fontified t)) . -501) (undo-tree-id15558 . -1) (#("," 0 1 (fontified t)) . -502) (undo-tree-id15559 . -1) (#(" " 0 1 (fontified t)) . -503) (undo-tree-id15560 . -1) (#("s" 0 1 (fontified t)) . -504) (undo-tree-id15561 . -1) (#("e" 0 1 (fontified t)) . -505) (undo-tree-id15562 . -1) 506 (493 . 506) (#(" " 0 1 (fontified t)) . -493) (undo-tree-id15563 . -1) 494 (493 . 494) (#(" " 0 1 (fontified t)) . -493) (undo-tree-id15564 . -1) (#(" " 0 1 (fontified t)) . -494) (undo-tree-id15565 . -1) 495 (477 . 495) (#(" " 0 1 (fontified t)) . -477) (undo-tree-id15566 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -478) (undo-tree-id15567 . -1) (#("5" 0 1 (fontified t face highlight-numbers-number)) . -479) (undo-tree-id15568 . -1) 480 (474 . 480) (#("e" 0 1 (fontified t)) . -474) (undo-tree-id15569 . -1) (#("," 0 1 (fontified t)) . -475) (undo-tree-id15570 . -1) (#(" " 0 1 (fontified t)) . -476) (undo-tree-id15571 . -1) 477 (459 . 477) (#("," 0 1 (fontified t)) . -459) (undo-tree-id15572 . -1) (#(" " 0 1 (fontified t)) . -460) (undo-tree-id15573 . -1) (#("d" 0 1 (fontified t)) . -461) (undo-tree-id15574 . -1) (#("r" 0 1 (fontified t)) . -462) (undo-tree-id15575 . -1) (#("a" 0 1 (fontified t)) . -463) (undo-tree-id15576 . -1) 464 (453 . 464) (#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -453) (undo-tree-id15577 . -5) 458 (#("draw" 0 4 (fontified t)) . -458) (undo-tree-id15578 . -4) 462 (458 . 462) (#(" " 0 1 (fontified t)) . -458) (undo-tree-id15579 . -1) 459 (453 . 459) (444 . 453) (443 . 444) (t 24969 58040 259094 380000)) nil (24969 58093 685194 153000) 0 nil]) ((#(" " 0 1 (fontified t)) . -443) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) 444 (442 . 444) (#(" " 0 1 (fontified t)) . -442) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (#(")" 0 1 (fontified t)) . -443) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) 444 (434 . 444) (#("," 0 1 (fontified t)) . -434) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -1) (undo-tree-id15455 . -1) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (#(" " 0 1 (fontified t)) . -435) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (undo-tree-id15462 . -1) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (undo-tree-id15465 . -1) 436 (430 . 436) (#(" " 0 1 (fontified t)) . -430) (undo-tree-id15466 . -1) 431 (425 . 431) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -425) (undo-tree-id15467 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -426) (undo-tree-id15468 . -1) (#("D" 0 1 (fontified t face font-lock-function-name-face)) . -427) (undo-tree-id15469 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -428) (undo-tree-id15470 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -429) (undo-tree-id15471 . -1) 430 (421 . 430) (#("    " 0 4 (fontified t)) . -421) (undo-tree-id15472 . -4) 425 (417 . 425) (#("    " 0 4 (fontified nil)) . 416) (undo-tree-id15473 . -4) (420 . 421) (#("    " 0 4 (fontified t)) . -420) (undo-tree-id15474 . -4) 424 (415 . 424) (t 24969 58028 97214 688000) 414) nil (24969 58040 59 611000) 0 nil]) ((#(" " 0 1 (fontified t)) . -415) (undo-tree-id15320 . -1) (undo-tree-id15321 . -1) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) 416 (405 . 416) (#("p" 0 1 (fontified t)) . -405) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) 406 (397 . 406) (#(">" 0 1 (fontified t)) . -397) (undo-tree-id15372 . -1) 398 (391 . 398) (#("i" 0 1 (fontified t)) . -391) (undo-tree-id15373 . -1) 392 (383 . 392) (374 . 383) (#(" " 0 1 (fontified t)) . -374) (undo-tree-id15374 . -1) 375 (364 . 375) (#("o" 0 1 (fontified t)) . -364) (undo-tree-id15375 . -1) 365 (358 . 365) (#("p" 0 1 (fontified t)) . -358) (undo-tree-id15376 . -1) (#("l" 0 1 (fontified t)) . -359) (undo-tree-id15377 . -1) (#("a" 0 1 (fontified t)) . -360) (undo-tree-id15378 . -1) (#("y" 0 1 (fontified t)) . -361) (undo-tree-id15379 . -1) 362 (360 . 362) (339 . 360) (334 . 339) (#(" " 0 1 (fontified t)) . -334) (undo-tree-id15380 . -1) 335 (321 . 335) (#(" " 0 1 (fontified t)) . -321) (undo-tree-id15381 . -1) 322 (310 . 322) (#("B" 0 1 (fontified t face font-lock-type-face)) . -310) (undo-tree-id15382 . -1) 311 (299 . 311) (#("    " 0 4 (fontified t)) . -299) (undo-tree-id15383 . -4) 303 (298 . 303) (#("    " 0 4 (fontified t)) . -298) (undo-tree-id15384 . -4) 302 (297 . 302) 211) nil (24969 58027 838872 683000) 0 nil]) ((1978 . 1985) (#("p" 0 1 (fontified t)) . -1978) (undo-tree-id15385 . -1) (#("p" 0 1 (fontified t)) . -1979) (undo-tree-id15386 . -1) (#("y" 0 1 (fontified t)) . -1980) (undo-tree-id15387 . -1) 1981 (1979 . 1981) (#("a" 0 1 (fontified t)) . -1979) (undo-tree-id15388 . -1) (#("s" 0 1 (fontified t)) . -1980) (undo-tree-id15389 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -1981) (undo-tree-id15390 . -1) 1982 (t 24969 57928 136203 54000)) nil (24969 58027 838903 15000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1983) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1)) nil (24969 57927 892261 858000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1983) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1)) nil (24969 57927 892283 469000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1983) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1)) nil (24969 57927 892291 814000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1983) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1)) nil (24969 57927 892301 202000) 0 nil]) ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1983) (undo-tree-id15301 . -5) (undo-tree-id15302 . -5) (undo-tree-id15303 . -5) (undo-tree-id15304 . -3) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -3) (undo-tree-id15308 . -3) (undo-tree-id15309 . -3) (undo-tree-id15310 . -3) (undo-tree-id15311 . -3) (undo-tree-id15312 . -3) (undo-tree-id15313 . -3) (undo-tree-id15314 . -3) (undo-tree-id15315 . -3) (undo-tree-id15316 . -3) (undo-tree-id15317 . -3) (undo-tree-id15318 . -3) (undo-tree-id15319 . -3) 1986 (t 24969 57923 120209 85000)) nil (24969 57927 892336 809000) 0 nil]) ((#(";" 0 1 (fontified t)) . 1982) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1)) nil (24969 57922 869871 412000) 0 nil]) ((1978 . 1983) (1969 . 1978) (1968 . 1969) (t 24969 57919 293213 687000)) nil (24969 57922 869879 87000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1968) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (undo-tree-id15236 . -1) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) 1969 (1966 . 1969) (#("N" 0 1 (fontified t)) . -1966) (undo-tree-id15240 . -1) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (undo-tree-id15260 . -1) (#(" " 0 1 (fontified t)) . -1967) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) 1968 (1954 . 1968) (t 24969 57911 611222 924000)) nil (24969 57919 39330 253000) 0 nil]) ((#("        " 0 8 (fontified t)) . -1599) (undo-tree-id15138 . -8) (undo-tree-id15139 . -8) (undo-tree-id15140 . -8) (undo-tree-id15141 . -8) (undo-tree-id15142 . -8) (undo-tree-id15143 . -8) (undo-tree-id15144 . -8) (undo-tree-id15145 . -8) (undo-tree-id15146 . -8) (undo-tree-id15147 . -8) (undo-tree-id15148 . -8) 1607 (1598 . 1607) 1556) nil (24969 57911 359435 135000) 0 nil]) ((nil rear-nonsticky nil 1602 . 1603) (#("
" 0 1 (fontified nil)) . -1715) (1598 . 1716) 1552) nil (24969 57911 359444 963000) 0 nil]) ((#("    def draw(self, screen):
        pygame.draw.rect(screen, (255, 0, 0), (self.x, self.y, self.width, self.height))
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #5=((#<marker at 2064 in main.py> . #<marker at 2465 in main.py>))) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #5#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #5#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #5#) fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face font-lock-function-name-face) 9 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 17 (fontified t face font-lock-keyword-face) 17 22 (fontified t) 22 28 (fontified t) 28 29 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #5#) fontified t face highlight-indent-guides-even-face) 29 30 (highlight-indent-guides-prop (0 nil nil 1 nil #5#) fontified t) 30 31 (highlight-indent-guides-prop (0 nil nil 1 nil #5#) fontified t) 31 32 (highlight-indent-guides-prop (0 nil nil 1 nil #5#) fontified t) 32 33 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #6=((#<marker at 2464 in main.py> . #<marker at 2465 in main.py>) . #5#)) fontified t face highlight-indent-guides-odd-face) 33 34 (highlight-indent-guides-prop (1 nil nil 1 nil #6#) fontified t) 34 35 (highlight-indent-guides-prop (1 nil nil 1 nil #6#) fontified t) 35 36 (highlight-indent-guides-prop (1 nil nil 1 nil #6#) fontified t) 36 37 (fontified t) 37 42 (fontified t) 42 55 (fontified t) 55 56 (fontified t) 56 62 (fontified t) 62 64 (fontified t face highlight-numbers-number) 64 65 (fontified t face highlight-numbers-number) 65 67 (fontified t) 67 68 (fontified t face highlight-numbers-number) 68 70 (fontified t) 70 71 (fontified t face highlight-numbers-number) 71 75 (fontified t) 75 79 (fontified t face font-lock-keyword-face) 79 83 (fontified t) 83 87 (fontified t face font-lock-keyword-face) 87 91 (fontified t) 91 95 (fontified t face font-lock-keyword-face) 95 96 (fontified t) 96 101 (fontified t) 101 103 (fontified t) 103 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t) 108 109 (fontified t) 109 114 (fontified t) 114 116 (fontified t) 116 117 (fontified t)) . 1846) (undo-tree-id15149 . -28) (undo-tree-id15150 . -117) (undo-tree-id15151 . -39) (undo-tree-id15152 . -11) (undo-tree-id15153 . -39) (undo-tree-id15154 . -39) (undo-tree-id15155 . -28) (undo-tree-id15156 . -28) (undo-tree-id15157 . -117) (undo-tree-id15158 . -117) (undo-tree-id15159 . -28) (undo-tree-id15160 . -4) (undo-tree-id15161 . -7) (undo-tree-id15162 . -107) (undo-tree-id15163 . -108) (undo-tree-id15164 . -11) (undo-tree-id15165 . -11) (undo-tree-id15166 . -11) (undo-tree-id15167 . -11) (undo-tree-id15168 . -11) (undo-tree-id15169 . -117) (undo-tree-id15170 . -11) (undo-tree-id15171 . -39) (undo-tree-id15172 . -11) (undo-tree-id15173 . -11) (undo-tree-id15174 . -11) (undo-tree-id15175 . -11) (undo-tree-id15176 . -11) (undo-tree-id15177 . -11) (undo-tree-id15178 . -11) (undo-tree-id15179 . -11) (undo-tree-id15180 . -11) (undo-tree-id15181 . -11) (undo-tree-id15182 . -11) (undo-tree-id15183 . -11) (undo-tree-id15184 . -39) (undo-tree-id15185 . -39) (undo-tree-id15186 . -39) (undo-tree-id15187 . -39) (undo-tree-id15188 . -39) (undo-tree-id15189 . -28) (undo-tree-id15190 . -39) (undo-tree-id15191 . -39) (undo-tree-id15192 . -39) (undo-tree-id15193 . -39) (undo-tree-id15194 . -39) (undo-tree-id15195 . -39) 1885) nil (24969 57911 359529 802000) 0 nil]) ((#("_" 0 1 (fontified t face font-lock-function-name-face)) . -1836) (undo-tree-id15196 . -1) 1837 (1832 . 1837)) nil (24969 57911 359551 392000) 0 nil]) ((#("move(self)" 0 4 (fontified t face font-lock-function-name-face) 4 5 (fontified t) 5 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t)) . 1832)) nil (24969 57911 359554 117000) 0 nil]) ((1842 . 1847) (1828 . 1842) (#("    " 0 4 (fontified t)) . -1828) (undo-tree-id15197 . -4) 1832 (1824 . 1832) (#("    " 0 4 (fontified nil)) . 1823) (undo-tree-id15198 . -4) (undo-tree-id15199 . -4) (1827 . 1828) (#("    " 0 4 (fontified t)) . -1827) (undo-tree-id15200 . -4) (undo-tree-id15201 . -4) 1831 (1822 . 1831) 1821) nil (24969 57911 359568 494000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1822) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) 1823 (1802 . 1823) (1781 . 1802) (1778 . 1781) (#("." 0 1 (fontified t)) . -1778) (undo-tree-id15204 . -1) 1779 (1764 . 1779) (1755 . 1764) (1754 . 1755) (#(" " 0 1 (fontified t)) . -1754) (undo-tree-id15205 . -1) 1755 (1736 . 1755) (1734 . 1736) (1713 . 1734) (#("anme, " 0 6 (fontified t)) . -1713) (undo-tree-id15206 . -6) 1719 (#("posi" 0 4 (fontified t)) . -1719) (undo-tree-id15207 . -4) 1723 (1704 . 1723) (#(" " 0 1 (fontified t)) . -1704) (undo-tree-id15208 . -1) 1705 (1699 . 1705) (#("-" 0 1 (fontified t)) . -1699) (undo-tree-id15209 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1700) (undo-tree-id15210 . -1) 1701 (1694 . 1701) (1689 . 1694) (1687 . 1689) (#("\"" 0 1 (fontified t face font-lock-doc-face)) . -1687) (undo-tree-id15211 . -1) (#(" " 0 1 (fontified t)) . -1688) (undo-tree-id15212 . -1) 1689 (1680 . 1689) (#("bulelts" 0 7 (fontified t face font-lock-doc-face)) . -1680) (undo-tree-id15213 . -7) 1687 (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1687) (undo-tree-id15214 . -1) 1688 (1683 . 1688) (1662 . 1683) (1661 . 1662) (#(":" 0 1 (fontified t)) . -1661) (undo-tree-id15215 . -1) 1662 (#("Speical " 0 8 (fontified t)) . -1662) (undo-tree-id15216 . -8) 1670 (1661 . 1670) (1656 . 1661) (1655 . 1656) (#(" " 0 1 (fontified t)) . -1655) (undo-tree-id15217 . -1) 1656 (1655 . 1656) (#(" " 0 1 (fontified t)) . -1655) (undo-tree-id15218 . -1) 1656 (1655 . 1656) (#(" " 0 1 (fontified t)) . -1655) (undo-tree-id15219 . -1) 1656 (1649 . 1656) (1628 . 1649) (1622 . 1628) (1601 . 1622) (#("    " 0 4 (fontified t)) . -1601) (undo-tree-id15220 . -4) 1605 (#("    " 0 4 (fontified t)) . -1605) (undo-tree-id15221 . -4) 1609 (1601 . 1609) (#("        " 0 8 (fontified nil)) . 1600) (undo-tree-id15222 . -8) (1599 . 1609) (#("
" 0 1 (fontified t)) . -1599) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) 1600 (#("    " 0 4 (fontified t)) . -1600) (undo-tree-id15227 . -4) 1604 (#("    " 0 4 (fontified t)) . -1604) (undo-tree-id15228 . -4) 1608 (1599 . 1608) (#("    " 0 4 (fontified t)) . -1599) (undo-tree-id15229 . -4) 1603 (#("    " 0 4 (fontified t)) . -1603) (undo-tree-id15230 . -4) 1607 (1598 . 1607) (t 24969 57728 724442 958000) 1552) nil (24969 57911 359647 72000) 0 nil]) ((#("        
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 1204) (undo-tree-id15058 . -9) (undo-tree-id15059 . -8) (undo-tree-id15060 . -9) (undo-tree-id15061 . -9) (undo-tree-id15062 . -8) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (undo-tree-id15065 . -9) (undo-tree-id15066 . -9) (undo-tree-id15067 . -9) (undo-tree-id15068 . -9) (undo-tree-id15069 . -9) (undo-tree-id15070 . -9) (undo-tree-id15071 . -9) (undo-tree-id15072 . -9) (undo-tree-id15073 . -9) (undo-tree-id15074 . -9) (undo-tree-id15075 . -9) (undo-tree-id15076 . -9) (undo-tree-id15077 . -1)) nil (24969 57728 472492 424000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1439) (undo-tree-id15078 . -1) (undo-tree-id15079 . -1) (undo-tree-id15080 . -1) (undo-tree-id15081 . -1) (undo-tree-id15082 . -1) (undo-tree-id15083 . -1) (undo-tree-id15084 . -1) (undo-tree-id15085 . -1) (undo-tree-id15086 . -1) (undo-tree-id15087 . -1) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -1) (undo-tree-id15095 . -1) (undo-tree-id15096 . -1) (undo-tree-id15097 . -1) (undo-tree-id15098 . -1) (undo-tree-id15099 . -1) (undo-tree-id15100 . -1) (undo-tree-id15101 . -1) (undo-tree-id15102 . -1) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (t 24969 57415 491820 559000)) nil (24969 57728 472626 475000) 0 nil]) ((1937 . 1938) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1937) (undo-tree-id15053 . -1) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) (undo-tree-id15056 . -1) (undo-tree-id15057 . -1) (t 24969 57410 315826 810000)) nil (24969 57415 254477 349000) 0 nil]) ((1202 . 1203) (#("9" 0 1 (fontified t face highlight-numbers-number)) . 1202)) nil (24969 57410 62137 261000) 0 nil]) ((1403 . 1404) (#("9" 0 1 (fontified t face highlight-numbers-number)) . 1403) (t 24969 57387 24854 942000)) nil (24969 57410 62145 577000) 0 nil]) ((1403 . 1404) (#("8" 0 1 (fontified t face highlight-numbers-number)) . 1403) (1403 . 1404) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 1403)) nil (24969 57386 785711 881000) 0 nil]) ((1202 . 1203) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 1202) (t 24969 57370 342875 97000)) nil (24969 57386 785721 118000) 0 nil]) ((1937 . 1938) (#("3" 0 1 (fontified t face highlight-numbers-number)) . 1937) (undo-tree-id15031 . -1) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) (undo-tree-id15037 . -1) (undo-tree-id15038 . -1) (undo-tree-id15039 . -1) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (undo-tree-id15044 . -1) (undo-tree-id15045 . -1) (undo-tree-id15046 . -1) (undo-tree-id15047 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15051 . -1) (undo-tree-id15052 . -1) (t 24969 57351 89898 364000)) nil (24969 57370 97905 974000) 0 nil]) ((1941 . 1942)) nil (24969 57350 851702 569000) 0 nil]) ((#("2" 0 1 (fontified t face highlight-numbers-number)) . 1940) (t 24969 57324 977929 932000)) nil (24969 57350 851710 665000) 0 nil]) ((1080 . 1082) (#("-" 0 1 (fontified t)) . -1080) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) 1081 (1080 . 1081) (#("S" 0 1 (fontified t)) . 1080) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1)) nil (24969 57324 725583 422000) 0 nil]) ((1268 . 1270) (#("S" 0 1 (fontified t)) . 1268) (t 24969 57283 805979 733000)) nil (24969 57324 725591 898000) 0 nil]) ((1274 . 1277)) nil (24969 57283 553151 605000) 0 nil]) ((1087 . 1089) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1087) (undo-tree-id15009 . -1) (#("]" 0 1 (fontified t)) . -1088) (undo-tree-id15010 . -1) 1089 (1086 . 1089)) nil (24969 57283 553172 865000) 0 nil]) ((1070 . 1087)) nil (24969 57283 553177 573000) 0 nil]) ((#("300 " 0 3 (fontified t face highlight-numbers-number) 3 4 (fontified t)) . 1070) (t 24969 57264 847002 676000)) nil (24969 57283 553180 238000) 0 nil]) ((1256 . 1259) (1251 . 1256) (#("r" 0 1 (fontified t)) . -1251) (undo-tree-id15007 . -1) 1252 (1242 . 1252)) nil (24969 57264 596788 323000) 0 nil]) ((#("300 " 0 3 (fontified t face highlight-numbers-number) 3 4 (fontified t)) . 1242) (undo-tree-id15008 . -3) (t 24969 57247 624023 527000)) nil (24969 57264 596798 51000) 0 nil]) ((2204 . 2210)) nil (24969 57247 378065 280000) 0 nil]) ((#("surface" 0 7 (fontified t)) . 2204) (undo-tree-id14933 . -7) (undo-tree-id14934 . -7) (undo-tree-id14935 . -7) (undo-tree-id14936 . -7) (undo-tree-id14937 . -7) (undo-tree-id14938 . -7) (undo-tree-id14939 . -7) (undo-tree-id14940 . -7) (undo-tree-id14941 . -7) (undo-tree-id14942 . -7) (undo-tree-id14943 . -7) (undo-tree-id14944 . -7) (undo-tree-id14945 . -7) (undo-tree-id14946 . -7) (undo-tree-id14947 . -7) 2211) nil (24969 57247 378105 365000) 0 nil]) ((2139 . 2145)) nil (24969 57247 378110 84000) 0 nil]) ((#("surface" 0 7 (fontified t)) . 2139) (undo-tree-id14948 . -7)) nil (24969 57247 378114 252000) 0 nil]) ((1929 . 1935)) nil (24969 57247 378116 736000) 0 nil]) ((#("surface" 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t)) . 1929) (undo-tree-id14949 . -7)) nil (24969 57247 378121 44000) 0 nil]) ((1726 . 1732)) nil (24969 57247 378123 719000) 0 nil]) ((#("surface" 0 7 (fontified t face font-lock-variable-name-face)) . 1726) (undo-tree-id14950 . -7) (undo-tree-id14951 . -7) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -2) (undo-tree-id14958 . -2) (undo-tree-id14959 . -2) (undo-tree-id14960 . -2) (undo-tree-id14961 . -2) (undo-tree-id14962 . -3) (undo-tree-id14963 . -3) (undo-tree-id14964 . -3) (undo-tree-id14965 . -3) (undo-tree-id14966 . -3) (undo-tree-id14967 . -4) (undo-tree-id14968 . -4) (undo-tree-id14969 . -4) (undo-tree-id14970 . -4) (undo-tree-id14971 . -4) (undo-tree-id14972 . -5) (undo-tree-id14973 . -5) (undo-tree-id14974 . -5) (undo-tree-id14975 . -5) (undo-tree-id14976 . -5) (undo-tree-id14977 . -6) (undo-tree-id14978 . -6) (undo-tree-id14979 . -6) (undo-tree-id14980 . -6) (undo-tree-id14981 . -6) (undo-tree-id14982 . -7) (undo-tree-id14983 . -7) (undo-tree-id14984 . -7) (undo-tree-id14985 . -7) (undo-tree-id14986 . -7) (undo-tree-id14987 . -7) (undo-tree-id14988 . -7) (undo-tree-id14989 . -7) (undo-tree-id14990 . -7) (undo-tree-id14991 . -7) (undo-tree-id14992 . -7) (undo-tree-id14993 . -7) (undo-tree-id14994 . -7) (undo-tree-id14995 . -7) (undo-tree-id14996 . -7) (undo-tree-id14997 . -7) (undo-tree-id14998 . -7) (undo-tree-id14999 . -7) (undo-tree-id15000 . -7) (undo-tree-id15001 . -7) (undo-tree-id15002 . -7) (undo-tree-id15003 . -7) (undo-tree-id15004 . -7) (undo-tree-id15005 . -7) (undo-tree-id15006 . -7) 1733 (t 24969 57168 226119 734000)) nil (24969 57247 378217 74000) 0 nil] [nil ([nil ([nil ([nil nil ((1981 . 1987) (#("a" 0 1 (fontified t)) . -1981) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (#("f" 0 1 (fontified t)) . -1982) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (#("c" 0 1 (fontified t)) . -1983) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) 1984 (1978 . 1984)) ((#("surafc" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1978) (undo-tree-id14915 . -3) (1981 . 1984) (#("face, " 0 6 (fontified t)) . 1981) (undo-tree-id14916 . -5) (t 24969 57130 17166 89000)) (24969 57129 775160 66000) 0 nil]) ((1904 . 1912) (#("c" 0 1 (fontified t)) . -1904) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (#("r" 0 1 (fontified t)) . -1905) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) 1906 (1903 . 1906) (#("," 0 1 (fontified t)) . -1903) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (#(" " 0 1 (fontified t)) . -1904) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) 1905 (1903 . 1905)) ((#(", " 0 1 (fontified nil) 1 2 (fontified nil)) . 1903) (1903 . 1905) (#("scr" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1903) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (1904 . 1906) (#("urface, " 0 8 (fontified t)) . 1904) (undo-tree-id14922 . -6) (undo-tree-id14923 . -6) (undo-tree-id14924 . -6) (undo-tree-id14925 . -6) (undo-tree-id14926 . -6)) (24969 57163 78676 969000) 0 nil]) ((1843 . 1846) (#("e" 0 1 (fontified t)) . -1843) (undo-tree-id14914 . -1) 1844 (1837 . 1844) (t 24969 57111 527188 536000)) ((#(", surfe" 0 6 (fontified nil) 6 7 (fontified nil)) . 1837) (1843 . 1844) (#("ace" 0 3 (fontified t)) . 1843)) (24969 57163 392586 176000) 0 nil]) ((#(";" 0 1 (fontified t)) . -104) (undo-tree-id14888 . -1) (undo-tree-id14890 . -1) (undo-tree-id14892 . -1) (undo-tree-id14894 . -1) (undo-tree-id14896 . -1) 105 (96 . 105) (#("," 0 1 (fontified t)) . -96) (undo-tree-id14897 . -1) (#(" " 0 1 (fontified t)) . -97) (undo-tree-id14898 . -1) 98 (96 . 98) (t 24969 57102 471199 533000)) ((#(", " 0 1 (fontified nil) 1 2 (fontified nil)) . 96) (96 . 98) (#(", screen;" 0 8 (fontified nil) 8 9 (fontified nil)) . 96) (undo-tree-id14927 . -7) (undo-tree-id14928 . -7) (undo-tree-id14929 . -2) (undo-tree-id14930 . -8) (104 . 105)) (24969 57163 724281 278000) 0 nil] [nil ([nil nil ((1242 . 1258)) ((#("screen.getSize()" 0 16 (fontified t)) . 1242) (undo-tree-id14886 . 16) (undo-tree-id14887 . -6) (t 24969 57083 337222 777000)) (24969 57058 303510 201000) 0 nil]) ((#("300" 0 3 (fontified t face highlight-numbers-number)) . 1242) (undo-tree-id14884 . -3) (undo-tree-id14885 . -3) 1245 (t 24969 56984 290343 289000)) ((1242 . 1245)) (24969 57100 554179 999000) 0 nil]) ((1780 . 1789) (#("re" 0 1 (fontified nil) 1 2 (fontified nil)) . 1780) (1771 . 1782)) ((#(", pygame.re" 0 2 (fontified nil) 2 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil)) . 1771) (undo-tree-id14931 . -2) (undo-tree-id14932 . -8) (1780 . 1782) (#("RESIZABLE" 0 9 (fontified t)) . 1780)) (24969 57166 304503 613000) 0 nil]) ((#(";" 0 1 (fontified t)) . 2269) (undo-tree-id14796 . -1) (t 24969 56951 680383 44000)) nil (24969 57164 878718 465000) 0 nil]) ((2267 . 2270)) nil (24969 56951 430941 665000) 0 nil]) ((2256 . 2267) (#("    " 0 4 (fontified t)) . -2256) (undo-tree-id14759 . -4) (undo-tree-id14760 . -4) (undo-tree-id14761 . -4) (undo-tree-id14762 . -4) (undo-tree-id14763 . -4) (undo-tree-id14764 . -4) (undo-tree-id14765 . -4) (undo-tree-id14766 . -4) (undo-tree-id14767 . -4) (undo-tree-id14768 . -4) (undo-tree-id14769 . -4) (undo-tree-id14770 . -4) (undo-tree-id14771 . -4) (undo-tree-id14772 . -4) (undo-tree-id14773 . -4) (undo-tree-id14774 . -4) (undo-tree-id14775 . -4) (undo-tree-id14776 . -4) (undo-tree-id14777 . -4) 2260 (2256 . 2260) (#("    " 0 4 (fontified nil)) . 2255) (undo-tree-id14778 . -4) (undo-tree-id14779 . -4) (undo-tree-id14780 . -4) (undo-tree-id14781 . -4) (undo-tree-id14782 . -4) (undo-tree-id14783 . -4) (undo-tree-id14784 . -4) (undo-tree-id14785 . -4) (undo-tree-id14786 . -4) (undo-tree-id14787 . -4) (undo-tree-id14788 . -4) (undo-tree-id14789 . -4) (undo-tree-id14790 . -4) (undo-tree-id14791 . -4) (undo-tree-id14792 . -4) (undo-tree-id14793 . -4) (undo-tree-id14794 . -4) (undo-tree-id14795 . -4) (2259 . 2260) (2254 . 2259) (t 24969 56931 563407 589000) 2253) nil (24969 56951 431017 547000) 0 nil]) ((2085 . 2090)) nil (24969 56931 311919 760000) 0 nil]) ((#("quit():" 0 4 (fontified t face font-lock-constant-face) 4 7 (fontified t)) . 2085) (undo-tree-id14754 . -6) (undo-tree-id14755 . -6) (undo-tree-id14756 . -6) (undo-tree-id14757 . -6) (undo-tree-id14758 . -6) (t 24969 56902 581442 980000)) nil (24969 56931 311944 797000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1772) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) 1773 (1771 . 1773)) nil (24969 56902 329270 285000) 0 nil]) ((#(", \"RESIZABLE\")" 0 2 (fontified t) 2 13 (fontified t face font-lock-string-face) 13 14 (fontified t)) . 1771) (undo-tree-id14745 . -14) (undo-tree-id14746 . -14) (undo-tree-id14747 . -14) (undo-tree-id14748 . -14) (undo-tree-id14749 . -2) (undo-tree-id14750 . -2) (undo-tree-id14751 . -2) (undo-tree-id14752 . -2) (undo-tree-id14753 . -2) (t 24969 56887 793461 52000)) nil (24969 56902 329296 754000) 0 nil]) ((#("            break
" 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #8=((#<marker at 2825 in main.py> . #<marker at 3105 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #8#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #8#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #8#)) 4 5 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #7=((#<marker at 2862 in main.py> . #<marker at 2927 in main.py>) . #8#)) face highlight-indent-guides-odd-face) 5 6 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #7#)) 6 7 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #7#)) 7 8 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #7#)) 8 9 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #9=((#<marker at 2900 in main.py> . #<marker at 2927 in main.py>) . #7#)) face highlight-indent-guides-even-face) 9 10 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #9#)) 10 11 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #9#)) 11 12 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #9#)) 12 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t)) . 2134) (undo-tree-id14691 . -18) (undo-tree-id14692 . 1) (undo-tree-id14693 . -12) (undo-tree-id14694 . -18) (undo-tree-id14695 . -18) (undo-tree-id14696 . -17) (undo-tree-id14697 . -17) (undo-tree-id14698 . -17) (undo-tree-id14699 . -17) (undo-tree-id14700 . -1) (undo-tree-id14701 . -16) (undo-tree-id14702 . -16) (undo-tree-id14703 . -16) (undo-tree-id14704 . -16) (undo-tree-id14705 . -16) (undo-tree-id14706 . -16) (undo-tree-id14707 . -16) (undo-tree-id14708 . -16) (undo-tree-id14709 . -16) (undo-tree-id14710 . -16) (undo-tree-id14711 . -16) (undo-tree-id14712 . -16) (undo-tree-id14713 . -16) (undo-tree-id14714 . -16) (undo-tree-id14715 . -16) (undo-tree-id14716 . -16) (undo-tree-id14717 . -16) (undo-tree-id14718 . -16) (undo-tree-id14719 . -16) (undo-tree-id14720 . -16) (undo-tree-id14721 . -16) (undo-tree-id14722 . -16) (undo-tree-id14723 . -16) (undo-tree-id14724 . -16) (undo-tree-id14725 . -16) (undo-tree-id14726 . -16) (undo-tree-id14727 . -16) (undo-tree-id14728 . -16) (undo-tree-id14729 . -16) (undo-tree-id14730 . -16) (undo-tree-id14731 . -16) (undo-tree-id14732 . -16) (undo-tree-id14733 . -16) (undo-tree-id14734 . -16) (undo-tree-id14735 . -16) (undo-tree-id14736 . -16) 2150 (t 24969 56886 526462 600000)) nil (24969 56887 549943 251000) 0 nil]) ((#(";" 0 1 (fontified t)) . -2151) (undo-tree-id14586 . -1) (undo-tree-id14587 . -1) (undo-tree-id14588 . -1) (undo-tree-id14589 . -1) (undo-tree-id14590 . -1) (undo-tree-id14591 . -1) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1) (undo-tree-id14603 . -1) (undo-tree-id14604 . -1) (undo-tree-id14605 . -1) (undo-tree-id14606 . -1) (undo-tree-id14607 . -1) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1) (undo-tree-id14612 . -1) (undo-tree-id14613 . -1) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1) (undo-tree-id14616 . -1) 2152 (2146 . 2152) (2133 . 2146) (#(";" 0 1 (fontified t)) . -2133) (undo-tree-id14617 . -1) (undo-tree-id14618 . -1) (undo-tree-id14619 . -1) (undo-tree-id14620 . -1) (undo-tree-id14621 . -1) (undo-tree-id14622 . -1) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1) (undo-tree-id14625 . -1) (undo-tree-id14626 . -1) (undo-tree-id14627 . -1) (undo-tree-id14628 . -1) 2134 (2128 . 2134) (#("false" 0 5 (fontified t)) . -2128) (undo-tree-id14629 . -5) (undo-tree-id14630 . -5) (undo-tree-id14631 . -5) (undo-tree-id14632 . -5) 2133 (2124 . 2133) (#(" " 0 1 (fontified t)) . -2124) (undo-tree-id14633 . -1) (undo-tree-id14634 . -1) 2125 (2118 . 2125) (2105 . 2118)) nil (24969 56886 280121 927000) 0 nil]) ((#("A" 0 1 (fontified t)) . -2087) (undo-tree-id14635 . -1) (undo-tree-id14636 . -1) (undo-tree-id14637 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) (undo-tree-id14645 . -1) (undo-tree-id14646 . -1) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1) (undo-tree-id14649 . -1) (undo-tree-id14650 . -1) (undo-tree-id14651 . -1) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) 2088 (2086 . 2088)) nil (24969 56886 280165 188000) 0 nil]) ((2082 . 2086)) nil (24969 56886 280169 727000) 0 nil]) ((2084 . 2085)) nil (24969 56886 280171 961000) 0 nil]) ((2095 . 2099) (#("e" 0 1 (fontified t)) . -2095) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) (undo-tree-id14671 . -1) (undo-tree-id14672 . -1) (undo-tree-id14673 . -1) (undo-tree-id14674 . -1) (undo-tree-id14675 . -1) (undo-tree-id14676 . -1) (undo-tree-id14677 . -1) (#("t" 0 1 (fontified t)) . -2096) (undo-tree-id14678 . -1) (undo-tree-id14679 . -1) (undo-tree-id14680 . -1) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) 2097 (2096 . 2097) (2095 . 2096) (2074 . 2095) (2065 . 2074) (2064 . 2065) (#(" " 0 1 (fontified t)) . -2064) (undo-tree-id14687 . -1) 2065 (2053 . 2065) (#("get" 0 3 (fontified t)) . -2053) (undo-tree-id14688 . -3) (undo-tree-id14689 . -3) 2056 (2054 . 2056) (2033 . 2054) (#("if " 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t)) . -2033) (undo-tree-id14690 . -3) 2036 (2033 . 2036) (2028 . 2033) (t 24969 56838 312521 595000) 2027) nil (24969 56886 280239 237000) 0 nil]) ((1998 . 2013) (1997 . 1998) 1996) nil (24969 56838 65051 892000) 0 nil]) ((2004 . 2011)) nil (24969 56838 65058 675000) 0 nil]) ((#("True" 0 4 (fontified t face font-lock-constant-face)) . 2004) (undo-tree-id14560 . -4) (undo-tree-id14561 . -4) (undo-tree-id14562 . -4) (undo-tree-id14563 . -4) (undo-tree-id14564 . -4) (undo-tree-id14565 . -4) (undo-tree-id14566 . -4) (undo-tree-id14567 . -4) (undo-tree-id14568 . -4) (undo-tree-id14569 . -4) (undo-tree-id14570 . -4) (undo-tree-id14571 . -4) (undo-tree-id14572 . -4) (undo-tree-id14573 . -4) (undo-tree-id14574 . -4) (undo-tree-id14575 . -4) (undo-tree-id14576 . -4) (undo-tree-id14577 . -4) (undo-tree-id14578 . -4) (undo-tree-id14579 . -4) (undo-tree-id14580 . -4) (undo-tree-id14581 . -4) (undo-tree-id14582 . -4) (undo-tree-id14583 . -4) (undo-tree-id14584 . -4) (undo-tree-id14585 . -4) 2008 (t 24969 56787 154584 315000)) nil (24969 56838 65116 413000) 0 nil]) ((1783 . 1784)) nil (24969 56786 908546 549000) 0 nil]) ((1773 . 1774) (t 24969 56770 503604 761000)) nil (24969 56786 908554 3000) 0 nil]) ((#("surface_dimensions = (0,0)
" 0 18 (fontified t face font-lock-variable-name-face) 18 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t) 24 25 (fontified t face highlight-numbers-number) 25 26 (fontified t) 26 27 (fontified t)) . 1726) (undo-tree-id14541 . -27) (undo-tree-id14542 . -27) (undo-tree-id14543 . -27) (undo-tree-id14544 . -23) (undo-tree-id14545 . -24) (undo-tree-id14546 . -25) (undo-tree-id14547 . -25) (undo-tree-id14548 . -25) (undo-tree-id14549 . -25) (undo-tree-id14550 . -25) (undo-tree-id14551 . -25) (undo-tree-id14552 . -25) (undo-tree-id14553 . -25) (undo-tree-id14554 . -25) (undo-tree-id14555 . -25) (undo-tree-id14556 . -25) (undo-tree-id14557 . -25) (undo-tree-id14558 . -25) (undo-tree-id14559 . -25) 1751 (t 24969 56768 906606 723000)) nil (24969 56770 257150 830000) 0 nil]) ((1798 . 1809) (#(" " 0 1 (fontified t)) . -1798) (undo-tree-id14498 . -1) 1799 (1798 . 1799)) nil (24969 56768 660079 105000) 0 nil]) ((1791 . 1797) (1788 . 1791)) nil (24969 56768 660085 878000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1787) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) (undo-tree-id14529 . -1) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) (undo-tree-id14540 . -1) 1788 (1787 . 1788)) nil (24969 56768 660367 806000) 0 nil]) ((1787 . 1789)) nil (24969 56768 660374 699000) 0 nil]) ((1777 . 1786) (t 24969 56728 986655 808000)) nil (24969 56768 660377 554000) 0 nil]) ((1777 . 1779) (t 24969 56727 515657 618000)) nil (24969 56728 738466 112000) 0 nil]) ((#("." 0 1 (fontified t)) . 1777) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . -1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (undo-tree-id14303 . -1) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . -1) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) (undo-tree-id14325 . -1) (undo-tree-id14326 . -1) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . -1) (undo-tree-id14330 . -1) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) (undo-tree-id14337 . -1) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) (undo-tree-id14340 . -1) (undo-tree-id14341 . -1) (undo-tree-id14342 . -1) (undo-tree-id14343 . -1) (undo-tree-id14344 . -1) (undo-tree-id14345 . -1) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) (undo-tree-id14361 . -1)) nil (24969 56727 280775 259000) 0 nil]) ((#("set_mode(surface_dimensions)" 0 27 (fontified t) 27 28 (fontified t)) . 1778) (undo-tree-id14362 . 1) (undo-tree-id14363 . -20) (undo-tree-id14364 . -9) (undo-tree-id14365 . -26) (undo-tree-id14366 . -26) (undo-tree-id14367 . -26) (undo-tree-id14368 . -26) (undo-tree-id14369 . -26) (undo-tree-id14370 . -26) (undo-tree-id14371 . -26) (undo-tree-id14372 . -26) (undo-tree-id14373 . -26) (undo-tree-id14374 . -26) (undo-tree-id14375 . -26) (undo-tree-id14376 . -26) (undo-tree-id14377 . -26) (undo-tree-id14378 . -26) (undo-tree-id14379 . -26) (undo-tree-id14380 . -26) (undo-tree-id14381 . -26) (undo-tree-id14382 . -26) (undo-tree-id14383 . -26) (undo-tree-id14384 . -26) (undo-tree-id14385 . -26) (undo-tree-id14386 . -26) (undo-tree-id14387 . -26) (undo-tree-id14388 . -26) (undo-tree-id14389 . -26) (undo-tree-id14390 . -26) (undo-tree-id14391 . -26) (undo-tree-id14392 . -26) (undo-tree-id14393 . -26) (undo-tree-id14394 . -26) (undo-tree-id14395 . -26) (undo-tree-id14396 . -26) (undo-tree-id14397 . -26) (undo-tree-id14398 . -26) (undo-tree-id14399 . -26) (undo-tree-id14400 . -26) (undo-tree-id14401 . -26) (undo-tree-id14402 . -26) (undo-tree-id14403 . -26) (undo-tree-id14404 . -26) (undo-tree-id14405 . -26) (undo-tree-id14406 . -26) (undo-tree-id14407 . -26) (undo-tree-id14408 . -26) (undo-tree-id14409 . -26) (undo-tree-id14410 . -26) (undo-tree-id14411 . -26) (undo-tree-id14412 . -26) (undo-tree-id14413 . -26) (undo-tree-id14414 . -26) (undo-tree-id14415 . -26) (undo-tree-id14416 . -26) (undo-tree-id14417 . -26) (undo-tree-id14418 . -26) (undo-tree-id14419 . -26) (undo-tree-id14420 . -26) (undo-tree-id14421 . -26) (undo-tree-id14422 . -26) (undo-tree-id14423 . -26) (undo-tree-id14424 . -26) (undo-tree-id14425 . -26) (undo-tree-id14426 . -26) (undo-tree-id14427 . -26) (undo-tree-id14428 . -26) (undo-tree-id14429 . -26) (undo-tree-id14430 . -26) (undo-tree-id14431 . -26) (undo-tree-id14432 . -26) (undo-tree-id14433 . -26) (undo-tree-id14434 . -26) (undo-tree-id14435 . -26) (undo-tree-id14436 . -26) (undo-tree-id14437 . -26) (undo-tree-id14438 . -26) (undo-tree-id14439 . -26) (undo-tree-id14440 . -26) (undo-tree-id14441 . -26) (undo-tree-id14442 . -26) (undo-tree-id14443 . -26) (undo-tree-id14444 . -26) (undo-tree-id14445 . -26) (undo-tree-id14446 . -26) (undo-tree-id14447 . -26) (undo-tree-id14448 . -26) (undo-tree-id14449 . -26) (undo-tree-id14450 . -26) (undo-tree-id14451 . -26) (undo-tree-id14452 . -26) (undo-tree-id14453 . -26) (undo-tree-id14454 . -26) (undo-tree-id14455 . -26) (undo-tree-id14456 . -26) (undo-tree-id14457 . -26) (undo-tree-id14458 . -26) (undo-tree-id14459 . -26) (undo-tree-id14460 . -26) (undo-tree-id14461 . -26) (undo-tree-id14462 . -26) (undo-tree-id14463 . -26) (undo-tree-id14464 . -26) (undo-tree-id14465 . -26) (undo-tree-id14466 . -26) (undo-tree-id14467 . -26) (undo-tree-id14468 . -26) (undo-tree-id14469 . -26) (undo-tree-id14470 . -26) (undo-tree-id14471 . -26) (undo-tree-id14472 . -26) (undo-tree-id14473 . -26) (undo-tree-id14474 . -26) (undo-tree-id14475 . -26) (undo-tree-id14476 . -26) (undo-tree-id14477 . -26) (undo-tree-id14478 . -26) (undo-tree-id14479 . -26) (undo-tree-id14480 . -26) (undo-tree-id14481 . -26) (undo-tree-id14482 . -26) (undo-tree-id14483 . -26) (undo-tree-id14484 . -26) (undo-tree-id14485 . -26) (undo-tree-id14486 . -26) (undo-tree-id14487 . -26) (undo-tree-id14488 . -26) (undo-tree-id14489 . -26) (undo-tree-id14490 . -26) (undo-tree-id14491 . -26) (undo-tree-id14492 . -26) (undo-tree-id14493 . -26) (undo-tree-id14494 . -26) (undo-tree-id14495 . -26) (undo-tree-id14496 . -26) (undo-tree-id14497 . -26) (t 24969 56620 524789 691000)) nil (24969 56727 281017 894000) 0 nil]) ((1799 . 1805) (1787 . 1799) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1787) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (#("," 0 1 (fontified t)) . -1788) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -1789) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1790) (undo-tree-id14133 . -1) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) 1791 (1787 . 1791)) nil (24969 56620 278458 466000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1788) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) 1789 (1787 . 1789)) nil (24969 56620 278491 27000) 0 nil]) ((#("(300, 300))" 0 1 (fontified t) 1 2 (fontified t face highlight-numbers-number) 2 3 (fontified t face highlight-numbers-number) 3 4 (fontified t face highlight-numbers-number) 4 6 (fontified t) 6 9 (fontified t face highlight-numbers-number) 9 10 (fontified t) 10 11 (fontified t)) . 1787) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (undo-tree-id14153 . -1) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -4) (undo-tree-id14157 . -4) (undo-tree-id14158 . -4) (undo-tree-id14159 . -4) (undo-tree-id14160 . -4) (undo-tree-id14161 . -4) (undo-tree-id14162 . -4) (undo-tree-id14163 . -4) (undo-tree-id14164 . -4) (undo-tree-id14165 . -4) (undo-tree-id14166 . -4) (undo-tree-id14167 . -4) (undo-tree-id14168 . -3) (undo-tree-id14169 . -3) (undo-tree-id14170 . -3) (undo-tree-id14171 . -3) (undo-tree-id14172 . -3) (undo-tree-id14173 . -2) (undo-tree-id14174 . -2) (undo-tree-id14175 . -2) (undo-tree-id14176 . -2) (undo-tree-id14177 . -2) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) (undo-tree-id14182 . -1)) nil (24969 56620 278562 190000) 0 nil]) ((1749 . 1751) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1749) (undo-tree-id14183 . -1) (undo-tree-id14184 . -1) (undo-tree-id14185 . -1) (undo-tree-id14186 . -1) (undo-tree-id14187 . -1) (undo-tree-id14188 . -1) (undo-tree-id14189 . -1) (undo-tree-id14190 . -1) (undo-tree-id14191 . -1) 1750 (1748 . 1750)) nil (24969 56620 278583 480000) 0 nil]) ((1747 . 1749) (1734 . 1747) (#("d" 0 1 (fontified t)) . -1734) (undo-tree-id14192 . -1) 1735 (1726 . 1735) (#("width = " 0 5 (fontified t face font-lock-variable-name-face) 5 8 (fontified t)) . -1726) (undo-tree-id14193 . -8) 1734 (1731 . 1734) (#(":" 0 1 (fontified t)) . -1731) (undo-tree-id14194 . -1) (#(" " 0 1 (fontified t)) . -1732) (undo-tree-id14195 . -1) 1733 (1726 . 1733) (t 24969 56460 923988 391000)) nil (24969 56620 278597 967000) 0 nil]) ((39 . 40) 39) nil (24969 56460 678524 937000) 0 nil]) ((#("
" 0 1 (fontified t)) . -38) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) (undo-tree-id14071 . -1) (undo-tree-id14072 . -1) (undo-tree-id14073 . -1) (undo-tree-id14074 . -1) (undo-tree-id14075 . -1) (undo-tree-id14076 . -1) (undo-tree-id14077 . -1) (#("
" 0 1 (fontified t)) . -39) (undo-tree-id14078 . -1) (undo-tree-id14079 . -1) (undo-tree-id14080 . -1) (undo-tree-id14081 . -1) (undo-tree-id14082 . -1) (undo-tree-id14083 . -1) (undo-tree-id14084 . -1) (undo-tree-id14085 . -1) (#("w" 0 1 (fontified t)) . -40) (undo-tree-id14086 . -1) (undo-tree-id14087 . -1) (undo-tree-id14088 . -1) (undo-tree-id14089 . -1) (undo-tree-id14090 . -1) (#("i" 0 1 (fontified t)) . -41) (undo-tree-id14091 . -1) (undo-tree-id14092 . -1) (undo-tree-id14093 . -1) (undo-tree-id14094 . -1) (undo-tree-id14095 . -1) (#("d" 0 1 (fontified t)) . -42) (undo-tree-id14096 . -1) (undo-tree-id14097 . -1) (undo-tree-id14098 . -1) (undo-tree-id14099 . -1) (undo-tree-id14100 . -1) (#("t" 0 1 (fontified t)) . -43) (undo-tree-id14101 . -1) (undo-tree-id14102 . -1) (undo-tree-id14103 . -1) (undo-tree-id14104 . -1) (undo-tree-id14105 . -1) (#("h" 0 1 (fontified t)) . -44) (undo-tree-id14106 . -1) (undo-tree-id14107 . -1) (undo-tree-id14108 . -1) (undo-tree-id14109 . -1) (undo-tree-id14110 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id14111 . -1) (undo-tree-id14112 . -1) (undo-tree-id14113 . -1) (undo-tree-id14114 . -1) (undo-tree-id14115 . -1) (#("=" 0 1 (fontified t)) . -46) (undo-tree-id14116 . -1) (undo-tree-id14117 . -1) (undo-tree-id14118 . -1) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) 48 (40 . 48) (39 . 40) (t 24969 56407 842055 25000) 39) nil (24969 56460 678653 558000) 0 nil]) ((1369 . 1370) (#("7" 0 1 (fontified t face highlight-numbers-number)) . 1369)) nil (24969 56407 612641 487000) 0 nil]) ((1185 . 1186) (#("7" 0 1 (fontified t face highlight-numbers-number)) . 1185) (t 24969 56380 343089 670000)) nil (24969 56407 612650 294000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1305) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) (undo-tree-id13234 . -1) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) (undo-tree-id13278 . -1) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) (undo-tree-id13281 . -1) (undo-tree-id13282 . -1) (undo-tree-id13283 . -1) (undo-tree-id13284 . -1) (undo-tree-id13285 . -1) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -1) (undo-tree-id13291 . -1) (undo-tree-id13292 . -1) (undo-tree-id13293 . -1) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1) (#("+" 0 1 (fontified t)) . -1306) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (undo-tree-id13324 . -1) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) (undo-tree-id13352 . -1) (undo-tree-id13353 . -1) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (#(" " 0 1 (fontified t)) . -1307) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) 1308 (#("np." 0 3 (fontified t)) . -1308) (undo-tree-id13801 . -3) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -2) (undo-tree-id13830 . -2) (undo-tree-id13831 . -2) (undo-tree-id13832 . -2) (undo-tree-id13833 . -2) (undo-tree-id13834 . -2) (undo-tree-id13835 . -2) (undo-tree-id13836 . -2) (undo-tree-id13837 . -3) (undo-tree-id13838 . -3) (undo-tree-id13839 . -3) (undo-tree-id13840 . -3) (undo-tree-id13841 . -3) (undo-tree-id13842 . -3) (undo-tree-id13843 . -3) (undo-tree-id13844 . -3) (undo-tree-id13845 . -3) (undo-tree-id13846 . -3) (undo-tree-id13847 . -3) (undo-tree-id13848 . -3) (undo-tree-id13849 . -3) (undo-tree-id13850 . -3) (undo-tree-id13851 . -3) (undo-tree-id13852 . -3) (undo-tree-id13853 . -3) (undo-tree-id13854 . -3) (undo-tree-id13855 . -3) (undo-tree-id13856 . -3) (undo-tree-id13857 . -3) (undo-tree-id13858 . -3) (undo-tree-id13859 . -3) (undo-tree-id13860 . -3) (undo-tree-id13861 . -3) (undo-tree-id13862 . -3) (undo-tree-id13863 . -3) (undo-tree-id13864 . -3) (undo-tree-id13865 . -3) (undo-tree-id13866 . -3) (undo-tree-id13867 . -3) (undo-tree-id13868 . -3) (undo-tree-id13869 . -3) (undo-tree-id13870 . -3) (undo-tree-id13871 . -3) (undo-tree-id13872 . -3) (undo-tree-id13873 . -3) (undo-tree-id13874 . -3) (undo-tree-id13875 . -3) (undo-tree-id13876 . -3) (undo-tree-id13877 . -3) (undo-tree-id13878 . -3) (undo-tree-id13879 . -3) (undo-tree-id13880 . -3) (undo-tree-id13881 . -3) (undo-tree-id13882 . -3) (undo-tree-id13883 . -3) (undo-tree-id13884 . -3) (undo-tree-id13885 . -3) (undo-tree-id13886 . -3) (undo-tree-id13887 . -3) (undo-tree-id13888 . -3) (undo-tree-id13889 . -3) (undo-tree-id13890 . -3) (undo-tree-id13891 . -3) (undo-tree-id13892 . -3) (undo-tree-id13893 . -3) (undo-tree-id13894 . -3) (undo-tree-id13895 . -3) (undo-tree-id13896 . -3) (undo-tree-id13897 . -3) (undo-tree-id13898 . -3) (undo-tree-id13899 . -3) (undo-tree-id13900 . -3) (undo-tree-id13901 . -3) (undo-tree-id13902 . -3) (undo-tree-id13903 . -3) (undo-tree-id13904 . -3) (undo-tree-id13905 . -3) (undo-tree-id13906 . -3) (undo-tree-id13907 . -3) (undo-tree-id13908 . -3) (undo-tree-id13909 . -3) (undo-tree-id13910 . -3) (undo-tree-id13911 . -3) (undo-tree-id13912 . -2) (undo-tree-id13913 . -3) (undo-tree-id13914 . -3) (undo-tree-id13915 . -3) (undo-tree-id13916 . -3) (undo-tree-id13917 . -3) (undo-tree-id13918 . -3) (undo-tree-id13919 . -3) (undo-tree-id13920 . -3) (undo-tree-id13921 . -3) (undo-tree-id13922 . -3) (undo-tree-id13923 . -3) (undo-tree-id13924 . -3) (undo-tree-id13925 . -3) (undo-tree-id13926 . -3) (undo-tree-id13927 . -3) (undo-tree-id13928 . -3) (undo-tree-id13929 . -3) (undo-tree-id13930 . -3) (undo-tree-id13931 . -3) (undo-tree-id13932 . -3) 1311 (#("sign" 0 4 (fontified t)) . -1311) (undo-tree-id13933 . -4) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) (undo-tree-id13951 . -1) (undo-tree-id13952 . -1) (undo-tree-id13953 . -1) (undo-tree-id13954 . -1) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1) (undo-tree-id13959 . -1) (undo-tree-id13960 . -1) (undo-tree-id13961 . -2) (undo-tree-id13962 . -2) (undo-tree-id13963 . -2) (undo-tree-id13964 . -2) (undo-tree-id13965 . -2) (undo-tree-id13966 . -2) (undo-tree-id13967 . -2) (undo-tree-id13968 . -2) (undo-tree-id13969 . -3) (undo-tree-id13970 . -3) (undo-tree-id13971 . -3) (undo-tree-id13972 . -3) (undo-tree-id13973 . -3) (undo-tree-id13974 . -3) (undo-tree-id13975 . -3) (undo-tree-id13976 . -4) (undo-tree-id13977 . -4) (undo-tree-id13978 . -4) (undo-tree-id13979 . -4) (undo-tree-id13980 . -4) (undo-tree-id13981 . -4) (undo-tree-id13982 . -4) (undo-tree-id13983 . -4) (undo-tree-id13984 . -4) (undo-tree-id13985 . -4) (undo-tree-id13986 . -4) (undo-tree-id13987 . -4) (undo-tree-id13988 . -4) (undo-tree-id13989 . -4) (undo-tree-id13990 . -4) (undo-tree-id13991 . -4) (undo-tree-id13992 . -4) (undo-tree-id13993 . -4) (undo-tree-id13994 . -4) (undo-tree-id13995 . -4) 1315 (1308 . 1315) (#("sign" 0 4 (fontified t)) . -1308) (undo-tree-id13996 . -4) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) (undo-tree-id14013 . -1) (undo-tree-id14014 . -1) (undo-tree-id14015 . -1) (undo-tree-id14016 . -1) (undo-tree-id14017 . -1) (undo-tree-id14018 . -1) (undo-tree-id14019 . -2) (undo-tree-id14020 . -2) (undo-tree-id14021 . -2) (undo-tree-id14022 . -2) (undo-tree-id14023 . -2) (undo-tree-id14024 . -2) (undo-tree-id14025 . -2) (undo-tree-id14026 . -2) (undo-tree-id14027 . -3) (undo-tree-id14028 . -3) (undo-tree-id14029 . -3) (undo-tree-id14030 . -3) (undo-tree-id14031 . -3) (undo-tree-id14032 . -3) (undo-tree-id14033 . -3) (undo-tree-id14034 . -4) (undo-tree-id14035 . -4) (undo-tree-id14036 . -4) (undo-tree-id14037 . -4) (undo-tree-id14038 . -4) (undo-tree-id14039 . -4) (undo-tree-id14040 . -4) (undo-tree-id14041 . -4) (undo-tree-id14042 . -4) (undo-tree-id14043 . -4) (undo-tree-id14044 . -4) (undo-tree-id14045 . -4) (undo-tree-id14046 . -4) (undo-tree-id14047 . -4) (undo-tree-id14048 . -4) (undo-tree-id14049 . -4) (undo-tree-id14050 . -4) (undo-tree-id14051 . -4) (undo-tree-id14052 . -4) (undo-tree-id14053 . -4) (undo-tree-id14054 . -4) (undo-tree-id14055 . -4) (undo-tree-id14056 . -4) (undo-tree-id14057 . -4) (undo-tree-id14058 . -4) (undo-tree-id14059 . -4) (undo-tree-id14060 . -4) (undo-tree-id14061 . -4) (undo-tree-id14062 . -4) (undo-tree-id14063 . -4) (undo-tree-id14064 . -4) (undo-tree-id14065 . -4) (undo-tree-id14066 . -4) (undo-tree-id14067 . -4) (undo-tree-id14068 . -4) 1312 (1305 . 1312) (t 24969 56361 519113 439000)) nil (24969 56380 102638 955000) 0 nil]) ((#(" - sign" 0 7 (fontified t)) . 1305) (undo-tree-id12983 . -7) (undo-tree-id12984 . -3) (undo-tree-id12985 . -7) (undo-tree-id12986 . -7) (undo-tree-id12987 . -7) (undo-tree-id12988 . -7) (undo-tree-id12989 . -7) (undo-tree-id12990 . -6) (undo-tree-id12991 . -6) (undo-tree-id12992 . -6) (undo-tree-id12993 . -6) (undo-tree-id12994 . -6) (undo-tree-id12995 . -6) (undo-tree-id12996 . -6) (undo-tree-id12997 . -6) (undo-tree-id12998 . -6) (undo-tree-id12999 . -6) (undo-tree-id13000 . -6) (undo-tree-id13001 . -6) (undo-tree-id13002 . -6) (undo-tree-id13003 . -6) (undo-tree-id13004 . -5) (undo-tree-id13005 . -5) (undo-tree-id13006 . -5) (undo-tree-id13007 . -5) (undo-tree-id13008 . -5) (undo-tree-id13009 . -4) (undo-tree-id13010 . -4) (undo-tree-id13011 . -4) (undo-tree-id13012 . -4) (undo-tree-id13013 . -4) (undo-tree-id13014 . -3) (undo-tree-id13015 . -3) (undo-tree-id13016 . -3) (undo-tree-id13017 . -3) (undo-tree-id13018 . -3) (undo-tree-id13019 . -2) (undo-tree-id13020 . -2) (undo-tree-id13021 . -2) (undo-tree-id13022 . -2) (undo-tree-id13023 . -2) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1)) nil (24969 56361 257506 961000) 0 nil]) ((1306 . 1312) (#("-" 0 1 (fontified t)) . -1306) (undo-tree-id13029 . -1) (#(" " 0 1 (fontified t)) . -1307) (undo-tree-id13030 . -1) 1308 (1306 . 1308) (#("_" 0 1 (fontified t)) . -1306) (undo-tree-id13031 . -1) (#(" " 0 1 (fontified t)) . -1307) (undo-tree-id13032 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1308) (undo-tree-id13033 . -1) (#("." 0 1 (fontified t)) . -1309) (undo-tree-id13034 . -1) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1310) (undo-tree-id13035 . -1) 1311 (1305 . 1311) (t 24969 56323 42162 164000)) nil (24969 56361 257551 284000) 0 nil]) ((1361 . 1362) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 1361)) nil (24969 56322 805610 785000) 0 nil]) ((#("." 0 1 (fontified t)) . 1361) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1)) nil (24969 56322 805822 922000) 0 nil]) ((#("5" 0 1 (fontified t face highlight-numbers-number)) . 1361) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (t 24969 56300 696190 552000)) nil (24969 56322 805855 62000) 0 nil]) ((1362 . 1364) (t 24969 56279 939216 986000)) nil (24969 56300 459589 841000) 0 nil]) ((1361 . 1362)) nil (24969 56279 701250 627000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 1361)) nil (24969 56279 701257 881000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1361) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (t 24969 56268 273231 870000)) nil (24969 56279 701485 327000) 0 nil]) ((1361 . 1363) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1361) (t 24969 56255 16248 809000)) nil (24969 56268 23874 436000) 0 nil]) ((1185 . 1186)) nil (24969 56254 783513 44000) 0 nil]) ((1368 . 1369) (t 24969 56232 912277 114000)) nil (24969 56254 783520 478000) 0 nil] [nil ([nil nil ((2119 . 2122)) ((#("05)" 0 2 (fontified t face highlight-numbers-number) 2 3 (fontified t)) . 2119) (undo-tree-id12629 . -3) (undo-tree-id12630 . -2) (undo-tree-id12631 . -2) (undo-tree-id12632 . -2) (undo-tree-id12633 . -2) (undo-tree-id12634 . -2) (undo-tree-id12635 . -2) (undo-tree-id12636 . -2) (undo-tree-id12637 . -2) (undo-tree-id12638 . -2) (undo-tree-id12639 . -2) (undo-tree-id12640 . -2) (undo-tree-id12641 . -2) (undo-tree-id12642 . -2) (undo-tree-id12643 . -2) (undo-tree-id12644 . -2) (undo-tree-id12645 . -2) (undo-tree-id12646 . -2) (undo-tree-id12647 . -2) (undo-tree-id12648 . -2) (undo-tree-id12649 . -2) (undo-tree-id12650 . -2) (undo-tree-id12651 . -2) (undo-tree-id12652 . -2) (undo-tree-id12653 . -2) (undo-tree-id12654 . -2) (undo-tree-id12655 . -2) (undo-tree-id12656 . -2) (undo-tree-id12657 . -2) (undo-tree-id12658 . -2) (undo-tree-id12659 . -2) (undo-tree-id12660 . -2) (undo-tree-id12661 . -2) (undo-tree-id12662 . -2) (undo-tree-id12663 . -2) (undo-tree-id12664 . -2) (undo-tree-id12665 . -2) (undo-tree-id12666 . -2) (undo-tree-id12667 . -2) (undo-tree-id12668 . -2) (undo-tree-id12669 . -2) (undo-tree-id12670 . -2) (undo-tree-id12671 . -2) (undo-tree-id12672 . -2) (undo-tree-id12673 . -2) (undo-tree-id12674 . -2) (undo-tree-id12675 . -2) (undo-tree-id12676 . -2) (undo-tree-id12677 . -2) (undo-tree-id12678 . -2) (undo-tree-id12679 . -2) (undo-tree-id12680 . -2) (undo-tree-id12681 . -2) (undo-tree-id12682 . -2) (undo-tree-id12683 . -2) (undo-tree-id12684 . -2) (undo-tree-id12685 . -2) (undo-tree-id12686 . -2) (undo-tree-id12687 . -2) (undo-tree-id12688 . -2) (undo-tree-id12689 . -2) (undo-tree-id12690 . -2) (undo-tree-id12691 . -2) (undo-tree-id12692 . -2) (undo-tree-id12693 . -2) (undo-tree-id12694 . -2) (undo-tree-id12695 . -2) (undo-tree-id12696 . -2) (undo-tree-id12697 . -2) (undo-tree-id12698 . -2) (undo-tree-id12699 . -2) (undo-tree-id12700 . -2) (undo-tree-id12701 . -2) (undo-tree-id12702 . -2) (undo-tree-id12703 . -2) (undo-tree-id12704 . -2) (undo-tree-id12705 . -2) (undo-tree-id12706 . -2) (undo-tree-id12707 . -2) (undo-tree-id12708 . -2) (undo-tree-id12709 . -2) (undo-tree-id12710 . -2) (undo-tree-id12711 . -2) (undo-tree-id12712 . -2) (undo-tree-id12713 . -2) (undo-tree-id12714 . -2) (undo-tree-id12715 . -2) (undo-tree-id12716 . -2) (undo-tree-id12717 . -2) (undo-tree-id12718 . -2) (undo-tree-id12719 . -2) (undo-tree-id12720 . -2) (undo-tree-id12721 . -2) (undo-tree-id12722 . -2) (undo-tree-id12723 . -2) (undo-tree-id12724 . -2) (undo-tree-id12725 . -2) (undo-tree-id12726 . -2) (undo-tree-id12727 . -2) (undo-tree-id12728 . -2) (undo-tree-id12729 . -2) (undo-tree-id12730 . -2) (undo-tree-id12731 . -2) (undo-tree-id12732 . -2) (undo-tree-id12733 . -2) (undo-tree-id12734 . -2) (undo-tree-id12735 . -2) (undo-tree-id12736 . -2) (undo-tree-id12737 . -2) (undo-tree-id12738 . -2) (undo-tree-id12739 . -2) (undo-tree-id12740 . -2) (undo-tree-id12741 . -2) (undo-tree-id12742 . -2) (t 24969 56224 721287 622000)) (24969 56224 475685 541000) 0 nil]) ((#("0166666667)" 0 1 (fontified t face highlight-numbers-number) 1 10 (fontified t face highlight-numbers-number) 10 11 (rear-nonsticky t fontified t)) . 2119) (undo-tree-id12627 . 10) (undo-tree-id12628 . -11) (t 24969 56205 954311 742000)) ((2119 . 2130)) (24969 56231 261901 258000) 0 nil]) ((2119 . 2120) (t 24969 56187 659335 312000)) nil (24969 56231 675498 197000) 0 nil]) ((1888 . 1889) (#("4" 0 1 (fontified t face highlight-numbers-number)) . -1888) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) 1889 (1887 . 1889) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 1887) (undo-tree-id12604 . 1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1)) nil (24969 56187 425895 557000) 0 nil]) ((#("10" 0 2 (fontified t face highlight-numbers-number)) . 1887) (undo-tree-id12617 . -2) (undo-tree-id12618 . -2) (undo-tree-id12619 . -2) (undo-tree-id12620 . -2) (undo-tree-id12621 . -2) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (t 24969 56177 4349 66000)) nil (24969 56187 425920 254000) 0 nil]) ((#("9" 0 1 (fontified t face highlight-numbers-number)) . 1185)) nil (24969 56176 773785 887000) 0 nil]) ((#("9" 0 1 (fontified t face highlight-numbers-number)) . 1369) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (t 24969 56161 976368 500000)) nil (24969 56176 773811 4000) 0 nil]) ((1891 . 1892) (t 24969 56145 750389 532000)) nil (24969 56161 921217 90000) 0 nil]) ((1185 . 1186) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 1185)) nil (24969 56145 684942 624000) 0 nil]) ((1369 . 1370)) nil (24969 56145 684949 888000) 0 nil]) ((1185 . 1186) (t 24969 56128 480411 972000)) nil (24969 56145 684953 324000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 2119) (t 24969 56125 261416 161000)) nil (24969 56128 413755 272000) 0 nil]) ((1860 . 1863) (#("150" 0 3 (fontified t face highlight-numbers-number)) . 1860) (undo-tree-id12492 . -3) (undo-tree-id12493 . -3) (undo-tree-id12494 . -3) (undo-tree-id12495 . -3) (undo-tree-id12496 . -3) (undo-tree-id12497 . -3) (undo-tree-id12498 . -3) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1)) nil (24969 56125 20765 231000) 0 nil]) ((1857 . 1858) (#(" " 0 1 (fontified t)) . -1857) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) 1858 (1857 . 1858) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1857) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1858) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (#(" " 0 1 (fontified t)) . -1859) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) 1860 (1857 . 1860) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 1857) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (t 24969 56104 810442 824000)) nil (24969 56125 20908 700000) 0 nil]) ((1887 . 1889) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 1887)) nil (24969 56104 758735 832000) 0 nil] [nil nil ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 1857) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1)) ((1857 . 1858)) (24969 56099 609538 347000) 0 nil]) ((#("5" 0 1 (fontified t face highlight-numbers-number)) . 1857)) nil (24969 56099 609744 183000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1857) (t 24969 56084 341469 598000)) nil (24969 56099 609548 85000) 0 nil]) ((#("            " 0 12 (fontified t)) . -1403) (undo-tree-id12471 . -12) (undo-tree-id12472 . -12) (undo-tree-id12473 . -12) (undo-tree-id12474 . -12) (undo-tree-id12475 . -12) (undo-tree-id12476 . -12) (undo-tree-id12477 . -12) (undo-tree-id12478 . -12) (undo-tree-id12479 . -12) (undo-tree-id12480 . -12) (undo-tree-id12481 . -12) 1415 (1402 . 1415) (t 24969 56040 646527 61000) 1331) nil (24969 56084 276097 75000) 0 nil] [nil nil ((1368 . 1373) (t 24969 56033 107537 20000)) ((#(", 0.1" 0 2 (fontified t) 2 3 (fontified t face highlight-numbers-number) 3 4 (fontified t) 4 5 (fontified t face highlight-numbers-number)) . 1368) (undo-tree-id12372 . -4) (undo-tree-id12373 . -4) (undo-tree-id12374 . -4) (undo-tree-id12375 . -4) (undo-tree-id12376 . -4) (undo-tree-id12377 . -4) (undo-tree-id12378 . -4) (undo-tree-id12379 . -4) (undo-tree-id12380 . -4) (undo-tree-id12381 . -4) (undo-tree-id12382 . -4) (undo-tree-id12383 . -4) (undo-tree-id12384 . -4) (undo-tree-id12385 . -4) (undo-tree-id12386 . -4) (undo-tree-id12387 . -4) (undo-tree-id12388 . -4) (undo-tree-id12389 . -4) (undo-tree-id12390 . -4) (undo-tree-id12391 . -4) (undo-tree-id12392 . -4) (undo-tree-id12393 . -4) (undo-tree-id12394 . -4) (undo-tree-id12395 . -4) (undo-tree-id12396 . -4) (undo-tree-id12397 . -4) (undo-tree-id12398 . -4) (undo-tree-id12399 . -4) (undo-tree-id12400 . -4) (undo-tree-id12401 . -4) (undo-tree-id12402 . -4) (undo-tree-id12403 . -4) (undo-tree-id12404 . -4) (undo-tree-id12405 . -4) (undo-tree-id12406 . -4) (undo-tree-id12407 . -4) (undo-tree-id12408 . -4) (undo-tree-id12409 . -4) (undo-tree-id12410 . -4) (undo-tree-id12411 . -4) (undo-tree-id12412 . -4) (undo-tree-id12413 . -4) (undo-tree-id12414 . -4) (undo-tree-id12415 . -4) (undo-tree-id12416 . -4) (undo-tree-id12417 . -4) (undo-tree-id12418 . -4) (undo-tree-id12419 . -4) (undo-tree-id12420 . -4) (undo-tree-id12421 . -4) (undo-tree-id12422 . -4) (undo-tree-id12423 . -4) (undo-tree-id12424 . -4) (undo-tree-id12425 . -4) (undo-tree-id12426 . -4) (undo-tree-id12427 . -4) (undo-tree-id12428 . -4) (undo-tree-id12429 . -4) (undo-tree-id12430 . -4) (undo-tree-id12431 . -4) (undo-tree-id12432 . -4) (undo-tree-id12433 . -4) (undo-tree-id12434 . -4) (undo-tree-id12435 . -4) (undo-tree-id12436 . -4) (undo-tree-id12437 . -4) (undo-tree-id12438 . -4) (undo-tree-id12439 . -4) (undo-tree-id12440 . -4) (undo-tree-id12441 . -4) (undo-tree-id12442 . -4) (undo-tree-id12443 . -4) (undo-tree-id12444 . -4) (undo-tree-id12445 . -4) (undo-tree-id12446 . -4) (undo-tree-id12447 . -4) (undo-tree-id12448 . -4) (undo-tree-id12449 . -4) (undo-tree-id12450 . -4) (undo-tree-id12451 . -4) (undo-tree-id12452 . -4) (undo-tree-id12453 . -4) (undo-tree-id12454 . -4) (undo-tree-id12455 . -4) (undo-tree-id12456 . -4) (undo-tree-id12457 . -4) (undo-tree-id12458 . -4) (undo-tree-id12459 . -4) (undo-tree-id12460 . -4) (undo-tree-id12461 . -4) (undo-tree-id12462 . -4) (undo-tree-id12463 . -4) (undo-tree-id12464 . -4) (undo-tree-id12465 . -4) (undo-tree-id12466 . -4) (undo-tree-id12467 . -4) (undo-tree-id12468 . -4) (undo-tree-id12469 . -4) (undo-tree-id12470 . -4) (t 24969 56035 691533 605000)) (24969 56035 626760 719000) 0 nil]) ((1368 . 1369)) nil (24969 56039 378131 788000) 0 nil]) ((1342 . 1348) (t 24969 55998 416583 25000)) nil (24969 56033 43036 744000) 0 nil]) ((1354 . 1355) (#("10" 0 2 (fontified t face highlight-numbers-number)) . 1354) (undo-tree-id12362 . -2) (undo-tree-id12363 . -2) (undo-tree-id12364 . -2) (undo-tree-id12365 . -2) (undo-tree-id12366 . -2) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (t 24969 55979 863607 754000)) nil (24969 55998 351595 991000) 0 nil]) ((1362 . 1363) (#(" " 0 1 (fontified t)) . -1362) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) 1363 (1362 . 1363) (#("8" 0 1 (fontified t face highlight-numbers-number)) . -1362) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) 1363 (1356 . 1363)) nil (24969 55979 809761 736000) 0 nil]) ((1342 . 1343)) nil (24969 55979 809770 172000) 0 nil]) ((1342 . 1353)) nil (24969 55979 809772 937000) 0 nil]) ((#("+" 0 1 (fontified t)) . 1340) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (t 24969 55944 396655 286000)) nil (24969 55979 809784 108000) 0 nil]) ((1343 . 1345) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1343) (t 24969 55925 663680 534000)) nil (24969 55944 331285 466000) 0 nil]) ((1327 . 1331)) nil (24969 55925 608105 942000) 0 nil]) (1319) nil (24969 55925 608112 444000) 0 nil]) ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 1319) (undo-tree-id12195 . -13) (undo-tree-id12196 . -13) (undo-tree-id12197 . -13) (undo-tree-id12198 . -13) (undo-tree-id12199 . -8) (undo-tree-id12200 . -12) (undo-tree-id12201 . -12) (undo-tree-id12202 . -12) (undo-tree-id12203 . -12) (undo-tree-id12204 . -12) (undo-tree-id12205 . -12) (undo-tree-id12206 . -12) (undo-tree-id12207 . -12) (undo-tree-id12208 . -12) (undo-tree-id12209 . -12) (undo-tree-id12210 . -12) (undo-tree-id12211 . -12) (undo-tree-id12212 . -12) (undo-tree-id12213 . -12) (undo-tree-id12214 . -12) (undo-tree-id12215 . -12) (undo-tree-id12216 . -12) (undo-tree-id12217 . -12) (undo-tree-id12218 . -12) (undo-tree-id12219 . -12) (undo-tree-id12220 . -11) (undo-tree-id12221 . -11) (undo-tree-id12222 . -11) (undo-tree-id12223 . -11) (undo-tree-id12224 . -11) (undo-tree-id12225 . -11) (undo-tree-id12226 . -11) (undo-tree-id12227 . -11) (undo-tree-id12228 . -11) (undo-tree-id12229 . -11) (undo-tree-id12230 . -11) (undo-tree-id12231 . -11) (undo-tree-id12232 . -11) (undo-tree-id12233 . -11) (undo-tree-id12234 . -13) (undo-tree-id12235 . -13) (undo-tree-id12236 . -1) (undo-tree-id12237 . -8) (undo-tree-id12238 . -8) (undo-tree-id12239 . -8) (undo-tree-id12240 . -8) (undo-tree-id12241 . -8) (undo-tree-id12242 . -8) (undo-tree-id12243 . -8) (undo-tree-id12244 . -8) (undo-tree-id12245 . -8) (undo-tree-id12246 . -8) (undo-tree-id12247 . -8) (undo-tree-id12248 . -8) (undo-tree-id12249 . -8) (undo-tree-id12250 . -8) (undo-tree-id12251 . -8) (undo-tree-id12252 . -8) (undo-tree-id12253 . -8) (undo-tree-id12254 . -8) (undo-tree-id12255 . -8) (undo-tree-id12256 . -8) (undo-tree-id12257 . -8) 1327) nil (24969 55925 608227 400000) 0 nil]) ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1386) (1331 . 1387) 1330) nil (24969 55925 608236 346000) 0 nil]) ((1319 . 1331) (#(" " 0 1 (fontified nil)) . 1318) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (1319 . 1320) (1317 . 1319) (#(" " 0 1 (fontified t)) . -1317) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) 1318 (1313 . 1318) (#("    " 0 4 (fontified t)) . -1313) (undo-tree-id12282 . -4) (undo-tree-id12283 . -4) (undo-tree-id12284 . -4) (undo-tree-id12285 . -4) (undo-tree-id12286 . -4) (undo-tree-id12287 . -4) (undo-tree-id12288 . -4) (undo-tree-id12289 . -4) (undo-tree-id12290 . -4) (undo-tree-id12291 . -4) (undo-tree-id12292 . -4) (undo-tree-id12293 . -4) (undo-tree-id12294 . -4) (undo-tree-id12295 . -4) (undo-tree-id12296 . -4) (undo-tree-id12297 . -4) (undo-tree-id12298 . -4) (undo-tree-id12299 . -4) (undo-tree-id12300 . -4) (undo-tree-id12301 . -4) 1317 (1304 . 1317) 1272) nil (24969 55925 608316 96000) 0 nil]) ((#("        self.ysp += 2  # Only gravity if not on ground
" 0 1 (highlight-indent-guides-prop #15=(0 nil t 1 #31=(column nil highlight-indent-guides-even-face) #10=((#<marker at 802 in main.py> . #<marker at 2007 in main.py>))) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #16=(0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop #14=(0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop #17=(0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop #13=(1 nil t 1 #30=(column nil highlight-indent-guides-odd-face) #11=((#<marker at 1260 in main.py> . #<marker at 2464 in main.py>) . #10#)) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #19=(1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop #18=(1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop #20=(1 nil nil 1 nil #11#) rear-nonsticky t fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 20 (fontified t) 20 21 (fontified t face highlight-numbers-number) 21 23 (fontified t) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 54 (fontified t face font-lock-comment-face) 54 55 (fontified t face font-lock-comment-face)) . 1025) (undo-tree-id12302 . -55) (undo-tree-id12303 . -55) (undo-tree-id12304 . -55) (undo-tree-id12305 . -55) (undo-tree-id12306 . -55) (undo-tree-id12307 . -55) (undo-tree-id12308 . -55) (undo-tree-id12309 . -55) (undo-tree-id12310 . -55) (undo-tree-id12311 . -55) (undo-tree-id12312 . -55) (undo-tree-id12313 . -55) (undo-tree-id12314 . -55) (undo-tree-id12315 . -55) (undo-tree-id12316 . -55) (undo-tree-id12317 . -55) (undo-tree-id12318 . -55) (undo-tree-id12319 . -55) (undo-tree-id12320 . -7) (undo-tree-id12321 . -7) (undo-tree-id12322 . -7) (undo-tree-id12323 . -7) (undo-tree-id12324 . -7) (undo-tree-id12325 . -7) (undo-tree-id12326 . -7) (undo-tree-id12327 . -7) (undo-tree-id12328 . -7) (undo-tree-id12329 . -7) (undo-tree-id12330 . -7) (undo-tree-id12331 . -7) (undo-tree-id12332 . -7) (undo-tree-id12333 . -7) 1032 (t 24969 55917 285691 859000)) nil (24969 55925 608384 724000) 0 nil]) ((#("    " 0 1 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #12=((#<marker at 1454 in main.py> . #<marker at 1493 in main.py>) . #11#)) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #12#)) 2 3 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #12#)) 3 4 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #12#))) . -1258) (undo-tree-id11999 . -4) (undo-tree-id12000 . -4) (undo-tree-id12001 . -1) (undo-tree-id12002 . -4) (undo-tree-id12003 . -4) (undo-tree-id12004 . -4) (undo-tree-id12005 . -4) (undo-tree-id12006 . -4) (undo-tree-id12007 . -4) (undo-tree-id12008 . -4) (undo-tree-id12009 . -4) (undo-tree-id12010 . -4) (undo-tree-id12011 . -4) (undo-tree-id12012 . -4) (undo-tree-id12013 . -4) (undo-tree-id12014 . -4) (undo-tree-id12015 . -4) (undo-tree-id12016 . -4) (undo-tree-id12017 . -4) (undo-tree-id12018 . -4) (undo-tree-id12019 . -4) (undo-tree-id12020 . -4) (undo-tree-id12021 . -4) (undo-tree-id12022 . -4) 1262 (1250 . 1262)) nil (24969 55917 231920 97000) 0 nil]) ((1249 . 1250)) nil (24969 55917 231927 782000) 0 nil]) ((1211 . 1215)) nil (24969 55917 231930 367000) 0 nil]) (1203) nil (24969 55917 231932 621000) 0 nil]) ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 1203) (undo-tree-id12023 . -13) (undo-tree-id12024 . -13) (undo-tree-id12025 . -13) (undo-tree-id12026 . -13) (undo-tree-id12027 . -8) (undo-tree-id12028 . -12) (undo-tree-id12029 . -12) (undo-tree-id12030 . -12) (undo-tree-id12031 . -12) (undo-tree-id12032 . -12) (undo-tree-id12033 . -12) (undo-tree-id12034 . -12) (undo-tree-id12035 . -12) (undo-tree-id12036 . -12) (undo-tree-id12037 . -12) (undo-tree-id12038 . -12) (undo-tree-id12039 . -12) (undo-tree-id12040 . -12) (undo-tree-id12041 . -12) (undo-tree-id12042 . -12) (undo-tree-id12043 . -12) (undo-tree-id12044 . -12) (undo-tree-id12045 . -12) (undo-tree-id12046 . -12) (undo-tree-id12047 . -12) (undo-tree-id12048 . -11) (undo-tree-id12049 . -11) (undo-tree-id12050 . -11) (undo-tree-id12051 . -11) (undo-tree-id12052 . -11) (undo-tree-id12053 . -11) (undo-tree-id12054 . -11) (undo-tree-id12055 . -11) (undo-tree-id12056 . -11) (undo-tree-id12057 . -11) (undo-tree-id12058 . -11) (undo-tree-id12059 . -11) (undo-tree-id12060 . -11) (undo-tree-id12061 . -11) (undo-tree-id12062 . -13) (undo-tree-id12063 . -13) (undo-tree-id12064 . -1) (undo-tree-id12065 . -8) (undo-tree-id12066 . -8) (undo-tree-id12067 . -8) (undo-tree-id12068 . -8) (undo-tree-id12069 . -8) (undo-tree-id12070 . -8) (undo-tree-id12071 . -8) (undo-tree-id12072 . -8) (undo-tree-id12073 . -8) (undo-tree-id12074 . -8) (undo-tree-id12075 . -8) (undo-tree-id12076 . -8) (undo-tree-id12077 . -8) (undo-tree-id12078 . -8) (undo-tree-id12079 . -8) (undo-tree-id12080 . -8) (undo-tree-id12081 . -8) (undo-tree-id12082 . -8) (undo-tree-id12083 . -8) (undo-tree-id12084 . -8) (undo-tree-id12085 . -8) 1211) nil (24969 55917 232445 662000) 0 nil]) ((#("
" 0 1 (fontified nil)) . -1249) (1215 . 1250) 1214) nil (24969 55917 232455 521000) 0 nil]) ((1202 . 1215) (#(" " 0 1 (fontified t)) . -1202) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) 1203 (1201 . 1203) (#(" " 0 1 (fontified t)) . -1201) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) 1202 (1197 . 1202) (#("    " 0 4 (fontified t)) . -1197) (undo-tree-id12110 . -4) (undo-tree-id12111 . -4) 1201 (1189 . 1201) (#("    " 0 4 (fontified t)) . 1189) (undo-tree-id12112 . -4) (undo-tree-id12113 . -4) (undo-tree-id12114 . -1) 1193 (#("    " 0 4 (fontified t)) . -1193) (undo-tree-id12115 . -4) (undo-tree-id12116 . -4) 1197 (#("    " 0 4 (fontified t)) . -1197) (undo-tree-id12117 . -4) (undo-tree-id12118 . -4) 1201 (1188 . 1201) 1156) nil (24969 55917 232516 455000) 0 nil]) ((#("        self.xsp = self.xsp * 0.9
" 0 1 (highlight-indent-guides-prop #22=(0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #23=(0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop #21=(0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop #25=(0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop #24=(1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #27=(1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop #26=(1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop #28=(1 nil nil 1 nil #11#) rear-nonsticky t fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 17 (fontified t) 17 19 (fontified t) 19 23 (fontified t face font-lock-keyword-face) 23 30 (fontified t) 30 31 (fontified t face highlight-numbers-number) 31 32 (fontified t) 32 33 (fontified t face highlight-numbers-number) 33 34 (fontified t)) . 1080) (undo-tree-id12119 . -34) (undo-tree-id12120 . -8) (undo-tree-id12121 . -33) (undo-tree-id12122 . -8) (undo-tree-id12123 . -8) (undo-tree-id12124 . -34) (undo-tree-id12125 . -34) (undo-tree-id12126 . -34) (undo-tree-id12127 . -34) (undo-tree-id12128 . -34) (undo-tree-id12129 . -34) (undo-tree-id12130 . -34) (undo-tree-id12131 . -34) (undo-tree-id12132 . -34) (undo-tree-id12133 . -34) (undo-tree-id12134 . -34) (undo-tree-id12135 . -34) (undo-tree-id12136 . -34) (undo-tree-id12137 . -34) (undo-tree-id12138 . -8) (undo-tree-id12139 . -34) (undo-tree-id12140 . -34) (undo-tree-id12141 . -8) (undo-tree-id12142 . -8) (undo-tree-id12143 . -8) (undo-tree-id12144 . -8) (undo-tree-id12145 . -8) (undo-tree-id12146 . -8) (undo-tree-id12147 . -8) (undo-tree-id12148 . -8) (undo-tree-id12149 . -8) (undo-tree-id12150 . -8) (undo-tree-id12151 . -8) (undo-tree-id12152 . -8) (undo-tree-id12153 . -8) (undo-tree-id12154 . -8) (undo-tree-id12155 . -8) (undo-tree-id12156 . -8) (undo-tree-id12157 . -8) (undo-tree-id12158 . -8) (undo-tree-id12159 . -8) (undo-tree-id12160 . -8) (undo-tree-id12161 . -8) (undo-tree-id12162 . -8) (undo-tree-id12163 . -8) (undo-tree-id12164 . -8) (undo-tree-id12165 . -8) (undo-tree-id12166 . -8) (undo-tree-id12167 . -8) (undo-tree-id12168 . -8) (undo-tree-id12169 . -8) (undo-tree-id12170 . -8) (undo-tree-id12171 . -8) (undo-tree-id12172 . -8) (undo-tree-id12173 . -8) (undo-tree-id12174 . -8) (undo-tree-id12175 . -8) (undo-tree-id12176 . -8) (undo-tree-id12177 . -8) (undo-tree-id12178 . -8) (undo-tree-id12179 . -8) (undo-tree-id12180 . -8) (undo-tree-id12181 . -8) (undo-tree-id12182 . -8) (undo-tree-id12183 . -8) (undo-tree-id12184 . -8) (undo-tree-id12185 . -8) (undo-tree-id12186 . -8) (undo-tree-id12187 . -8) (undo-tree-id12188 . -8) (undo-tree-id12189 . -8) (undo-tree-id12190 . -8) (undo-tree-id12191 . -8) (undo-tree-id12192 . -8) (undo-tree-id12193 . -8) (undo-tree-id12194 . -8) 1088 (t 24969 54532 144115 590000)) nil (24969 55917 232646 889000) 0 nil]) ((#("
" 0 1 (fontified nil)) . -1113) (1024 . 1114) 971) nil (24969 54532 89022 418000) 0 nil]) ((#("        self.ysp += 2  # Only gravity if not on ground
        self.xsp = self.xsp * 0.9
" 0 1 (highlight-indent-guides-prop #15# fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #16# fontified t) 2 3 (highlight-indent-guides-prop #14# fontified t) 3 4 (highlight-indent-guides-prop #17# fontified t) 4 5 (highlight-indent-guides-prop #13# fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #19# fontified t) 6 7 (highlight-indent-guides-prop #18# fontified t) 7 8 (highlight-indent-guides-prop #20# rear-nonsticky t fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 20 (fontified t) 20 21 (fontified t face highlight-numbers-number) 21 23 (fontified t) 23 25 (fontified t face font-lock-comment-delimiter-face) 25 54 (fontified t face font-lock-comment-face) 54 55 (fontified t face font-lock-comment-face) 55 56 (highlight-indent-guides-prop #22# fontified t face highlight-indent-guides-even-face) 56 57 (highlight-indent-guides-prop #23# fontified t) 57 58 (highlight-indent-guides-prop #21# fontified t) 58 59 (highlight-indent-guides-prop #25# fontified t) 59 60 (highlight-indent-guides-prop #24# fontified t face highlight-indent-guides-odd-face) 60 61 (highlight-indent-guides-prop #27# fontified t) 61 62 (highlight-indent-guides-prop #26# fontified t) 62 63 (highlight-indent-guides-prop #28# rear-nonsticky t fontified t) 63 67 (fontified t face font-lock-keyword-face) 67 72 (fontified t) 72 74 (fontified t) 74 78 (fontified t face font-lock-keyword-face) 78 85 (fontified t) 85 86 (fontified t face highlight-numbers-number) 86 87 (fontified t) 87 88 (fontified t face highlight-numbers-number) 88 89 (fontified t)) . 1244) (undo-tree-id11777 . -55) (undo-tree-id11778 . -89) (undo-tree-id11779 . -63) (undo-tree-id11780 . -20) (undo-tree-id11781 . -8) (undo-tree-id11782 . -63) (undo-tree-id11783 . -89) (undo-tree-id11784 . -89) (undo-tree-id11785 . -89) (undo-tree-id11786 . -89) (undo-tree-id11787 . 35) (undo-tree-id11788 . -89) (undo-tree-id11789 . -89) (undo-tree-id11790 . -89) (undo-tree-id11791 . -89) (undo-tree-id11792 . -89) (undo-tree-id11793 . -89) (undo-tree-id11794 . -89) (undo-tree-id11795 . -89) (undo-tree-id11796 . -89) (undo-tree-id11797 . -89) (undo-tree-id11798 . -89) (undo-tree-id11799 . -89) (undo-tree-id11800 . -89) (undo-tree-id11801 . -89) (undo-tree-id11802 . -89) (undo-tree-id11803 . -89) (undo-tree-id11804 . -89) (undo-tree-id11805 . -89) (undo-tree-id11806 . -89) (undo-tree-id11807 . -89) (undo-tree-id11808 . -89) (undo-tree-id11809 . -89) (undo-tree-id11810 . -89) (undo-tree-id11811 . -89) (undo-tree-id11812 . -89) (undo-tree-id11813 . -89) (undo-tree-id11814 . -89) (undo-tree-id11815 . -89) (undo-tree-id11816 . -89) (undo-tree-id11817 . -89) (undo-tree-id11818 . -89) (undo-tree-id11819 . -89) (undo-tree-id11820 . -89) (undo-tree-id11821 . -89) (undo-tree-id11822 . -89) (undo-tree-id11823 . -89) (undo-tree-id11824 . -89) (undo-tree-id11825 . -89) (undo-tree-id11826 . -89) (undo-tree-id11827 . -89) (undo-tree-id11828 . -89) (undo-tree-id11829 . -89) (undo-tree-id11830 . -89) (undo-tree-id11831 . -89) (undo-tree-id11832 . -89) (undo-tree-id11833 . -89) (undo-tree-id11834 . -89) (undo-tree-id11835 . -55) (undo-tree-id11836 . -55) (undo-tree-id11837 . -89) (undo-tree-id11838 . -89) (undo-tree-id11839 . -89) (undo-tree-id11840 . -8) (undo-tree-id11841 . -63) (undo-tree-id11842 . -8) (undo-tree-id11843 . -8) (undo-tree-id11844 . -8) (undo-tree-id11845 . -8) (undo-tree-id11846 . -8) (undo-tree-id11847 . -8) (undo-tree-id11848 . -8) (undo-tree-id11849 . -8) (undo-tree-id11850 . -8) (undo-tree-id11851 . -8) (undo-tree-id11852 . -8) (undo-tree-id11853 . -8) (undo-tree-id11854 . -8) (undo-tree-id11855 . -8) (undo-tree-id11856 . -8) (undo-tree-id11857 . -8) (undo-tree-id11858 . -8) (undo-tree-id11859 . -8) (undo-tree-id11860 . -8) (undo-tree-id11861 . -8) (undo-tree-id11862 . -8) (undo-tree-id11863 . -55) (undo-tree-id11864 . -56) (undo-tree-id11865 . -59) (undo-tree-id11866 . -60) (undo-tree-id11867 . -89) (undo-tree-id11868 . -55) (undo-tree-id11869 . -56) (undo-tree-id11870 . -59) (undo-tree-id11871 . -60) (undo-tree-id11872 . -89) (undo-tree-id11873 . -8) (undo-tree-id11874 . -8) (undo-tree-id11875 . -8) (undo-tree-id11876 . -8) (undo-tree-id11877 . -8) (undo-tree-id11878 . -8) (undo-tree-id11879 . -8) (undo-tree-id11880 . -8) (undo-tree-id11881 . -8) (undo-tree-id11882 . -8) (undo-tree-id11883 . -8) (undo-tree-id11884 . -8) (undo-tree-id11885 . -8) (undo-tree-id11886 . -8) (undo-tree-id11887 . -8) (undo-tree-id11888 . -8) (undo-tree-id11889 . -8) (undo-tree-id11890 . -8) (undo-tree-id11891 . -8) (undo-tree-id11892 . -8) (undo-tree-id11893 . -8) (undo-tree-id11894 . -8) (undo-tree-id11895 . -8) (undo-tree-id11896 . -8) (undo-tree-id11897 . -8) (undo-tree-id11898 . -8) (undo-tree-id11899 . -8) (undo-tree-id11900 . -8) (undo-tree-id11901 . -8) (undo-tree-id11902 . -8) (undo-tree-id11903 . -8) (undo-tree-id11904 . -8) (undo-tree-id11905 . -8) (undo-tree-id11906 . -8) (undo-tree-id11907 . -8) (undo-tree-id11908 . -8) (undo-tree-id11909 . -8) (undo-tree-id11910 . -8) (undo-tree-id11911 . -8) (undo-tree-id11912 . -8) (undo-tree-id11913 . -8) (undo-tree-id11914 . -8) (undo-tree-id11915 . -8) (undo-tree-id11916 . -8) (undo-tree-id11917 . -8) (undo-tree-id11918 . -8) (undo-tree-id11919 . -8) (undo-tree-id11920 . -8) (undo-tree-id11921 . -8) (undo-tree-id11922 . -8) (undo-tree-id11923 . -8) (undo-tree-id11924 . -8) (undo-tree-id11925 . -8) (undo-tree-id11926 . -8) (undo-tree-id11927 . -8) (undo-tree-id11928 . -8) (undo-tree-id11929 . -8) (undo-tree-id11930 . -8) (undo-tree-id11931 . -8) (undo-tree-id11932 . -8) (undo-tree-id11933 . -8) (undo-tree-id11934 . -8) (undo-tree-id11935 . -8) (undo-tree-id11936 . -8) (undo-tree-id11937 . -8) (undo-tree-id11938 . -8) (undo-tree-id11939 . -8) (undo-tree-id11940 . -8) (undo-tree-id11941 . -8) (undo-tree-id11942 . -8) (undo-tree-id11943 . -8) (undo-tree-id11944 . -8) (undo-tree-id11945 . -8) (undo-tree-id11946 . -8) (undo-tree-id11947 . -8) (undo-tree-id11948 . -8) (undo-tree-id11949 . -8) (undo-tree-id11950 . -8) (undo-tree-id11951 . -8) (undo-tree-id11952 . -8) (undo-tree-id11953 . -8) (undo-tree-id11954 . -8) (undo-tree-id11955 . -8) (undo-tree-id11956 . -8) (undo-tree-id11957 . -8) (undo-tree-id11958 . -8) (undo-tree-id11959 . -8) (undo-tree-id11960 . -8) (undo-tree-id11961 . -8) (undo-tree-id11962 . -8) (undo-tree-id11963 . -8) (undo-tree-id11964 . -8) (undo-tree-id11965 . -8) (undo-tree-id11966 . -8) (undo-tree-id11967 . -8) (undo-tree-id11968 . -8) (undo-tree-id11969 . -8) (undo-tree-id11970 . -8) (undo-tree-id11971 . -8) (undo-tree-id11972 . -89) (undo-tree-id11973 . -8) (undo-tree-id11974 . -63) (undo-tree-id11975 . -8) (undo-tree-id11976 . -8) (undo-tree-id11977 . -8) (undo-tree-id11978 . -8) (undo-tree-id11979 . -8) (undo-tree-id11980 . -8) (undo-tree-id11981 . -8) (undo-tree-id11982 . -8) (undo-tree-id11983 . -8) (undo-tree-id11984 . -8) (undo-tree-id11985 . -8) (undo-tree-id11986 . -8) (undo-tree-id11987 . -63) (undo-tree-id11988 . -63) (undo-tree-id11989 . -63) (undo-tree-id11990 . -63) (undo-tree-id11991 . -63) (undo-tree-id11992 . -55) (undo-tree-id11993 . -63) (undo-tree-id11994 . -63) (undo-tree-id11995 . -63) (undo-tree-id11996 . -63) (undo-tree-id11997 . -63) (undo-tree-id11998 . -63) 1307 (t 24969 54520 964130 892000)) nil (24969 54532 89488 671000) 0 nil]) ((#(" " 0 1 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #29=((#<marker at 1587 in main.py> . #<marker at 1619 in main.py>) . #11#)) face highlight-indent-guides-even-face)) . 1252) (undo-tree-id11774 . -1)) nil (24969 54520 900227 796000) 0 nil]) ((#(" " 0 1 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #29#) face highlight-indent-guides-even-face)) . 1252) (undo-tree-id11775 . -1)) nil (24969 54520 900235 911000) 0 nil]) ((#(" " 0 1 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #29#) face highlight-indent-guides-even-face)) . 1252) (undo-tree-id11776 . -1)) nil (24969 54520 900241 10000) 0 nil]) ((#(" " 0 1 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #29#) face highlight-indent-guides-even-face)) . 1252) (t 24969 54517 708135 357000)) nil (24969 54520 900244 236000) 0 nil]) ((#("        else:
" 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 4 5 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) face highlight-indent-guides-odd-face) 5 6 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 6 7 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 7 8 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 8 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 14 (fontified t)) . 1244) (undo-tree-id11745 . -14) (undo-tree-id11746 . -14) (undo-tree-id11747 . -14) (undo-tree-id11748 . -14) (undo-tree-id11749 . -14) (undo-tree-id11750 . -12) (undo-tree-id11751 . -12) (undo-tree-id11752 . -12) (undo-tree-id11753 . -12) (undo-tree-id11754 . -12) (undo-tree-id11755 . -12) (undo-tree-id11756 . -12) (undo-tree-id11757 . -12) (undo-tree-id11758 . -12) (undo-tree-id11759 . -12) (undo-tree-id11760 . -12) (undo-tree-id11761 . -12) (undo-tree-id11762 . -12) (undo-tree-id11763 . -12) (undo-tree-id11764 . -12) (undo-tree-id11765 . -12) (undo-tree-id11766 . -12) (undo-tree-id11767 . -12) (undo-tree-id11768 . -12) (undo-tree-id11769 . -12) (undo-tree-id11770 . -12) (undo-tree-id11771 . -12) (undo-tree-id11772 . -12) (undo-tree-id11773 . -12) 1256 (t 24969 54495 470165 945000)) nil (24969 54517 642716 19000) 0 nil]) ((1315 . 1316) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1315) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) 1316 (1304 . 1316) (1303 . 1304) (1282 . 1303) (#("2 //   " 0 1 (fontified t face highlight-numbers-number) 1 7 (fontified t)) . -1282) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -7) 1289 (1283 . 1289) (t 24969 54481 835184 785000)) nil (24969 54495 419781 691000) 0 nil]) ((1266 . 1270)) nil (24969 54481 596026 694000) 0 nil]) (1270) nil (24969 54481 596033 76000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1257) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) 1258 (1252 . 1258) (#("    " 0 4 (fontified t)) . -1252) (undo-tree-id11576 . -4) (undo-tree-id11577 . -4) (undo-tree-id11578 . -4) (undo-tree-id11579 . -4) (undo-tree-id11580 . -4) (undo-tree-id11581 . -4) (undo-tree-id11582 . -4) (undo-tree-id11583 . -4) (undo-tree-id11584 . -4) (undo-tree-id11585 . -4) (undo-tree-id11586 . -4) (undo-tree-id11587 . -4) (undo-tree-id11588 . -4) (undo-tree-id11589 . -4) (undo-tree-id11590 . -4) (undo-tree-id11591 . -4) (undo-tree-id11592 . -4) (undo-tree-id11593 . -4) (undo-tree-id11594 . -4) (undo-tree-id11595 . -4) (undo-tree-id11596 . -4) (undo-tree-id11597 . -4) (undo-tree-id11598 . -4) (undo-tree-id11599 . -4) (undo-tree-id11600 . -4) 1256 (1243 . 1256) 1219) nil (24969 54481 596275 450000) 0 nil]) ((nil rear-nonsticky nil 1251 . 1252) (#("
" 0 1 (fontified nil)) . -1265) (1243 . 1266) 1211) nil (24969 54481 596283 435000) 0 nil]) ((#("        self.ysp += 2
" 0 1 (highlight-indent-guides-prop #32=(0 nil t 1 #31# #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #35=(0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop #34=(0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop #33=(0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop #37=(1 nil t 1 #30# #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #36=(1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop #38=(1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop #39=(1 nil nil 1 nil #11#) fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 20 (fontified t) 20 21 (fontified t face highlight-numbers-number) 21 22 (fontified t)) . 1278) (undo-tree-id11601 . -22) (undo-tree-id11602 . -21) (undo-tree-id11603 . -22) (undo-tree-id11604 . -22) (undo-tree-id11605 . -22) (undo-tree-id11606 . -22) (undo-tree-id11607 . -22) (undo-tree-id11608 . -22) (undo-tree-id11609 . -22) (undo-tree-id11610 . -22) (undo-tree-id11611 . -22) (undo-tree-id11612 . -22) (undo-tree-id11613 . -22) (undo-tree-id11614 . -22) (undo-tree-id11615 . -22) (undo-tree-id11616 . -22) (undo-tree-id11617 . -22) (undo-tree-id11618 . -22) (undo-tree-id11619 . -22) (undo-tree-id11620 . -22) (undo-tree-id11621 . -22) (undo-tree-id11622 . -22) (undo-tree-id11623 . -22) (undo-tree-id11624 . -22) (undo-tree-id11625 . -22) (undo-tree-id11626 . -22) (undo-tree-id11627 . -22) (undo-tree-id11628 . -22) (undo-tree-id11629 . -22) (undo-tree-id11630 . -22) (undo-tree-id11631 . -22) (undo-tree-id11632 . -22) (undo-tree-id11633 . -22) (undo-tree-id11634 . -22) (undo-tree-id11635 . -22) (undo-tree-id11636 . -22) (undo-tree-id11637 . -22) (undo-tree-id11638 . -22) (undo-tree-id11639 . -22) (undo-tree-id11640 . -22) (undo-tree-id11641 . -22) (undo-tree-id11642 . -22) (undo-tree-id11643 . -22) (undo-tree-id11644 . -22) (undo-tree-id11645 . -22) (undo-tree-id11646 . -22) (undo-tree-id11647 . -22) (undo-tree-id11648 . -22) (undo-tree-id11649 . -22) (undo-tree-id11650 . -22) (undo-tree-id11651 . -22) (undo-tree-id11652 . -22) (undo-tree-id11653 . -22) (undo-tree-id11654 . -22) (undo-tree-id11655 . -22) (undo-tree-id11656 . -22) (undo-tree-id11657 . -8) (undo-tree-id11658 . -8) (undo-tree-id11659 . -8) (undo-tree-id11660 . -8) (undo-tree-id11661 . -8) (undo-tree-id11662 . -8) (undo-tree-id11663 . -8) (undo-tree-id11664 . -8) (undo-tree-id11665 . -8) (undo-tree-id11666 . -8) (undo-tree-id11667 . -8) (undo-tree-id11668 . -8) (undo-tree-id11669 . -8) (undo-tree-id11670 . -8) (undo-tree-id11671 . -8) (undo-tree-id11672 . -8) (undo-tree-id11673 . -8) (undo-tree-id11674 . -8) (undo-tree-id11675 . -8) (undo-tree-id11676 . -8) (undo-tree-id11677 . -8) (undo-tree-id11678 . -8) (undo-tree-id11679 . -8) (undo-tree-id11680 . -8) (undo-tree-id11681 . -8) (undo-tree-id11682 . -8) (undo-tree-id11683 . -8) (undo-tree-id11684 . -8) (undo-tree-id11685 . -8) (undo-tree-id11686 . -8) (undo-tree-id11687 . -1) (undo-tree-id11688 . -4) (undo-tree-id11689 . -5) (undo-tree-id11690 . -1) (undo-tree-id11691 . -4) (undo-tree-id11692 . -5) (undo-tree-id11693 . -8) (undo-tree-id11694 . -8) (undo-tree-id11695 . -8) (undo-tree-id11696 . -8) (undo-tree-id11697 . -8) (undo-tree-id11698 . -8) (undo-tree-id11699 . -8) (undo-tree-id11700 . -8) (undo-tree-id11701 . -8) (undo-tree-id11702 . -8) (undo-tree-id11703 . -8) (undo-tree-id11704 . -8) (undo-tree-id11705 . -8) (undo-tree-id11706 . -8) (undo-tree-id11707 . -8) (undo-tree-id11708 . -8) (undo-tree-id11709 . -8) (undo-tree-id11710 . -8) (undo-tree-id11711 . -8) (undo-tree-id11712 . -8) (undo-tree-id11713 . -8) (undo-tree-id11714 . -8) (undo-tree-id11715 . -8) (undo-tree-id11716 . -8) (undo-tree-id11717 . -8) (undo-tree-id11718 . -8) (undo-tree-id11719 . -8) (undo-tree-id11720 . -8) (undo-tree-id11721 . -8) (undo-tree-id11722 . -8) (undo-tree-id11723 . -8) (undo-tree-id11724 . -8) (undo-tree-id11725 . -8) (undo-tree-id11726 . -8) (undo-tree-id11727 . -8) (undo-tree-id11728 . -8) (undo-tree-id11729 . -8) (undo-tree-id11730 . -8) (undo-tree-id11731 . -8) 1286 (t 24969 54457 743218 239000)) nil (24969 54481 596490 183000) 0 nil] [nil nil ((#("self.xsp = self.xsp * 0.9
        " 0 4 (fontified nil face font-lock-keyword-face) 4 9 (fontified nil) 9 11 (fontified nil) 11 15 (fontified nil face font-lock-keyword-face) 15 22 (fontified nil) 22 23 (fontified nil face highlight-numbers-number) 23 24 (fontified nil) 24 25 (fontified nil face highlight-numbers-number) 25 26 (fontified nil) 26 27 (highlight-indent-guides-prop #32# fontified nil face highlight-indent-guides-even-face) 27 28 (highlight-indent-guides-prop #35# fontified nil) 28 29 (highlight-indent-guides-prop #34# fontified nil) 29 30 (highlight-indent-guides-prop #33# fontified nil) 30 31 (highlight-indent-guides-prop #37# fontified nil face highlight-indent-guides-odd-face) 31 32 (highlight-indent-guides-prop #36# fontified nil) 32 33 (highlight-indent-guides-prop #38# fontified nil) 33 34 (highlight-indent-guides-prop #39# fontified nil)) . 1252) (undo-tree-id11530 . -13) (undo-tree-id11531 . -34) (undo-tree-id11532 . -34) (undo-tree-id11533 . -34) (undo-tree-id11534 . -34) (undo-tree-id11535 . -34) (undo-tree-id11536 . -34) (undo-tree-id11537 . -34) (undo-tree-id11538 . -34) (undo-tree-id11539 . -34) (undo-tree-id11540 . -34) (undo-tree-id11541 . -34) (undo-tree-id11542 . -34) (undo-tree-id11543 . -34) (undo-tree-id11544 . -34) (undo-tree-id11545 . -34) (undo-tree-id11546 . -34) (undo-tree-id11547 . -34) (undo-tree-id11548 . -34) (undo-tree-id11549 . -34) (undo-tree-id11550 . -34) (undo-tree-id11551 . -34) (undo-tree-id11552 . -34) (undo-tree-id11553 . -34) (undo-tree-id11554 . -34) (undo-tree-id11555 . -34) (undo-tree-id11556 . -34) (undo-tree-id11557 . -34) (undo-tree-id11558 . -34) (undo-tree-id11559 . -34) (undo-tree-id11560 . -34) 1286 (t 24969 54457 743218 239000)) ((1252 . 1286)) (24969 54473 457917 626000) 0 nil] [nil nil ((#("self.xsp = self.xsp * 0.9
        " 0 4 (fontified t face font-lock-keyword-face) 4 9 (fontified t) 9 11 (fontified t) 11 15 (fontified t face font-lock-keyword-face) 15 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t) 24 25 (fontified t face highlight-numbers-number) 25 26 (fontified t) 26 27 (highlight-indent-guides-prop #32# fontified t face highlight-indent-guides-even-face) 27 28 (highlight-indent-guides-prop #35# fontified t) 28 29 (highlight-indent-guides-prop #34# fontified t) 29 30 (highlight-indent-guides-prop #33# fontified t) 30 31 (highlight-indent-guides-prop #37# fontified t face highlight-indent-guides-odd-face) 31 32 (highlight-indent-guides-prop #36# fontified t) 32 33 (highlight-indent-guides-prop #38# fontified t) 33 34 (highlight-indent-guides-prop #39# fontified t)) . 1252) (undo-tree-id11495 . -26) (undo-tree-id11496 . -26) (undo-tree-id11497 . -26) (undo-tree-id11498 . -34) (undo-tree-id11499 . -34) (undo-tree-id11500 . -34) (undo-tree-id11501 . -34) (undo-tree-id11502 . -34) (undo-tree-id11503 . -34) (undo-tree-id11504 . -34) (undo-tree-id11505 . -34) (undo-tree-id11506 . -34) (undo-tree-id11507 . -34) (undo-tree-id11508 . -34) (undo-tree-id11509 . -26) (undo-tree-id11510 . -34) (undo-tree-id11511 . -34) (undo-tree-id11512 . -34) (undo-tree-id11513 . -34) (undo-tree-id11514 . -34) (undo-tree-id11515 . -34) (undo-tree-id11516 . -34) (undo-tree-id11517 . -34) (undo-tree-id11518 . -34) (undo-tree-id11519 . -34) (undo-tree-id11520 . -34) (undo-tree-id11521 . -34) (undo-tree-id11522 . -34) (undo-tree-id11523 . -34) (undo-tree-id11524 . -34) (undo-tree-id11525 . -34) (undo-tree-id11526 . -34) (undo-tree-id11527 . -34) (undo-tree-id11528 . -34) (undo-tree-id11529 . -34) 1286 (t 24969 54457 743218 239000)) ((1252 . 1286)) (24969 54472 564483 906000) 0 nil]) ((#("
" 0 1 (fontified nil)) . -1299) (1243 . 1300) 1211) nil (24969 54473 458484 268000) 0 nil]) ((#("        self.xsp = self.xsp * 0.9
        self.ysp += 2
" 0 1 (highlight-indent-guides-prop #22# fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #23# fontified t) 2 3 (highlight-indent-guides-prop #21# fontified t) 3 4 (highlight-indent-guides-prop #25# fontified t) 4 5 (highlight-indent-guides-prop #24# fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #27# fontified t) 6 7 (highlight-indent-guides-prop #26# fontified t) 7 8 (highlight-indent-guides-prop #28# rear-nonsticky t fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 17 (fontified t) 17 19 (fontified t) 19 23 (fontified t face font-lock-keyword-face) 23 30 (fontified t) 30 31 (fontified t face highlight-numbers-number) 31 32 (fontified t) 32 33 (fontified t face highlight-numbers-number) 33 34 (fontified t) 34 35 (highlight-indent-guides-prop #32# fontified t face highlight-indent-guides-even-face) 35 36 (highlight-indent-guides-prop #35# fontified t) 36 37 (highlight-indent-guides-prop #34# fontified t) 37 38 (highlight-indent-guides-prop #33# fontified t) 38 39 (highlight-indent-guides-prop #37# fontified t face highlight-indent-guides-odd-face) 39 40 (highlight-indent-guides-prop #36# fontified t) 40 41 (highlight-indent-guides-prop #38# fontified t) 41 42 (highlight-indent-guides-prop #39# fontified t) 42 46 (fontified t face font-lock-keyword-face) 46 54 (fontified t) 54 55 (fontified t face highlight-numbers-number) 55 56 (fontified t)) . 1414) (undo-tree-id11284 . -34) (undo-tree-id11285 . -54) (undo-tree-id11286 . -54) (undo-tree-id11287 . -54) (undo-tree-id11288 . -54) (undo-tree-id11289 . -20) (undo-tree-id11290 . 1) (undo-tree-id11291 . -34) (undo-tree-id11292 . -34) (undo-tree-id11293 . -56) (undo-tree-id11294 . -56) (undo-tree-id11295 . -54) (undo-tree-id11296 . -54) (undo-tree-id11297 . -54) (undo-tree-id11298 . -54) (undo-tree-id11299 . -54) (undo-tree-id11300 . -54) (undo-tree-id11301 . -54) (undo-tree-id11302 . -54) (undo-tree-id11303 . -54) (undo-tree-id11304 . -54) (undo-tree-id11305 . -54) (undo-tree-id11306 . -54) (undo-tree-id11307 . -54) (undo-tree-id11308 . -54) (undo-tree-id11309 . -54) (undo-tree-id11310 . -54) (undo-tree-id11311 . -54) (undo-tree-id11312 . -54) (undo-tree-id11313 . -54) (undo-tree-id11314 . -54) (undo-tree-id11315 . -54) (undo-tree-id11316 . -54) (undo-tree-id11317 . -54) (undo-tree-id11318 . -54) (undo-tree-id11319 . -54) (undo-tree-id11320 . -54) (undo-tree-id11321 . -54) (undo-tree-id11322 . -54) (undo-tree-id11323 . -54) (undo-tree-id11324 . -54) (undo-tree-id11325 . -54) (undo-tree-id11326 . -54) (undo-tree-id11327 . -54) (undo-tree-id11328 . -54) (undo-tree-id11329 . -54) (undo-tree-id11330 . -54) (undo-tree-id11331 . -54) (undo-tree-id11332 . -54) (undo-tree-id11333 . -54) (undo-tree-id11334 . -54) (undo-tree-id11335 . -54) (undo-tree-id11336 . -54) (undo-tree-id11337 . -54) (undo-tree-id11338 . -54) (undo-tree-id11339 . -54) (undo-tree-id11340 . -54) (undo-tree-id11341 . -54) (undo-tree-id11342 . -54) (undo-tree-id11343 . -54) (undo-tree-id11344 . -54) (undo-tree-id11345 . -54) (undo-tree-id11346 . -54) (undo-tree-id11347 . -54) (undo-tree-id11348 . -54) (undo-tree-id11349 . -54) (undo-tree-id11350 . -54) (undo-tree-id11351 . -54) (undo-tree-id11352 . -54) (undo-tree-id11353 . -54) (undo-tree-id11354 . -54) (undo-tree-id11355 . -54) (undo-tree-id11356 . -54) (undo-tree-id11357 . -54) (undo-tree-id11358 . -54) (undo-tree-id11359 . -54) (undo-tree-id11360 . -54) (undo-tree-id11361 . -54) (undo-tree-id11362 . -54) (undo-tree-id11363 . -54) (undo-tree-id11364 . -54) (undo-tree-id11365 . -54) (undo-tree-id11366 . -54) (undo-tree-id11367 . -54) (undo-tree-id11368 . -54) (undo-tree-id11369 . -54) (undo-tree-id11370 . -54) (undo-tree-id11371 . -54) (undo-tree-id11372 . -54) (undo-tree-id11373 . -54) (undo-tree-id11374 . -54) (undo-tree-id11375 . -54) (undo-tree-id11376 . -54) (undo-tree-id11377 . -54) (undo-tree-id11378 . -54) (undo-tree-id11379 . -54) (undo-tree-id11380 . -54) (undo-tree-id11381 . -54) (undo-tree-id11382 . -54) (undo-tree-id11383 . -54) (undo-tree-id11384 . -54) (undo-tree-id11385 . -54) (undo-tree-id11386 . -54) (undo-tree-id11387 . -54) (undo-tree-id11388 . -54) (undo-tree-id11389 . -54) (undo-tree-id11390 . -54) (undo-tree-id11391 . -54) (undo-tree-id11392 . -54) (undo-tree-id11393 . -54) (undo-tree-id11394 . -54) (undo-tree-id11395 . -54) (undo-tree-id11396 . -54) (undo-tree-id11397 . -54) (undo-tree-id11398 . -54) (undo-tree-id11399 . -54) (undo-tree-id11400 . -54) (undo-tree-id11401 . -54) (undo-tree-id11402 . -54) (undo-tree-id11403 . -54) (undo-tree-id11404 . -54) (undo-tree-id11405 . -54) (undo-tree-id11406 . -54) (undo-tree-id11407 . -54) (undo-tree-id11408 . -54) (undo-tree-id11409 . -54) (undo-tree-id11410 . -54) (undo-tree-id11411 . -20) (undo-tree-id11412 . -54) (undo-tree-id11413 . -54) (undo-tree-id11414 . -54) (undo-tree-id11415 . -54) (undo-tree-id11416 . -54) (undo-tree-id11417 . -54) (undo-tree-id11418 . -54) (undo-tree-id11419 . -54) (undo-tree-id11420 . -54) (undo-tree-id11421 . -54) (undo-tree-id11422 . -54) (undo-tree-id11423 . -54) (undo-tree-id11424 . -54) (undo-tree-id11425 . -54) (undo-tree-id11426 . -54) (undo-tree-id11427 . -54) (undo-tree-id11428 . -54) (undo-tree-id11429 . -54) (undo-tree-id11430 . -54) (undo-tree-id11431 . -54) (undo-tree-id11432 . -54) (undo-tree-id11433 . -54) (undo-tree-id11434 . -54) (undo-tree-id11435 . -54) (undo-tree-id11436 . -54) (undo-tree-id11437 . -54) (undo-tree-id11438 . -54) (undo-tree-id11439 . -54) (undo-tree-id11440 . -54) (undo-tree-id11441 . -54) (undo-tree-id11442 . -54) (undo-tree-id11443 . -54) (undo-tree-id11444 . -54) (undo-tree-id11445 . -54) (undo-tree-id11446 . -54) (undo-tree-id11447 . -54) (undo-tree-id11448 . -54) (undo-tree-id11449 . -54) (undo-tree-id11450 . -54) (undo-tree-id11451 . -54) (undo-tree-id11452 . -54) (undo-tree-id11453 . -54) (undo-tree-id11454 . -54) (undo-tree-id11455 . -54) (undo-tree-id11456 . -54) (undo-tree-id11457 . -54) (undo-tree-id11458 . -54) (undo-tree-id11459 . -54) (undo-tree-id11460 . -54) (undo-tree-id11461 . -54) (undo-tree-id11462 . -56) (undo-tree-id11463 . -20) (undo-tree-id11464 . -54) (undo-tree-id11465 . -54) (undo-tree-id11466 . -54) (undo-tree-id11467 . -54) (undo-tree-id11468 . -54) (undo-tree-id11469 . -54) (undo-tree-id11470 . -54) (undo-tree-id11471 . -54) (undo-tree-id11472 . -54) (undo-tree-id11473 . -54) (undo-tree-id11474 . -54) (undo-tree-id11475 . -54) (undo-tree-id11476 . -54) (undo-tree-id11477 . -54) (undo-tree-id11478 . -54) (undo-tree-id11479 . -54) (undo-tree-id11480 . -54) (undo-tree-id11481 . -54) (undo-tree-id11482 . -20) (undo-tree-id11483 . -20) (undo-tree-id11484 . -20) (undo-tree-id11485 . -20) (undo-tree-id11486 . -20) (undo-tree-id11487 . -20) (undo-tree-id11488 . -20) (undo-tree-id11489 . -20) (undo-tree-id11490 . -20) (undo-tree-id11491 . -20) (undo-tree-id11492 . -20) (undo-tree-id11493 . -20) (undo-tree-id11494 . -20) 1434 (t 24969 54446 560233 842000)) nil (24969 54457 500121 798000) 0 nil]) ((1468 . 1469) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 1468) (undo-tree-id11255 . 1)) nil (24969 54446 316546 832000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . -1468) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (#("." 0 1 (fontified t)) . -1469) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) 1470 (1468 . 1470) (t 24969 54431 251255 281000)) nil (24969 54446 316600 733000) 0 nil]) ((1468 . 1469) (#(" " 0 1 (fontified t)) . -1468) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) 1469 (1468 . 1469)) nil (24969 54431 9965 918000) 0 nil]) ((1465 . 1466)) nil (24969 54431 9972 941000) 0 nil]) ((#("(self.ysp + 1) * 0.9" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t face highlight-numbers-number) 13 17 (fontified t) 17 18 (fontified t face highlight-numbers-number) 18 19 (fontified t) 19 20 (fontified t face highlight-numbers-number)) . 1467) (undo-tree-id11062 . -9) (undo-tree-id11063 . -9) (undo-tree-id11064 . -9) (undo-tree-id11065 . 8) (undo-tree-id11066 . -10) (undo-tree-id11067 . -9) (undo-tree-id11068 . -12) (undo-tree-id11069 . -12) (undo-tree-id11070 . -12) (undo-tree-id11071 . -12) (undo-tree-id11072 . -12) (undo-tree-id11073 . -12) (undo-tree-id11074 . -12) (undo-tree-id11075 . -12) (undo-tree-id11076 . -12) (undo-tree-id11077 . -12) (undo-tree-id11078 . -12) (undo-tree-id11079 . -12) (undo-tree-id11080 . -12) (undo-tree-id11081 . -12) (undo-tree-id11082 . -12) (undo-tree-id11083 . -12) (undo-tree-id11084 . -12) (undo-tree-id11085 . -12) (undo-tree-id11086 . -12) (undo-tree-id11087 . -12) (undo-tree-id11088 . -12) (undo-tree-id11089 . -12) (undo-tree-id11090 . -12) (undo-tree-id11091 . -12) (undo-tree-id11092 . -12) (undo-tree-id11093 . -12) (undo-tree-id11094 . -12) (undo-tree-id11095 . -12) (undo-tree-id11096 . -12) (undo-tree-id11097 . -12) (undo-tree-id11098 . -12) (undo-tree-id11099 . -12) (undo-tree-id11100 . -12) (undo-tree-id11101 . -12) (undo-tree-id11102 . -12) (undo-tree-id11103 . -12) (undo-tree-id11104 . -12) (undo-tree-id11105 . -12) (undo-tree-id11106 . -12) (undo-tree-id11107 . -12) (undo-tree-id11108 . -12) (undo-tree-id11109 . -12) (undo-tree-id11110 . -12) (undo-tree-id11111 . -12) (undo-tree-id11112 . -12) (undo-tree-id11113 . -12) (undo-tree-id11114 . -12) (undo-tree-id11115 . -12) (undo-tree-id11116 . -12) (undo-tree-id11117 . -12) (undo-tree-id11118 . -12) (undo-tree-id11119 . -12) (undo-tree-id11120 . -12) (undo-tree-id11121 . -12) (undo-tree-id11122 . -12) (undo-tree-id11123 . -12) (undo-tree-id11124 . -12) (undo-tree-id11125 . -12) (undo-tree-id11126 . -12) (undo-tree-id11127 . -12) (undo-tree-id11128 . -12) (undo-tree-id11129 . -12) (undo-tree-id11130 . -12) (undo-tree-id11131 . -12) (undo-tree-id11132 . -12) (undo-tree-id11133 . -12) (undo-tree-id11134 . -12) (undo-tree-id11135 . -12) (undo-tree-id11136 . -12) (undo-tree-id11137 . -12) (undo-tree-id11138 . -12) (undo-tree-id11139 . -12) (undo-tree-id11140 . -12) (undo-tree-id11141 . -12) (undo-tree-id11142 . -12) (undo-tree-id11143 . -12) (undo-tree-id11144 . -12) (undo-tree-id11145 . -12) (undo-tree-id11146 . -12) (undo-tree-id11147 . -12) (undo-tree-id11148 . -12) (undo-tree-id11149 . -12) (undo-tree-id11150 . -12) (undo-tree-id11151 . -12) (undo-tree-id11152 . -12) (undo-tree-id11153 . -12) (undo-tree-id11154 . -12) (undo-tree-id11155 . -12) (undo-tree-id11156 . -12) (undo-tree-id11157 . -12) (undo-tree-id11158 . -12) (undo-tree-id11159 . -12) (undo-tree-id11160 . -12) (undo-tree-id11161 . -12) (undo-tree-id11162 . -12) (undo-tree-id11163 . -12) (undo-tree-id11164 . -12) (undo-tree-id11165 . -12) (undo-tree-id11166 . -12) (undo-tree-id11167 . -12) (undo-tree-id11168 . -12) (undo-tree-id11169 . -12) (undo-tree-id11170 . -12) (undo-tree-id11171 . -12) (undo-tree-id11172 . -12) (undo-tree-id11173 . -12) (undo-tree-id11174 . -12) (undo-tree-id11175 . -12) (undo-tree-id11176 . -12) (undo-tree-id11177 . -12) (undo-tree-id11178 . -12) (undo-tree-id11179 . -12) (undo-tree-id11180 . -12) (undo-tree-id11181 . -12) (undo-tree-id11182 . -12) (undo-tree-id11183 . -12) (undo-tree-id11184 . -12) (undo-tree-id11185 . -12) (undo-tree-id11186 . -12) (undo-tree-id11187 . -12) (undo-tree-id11188 . -12) (undo-tree-id11189 . -12) (undo-tree-id11190 . -12) (undo-tree-id11191 . -12) (undo-tree-id11192 . -12) (undo-tree-id11193 . -12) (undo-tree-id11194 . -12) (undo-tree-id11195 . -12) (undo-tree-id11196 . -12) (undo-tree-id11197 . -12) (undo-tree-id11198 . -12) (undo-tree-id11199 . -12) (undo-tree-id11200 . -12) (undo-tree-id11201 . -12) (undo-tree-id11202 . -12) (undo-tree-id11203 . -12) (undo-tree-id11204 . -12) (undo-tree-id11205 . -12) (undo-tree-id11206 . -12) (undo-tree-id11207 . -12) (undo-tree-id11208 . -12) (undo-tree-id11209 . -12) (undo-tree-id11210 . -12) (undo-tree-id11211 . -12) (undo-tree-id11212 . -12) (undo-tree-id11213 . -12) (undo-tree-id11214 . -12) (undo-tree-id11215 . -12) (undo-tree-id11216 . -12) (undo-tree-id11217 . -12) (undo-tree-id11218 . -12) (undo-tree-id11219 . -12) (undo-tree-id11220 . -12) (undo-tree-id11221 . -12) (undo-tree-id11222 . -12) (undo-tree-id11223 . -12) (undo-tree-id11224 . -12) (undo-tree-id11225 . -12) (undo-tree-id11226 . -12) (undo-tree-id11227 . -12) (undo-tree-id11228 . -12) (undo-tree-id11229 . -12) (undo-tree-id11230 . -12) (undo-tree-id11231 . -12) (undo-tree-id11232 . -12) (undo-tree-id11233 . -12) (undo-tree-id11234 . -12) (undo-tree-id11235 . -10) (undo-tree-id11236 . -10) (undo-tree-id11237 . -10) (undo-tree-id11238 . -10) (undo-tree-id11239 . -10) (undo-tree-id11240 . -6) (undo-tree-id11241 . -6) (undo-tree-id11242 . -6) (undo-tree-id11243 . -6) (undo-tree-id11244 . -6) (undo-tree-id11245 . -5) (undo-tree-id11246 . -5) (undo-tree-id11247 . -5) (undo-tree-id11248 . -5) (undo-tree-id11249 . -5) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (t 24969 54372 303338 729000)) nil (24969 54431 10316 344000) 0 nil] [nil nil ((1479 . 1488) (t 24969 54339 550385 757000)) ((#("self.ysp*" 0 4 (fontified t face font-lock-keyword-face) 4 9 (fontified t)) . 1479) (undo-tree-id10926 . -8) (undo-tree-id10927 . -8) (undo-tree-id10928 . -8) (undo-tree-id10929 . -8) (undo-tree-id10930 . -8) (undo-tree-id10931 . -8) (undo-tree-id10932 . -8) (undo-tree-id10933 . -8) (undo-tree-id10934 . -8) (undo-tree-id10935 . -8) (undo-tree-id10936 . -8) (undo-tree-id10937 . -8) (undo-tree-id10938 . -8) (undo-tree-id10939 . -8) (undo-tree-id10940 . -8) (undo-tree-id10941 . -8) (undo-tree-id10942 . -8) (undo-tree-id10943 . -8) (undo-tree-id10944 . -8) (undo-tree-id10945 . -8) (undo-tree-id10946 . -8) (undo-tree-id10947 . -8) (undo-tree-id10948 . -8) (undo-tree-id10949 . -8) (undo-tree-id10950 . -8) (undo-tree-id10951 . -8) (undo-tree-id10952 . -8) (undo-tree-id10953 . -8) (undo-tree-id10954 . -8) (undo-tree-id10955 . -8) (undo-tree-id10956 . -8) (undo-tree-id10957 . -8) (undo-tree-id10958 . -8) (undo-tree-id10959 . -8) (undo-tree-id10960 . -8) (undo-tree-id10961 . -8) (undo-tree-id10962 . -8) (undo-tree-id10963 . -8) (undo-tree-id10964 . -8) (undo-tree-id10965 . -8) (undo-tree-id10966 . -8) (undo-tree-id10967 . -8) (undo-tree-id10968 . -8) (undo-tree-id10969 . -8) (undo-tree-id10970 . -8) (undo-tree-id10971 . -8) (undo-tree-id10972 . -8) (undo-tree-id10973 . -8) (undo-tree-id10974 . -8) (undo-tree-id10975 . -8) (undo-tree-id10976 . -8) (undo-tree-id10977 . -8) (undo-tree-id10978 . -8) (undo-tree-id10979 . -8) (undo-tree-id10980 . -8) (undo-tree-id10981 . -8) (undo-tree-id10982 . -8) (undo-tree-id10983 . -8) (undo-tree-id10984 . -8) (undo-tree-id10985 . -8) (undo-tree-id10986 . -8) (undo-tree-id10987 . -8) (undo-tree-id10988 . -8) (undo-tree-id10989 . -8) (undo-tree-id10990 . -8) (undo-tree-id10991 . -8) (undo-tree-id10992 . -8) (undo-tree-id10993 . -8) (undo-tree-id10994 . -8) (undo-tree-id10995 . -8) (undo-tree-id10996 . -8) (undo-tree-id10997 . -8) (undo-tree-id10998 . -8) (undo-tree-id10999 . -8) (undo-tree-id11000 . -8) (undo-tree-id11001 . -8) (undo-tree-id11002 . -8) (undo-tree-id11003 . -8) (undo-tree-id11004 . -8) (undo-tree-id11005 . -8) (undo-tree-id11006 . -8) (undo-tree-id11007 . -8) (undo-tree-id11008 . -8) (undo-tree-id11009 . -8) (undo-tree-id11010 . -8) (undo-tree-id11011 . -8) (undo-tree-id11012 . -8) (undo-tree-id11013 . -8) (undo-tree-id11014 . -8) (undo-tree-id11015 . -8) (undo-tree-id11016 . -8) (undo-tree-id11017 . -8) (undo-tree-id11018 . -8) (undo-tree-id11019 . -8) (undo-tree-id11020 . -8) (undo-tree-id11021 . -8) (undo-tree-id11022 . -8) (undo-tree-id11023 . -8) (undo-tree-id11024 . -8) (undo-tree-id11025 . -8) (undo-tree-id11026 . -8) (undo-tree-id11027 . -8) (undo-tree-id11028 . -8) (undo-tree-id11029 . -8) (undo-tree-id11030 . -8) (undo-tree-id11031 . -8) (undo-tree-id11032 . -8) (undo-tree-id11033 . -8) (undo-tree-id11034 . -8) (undo-tree-id11035 . -8) (undo-tree-id11036 . -8) (undo-tree-id11037 . -8) (undo-tree-id11038 . -8) (undo-tree-id11039 . -8) (undo-tree-id11040 . -8) (undo-tree-id11041 . -8) (undo-tree-id11042 . -8) (undo-tree-id11043 . -8) (undo-tree-id11044 . -8) (undo-tree-id11045 . -8) (undo-tree-id11046 . -8) (undo-tree-id11047 . -8) (undo-tree-id11048 . -8) (undo-tree-id11049 . -8) (undo-tree-id11050 . -8) (undo-tree-id11051 . -8) (undo-tree-id11052 . -8) (undo-tree-id11053 . -8) (t 24969 54364 212350 301000)) (24969 54363 984958 535000) 0 nil]) ((1480 . 1487) (#(" " 0 1 (fontified t)) . -1480) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (#(")" 0 1 (fontified t)) . -1481) (undo-tree-id10924 . -1) (#(" " 0 1 (fontified t)) . -1482) (undo-tree-id10925 . -1) 1483 (1481 . 1483)) nil (24969 54370 929448 640000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1476)) nil (24969 54339 320402 221000) 0 nil]) ((1481 . 1482) (t 24969 54318 978415 554000)) nil (24969 54339 320405 427000) 0 nil]) ((1478 . 1481)) nil (24969 54318 747011 961000) 0 nil]) ((#("- 1" 0 2 (fontified t) 2 3 (fontified t face highlight-numbers-number)) . 1478) (undo-tree-id10895 . -2) (undo-tree-id10896 . -2) (undo-tree-id10897 . -2) (undo-tree-id10898 . -2) (undo-tree-id10899 . -2) (undo-tree-id10900 . -2) (undo-tree-id10901 . -2) (undo-tree-id10902 . -2) (undo-tree-id10903 . -2) (undo-tree-id10904 . -2) (undo-tree-id10905 . -2) (undo-tree-id10906 . -2) (undo-tree-id10907 . -2) (undo-tree-id10908 . -2) (undo-tree-id10909 . -2) (undo-tree-id10910 . -2) (undo-tree-id10911 . -2) (undo-tree-id10912 . -2) (undo-tree-id10913 . -2) (undo-tree-id10914 . -2) (undo-tree-id10915 . -2) (undo-tree-id10916 . -2) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (t 24969 54300 782442 85000)) nil (24969 54318 747071 272000) 0 nil]) ((1479 . 1481) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1479) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (#(" " 0 1 (fontified t)) . -1480) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) 1481 (1478 . 1481) (#(" " 0 1 (fontified t)) . -1478) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (#("+" 0 1 (fontified t)) . -1479) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (#(" " 0 1 (fontified t)) . -1480) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) 1481) nil (24969 54300 536181 800000) 0 nil]) ((#("(self.ysp) * 1" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 13 (fontified t) 13 14 (fontified t face highlight-numbers-number)) . 1481) (undo-tree-id10892 . 14)) nil (24969 54300 536235 922000) 0 nil]) ((#("sign" 0 4 (fontified t)) . 1481) (undo-tree-id10893 . 4) (undo-tree-id10894 . -4) (t 24969 54288 656459 860000)) nil (24969 54300 536242 865000) 0 nil]) ((#("." 0 1 (fontified t)) . 1481)) nil (24969 54288 431068 80000) 0 nil]) ((#("math" 0 4 (fontified t)) . 1481) (undo-tree-id10179 . -4) (undo-tree-id10180 . -4) (undo-tree-id10181 . -4) (undo-tree-id10182 . -4) (undo-tree-id10183 . -4) (undo-tree-id10184 . -4) (undo-tree-id10185 . -4) (undo-tree-id10186 . -4) (undo-tree-id10187 . -4) (undo-tree-id10188 . -4) (undo-tree-id10189 . -4) (undo-tree-id10190 . -4) (undo-tree-id10191 . -4) (undo-tree-id10192 . -4) (undo-tree-id10193 . -4) (undo-tree-id10194 . -4) (undo-tree-id10195 . -4) (undo-tree-id10196 . -4) (undo-tree-id10197 . -4) (undo-tree-id10198 . -4) (undo-tree-id10199 . -4) (undo-tree-id10200 . -4) (undo-tree-id10201 . -4) (undo-tree-id10202 . -4) (undo-tree-id10203 . -4) (undo-tree-id10204 . -4) (undo-tree-id10205 . -4) (undo-tree-id10206 . -4) (undo-tree-id10207 . -4) (undo-tree-id10208 . -4) (undo-tree-id10209 . -4) (undo-tree-id10210 . -4) (undo-tree-id10211 . -4) (undo-tree-id10212 . -4) (undo-tree-id10213 . -4) (undo-tree-id10214 . -4) (undo-tree-id10215 . -4) (undo-tree-id10216 . -4) (undo-tree-id10217 . -4) (undo-tree-id10218 . -4) (undo-tree-id10219 . -4) (undo-tree-id10220 . -4) (undo-tree-id10221 . -4) (undo-tree-id10222 . -4) (undo-tree-id10223 . -4) (undo-tree-id10224 . -4) (undo-tree-id10225 . -4) (undo-tree-id10226 . -4) (undo-tree-id10227 . -4) (undo-tree-id10228 . -4) (undo-tree-id10229 . -4) (undo-tree-id10230 . -4) (undo-tree-id10231 . -4) (undo-tree-id10232 . -4) (undo-tree-id10233 . -4) (undo-tree-id10234 . -4) (undo-tree-id10235 . -4) (undo-tree-id10236 . -4) (undo-tree-id10237 . -4) (undo-tree-id10238 . -4) (undo-tree-id10239 . -4) (undo-tree-id10240 . -4) (undo-tree-id10241 . -4) (undo-tree-id10242 . -4) (undo-tree-id10243 . -4) (undo-tree-id10244 . -4) (undo-tree-id10245 . -4) (undo-tree-id10246 . -4) (undo-tree-id10247 . -4) (undo-tree-id10248 . -4) (undo-tree-id10249 . -4) (undo-tree-id10250 . -4) (undo-tree-id10251 . -4) (undo-tree-id10252 . -4) (undo-tree-id10253 . -4) (undo-tree-id10254 . -4) (undo-tree-id10255 . -4) (undo-tree-id10256 . -4) (undo-tree-id10257 . -4) (undo-tree-id10258 . -4) (undo-tree-id10259 . -4) (undo-tree-id10260 . -4) (undo-tree-id10261 . -4) (undo-tree-id10262 . -4) (undo-tree-id10263 . -4) (undo-tree-id10264 . -4) (undo-tree-id10265 . -4) (undo-tree-id10266 . -4) (undo-tree-id10267 . -4) (undo-tree-id10268 . -4) (undo-tree-id10269 . -4) (undo-tree-id10270 . -4) (undo-tree-id10271 . -4) (undo-tree-id10272 . -4) (undo-tree-id10273 . -4) (undo-tree-id10274 . -4) (undo-tree-id10275 . -4) (undo-tree-id10276 . -4) (undo-tree-id10277 . -4) (undo-tree-id10278 . -4) (undo-tree-id10279 . -4) (undo-tree-id10280 . -4) (undo-tree-id10281 . -4) (undo-tree-id10282 . -4) (undo-tree-id10283 . -4) (t 24969 54282 488468 931000)) nil (24969 54288 431251 404000) 0 nil]) ((1481 . 1486) (t 24969 54279 184473 798000)) nil (24969 54282 255293 994000) 0 nil]) ((1495 . 1498) (#(" " 0 1 (fontified t)) . -1495) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) 1496 (1481 . 1496) (t 24969 54262 819497 994000)) nil (24969 54278 956965 745000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1478) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1)) nil (24969 54262 591130 169000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1478) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1)) nil (24969 54262 591159 564000) 0 nil]) ((#("0.9" 0 1 (fontified t face highlight-numbers-number) 1 2 (fontified t) 2 3 (fontified t face highlight-numbers-number)) . 1480) (undo-tree-id10156 . -2) (undo-tree-id10157 . -3) (undo-tree-id10158 . -3) (undo-tree-id10159 . -3) (undo-tree-id10160 . -3) (undo-tree-id10161 . -3) (undo-tree-id10162 . -3) (undo-tree-id10163 . -3) (undo-tree-id10164 . -3) (undo-tree-id10165 . -3) (undo-tree-id10166 . -3) (undo-tree-id10167 . -3) (undo-tree-id10168 . -3) (undo-tree-id10169 . -3) (undo-tree-id10170 . -3) 1483 (t 24969 54249 560517 706000)) nil (24969 54262 591208 285000) 0 nil]) ((1483 . 1487) (t 24969 54244 309525 540000)) nil (24969 54249 499207 952000) 0 nil]) ((#("j" 0 1 (fontified t face highlight-numbers-number)) . -1775) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (#("j" 0 1 (fontified t face highlight-numbers-number)) . -1776) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) 1777 (1775 . 1777) (1774 . 1775) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1774) (undo-tree-id10121 . -1) 1775 (t 24969 54217 764565 390000)) nil (24969 54244 72337 94000) 0 nil]) ((1772 . 1775)) nil (24969 54217 703858 463000) 0 nil]) ((#("300" 0 3 (fontified t face highlight-numbers-number)) . 1772) (undo-tree-id10082 . -3) (undo-tree-id10083 . -3) (undo-tree-id10084 . -3) (undo-tree-id10085 . -3) (undo-tree-id10086 . -3)) nil (24969 54217 703882 518000) 0 nil]) ((1767 . 1770) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 1767) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (t 24969 54205 39584 643000)) nil (24969 54217 703895 262000) 0 nil]) ((1794 . 1795) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1794) (t 24969 54203 508586 966000)) nil (24969 54204 979444 763000) 0 nil]) ((1794 . 1795) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1794) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -1795) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) 1796 (1795 . 1796) (t 24969 54199 399593 208000)) nil (24969 54203 277002 533000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1786)) nil (24969 54199 338708 966000) 0 nil]) ((#("3" 0 1 (fontified t face highlight-numbers-number)) . 1786) (t 24969 54195 468599 189000)) nil (24969 54199 338716 961000) 0 nil]) ((1786 . 1787) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1786) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (t 24969 54186 912612 243000)) nil (24969 54195 408315 480000) 0 nil]) ((1796 . 1797) (#("3" 0 1 (fontified t face highlight-numbers-number)) . 1796) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (t 24969 54175 621629 541000)) nil (24969 54186 853080 227000) 0 nil]) ((1786 . 1788) (t 24969 54161 611651 121000)) nil (24969 54175 562723 378000) 0 nil] [nil ([nil ([nil nil ((1770 . 1773)) ((#("299" 0 3 (fontified t face highlight-numbers-number)) . 1770) (undo-tree-id9938 . -3) (undo-tree-id9939 . -3) (undo-tree-id9940 . -3) (undo-tree-id9941 . -3) (undo-tree-id9942 . -3) (undo-tree-id9943 . -3) (undo-tree-id9944 . -3) (undo-tree-id9945 . -3) (undo-tree-id9946 . -3) (undo-tree-id9947 . -3) (undo-tree-id9948 . -3) (undo-tree-id9949 . -3) (undo-tree-id9950 . -3) (undo-tree-id9951 . -3) (undo-tree-id9952 . -3) (undo-tree-id9953 . -3) (undo-tree-id9954 . -3) (undo-tree-id9955 . -3) (undo-tree-id9956 . -3) (undo-tree-id9957 . -3) (undo-tree-id9958 . -3) (undo-tree-id9959 . -3) (undo-tree-id9960 . -3) (undo-tree-id9961 . -3) (undo-tree-id9962 . -3) (undo-tree-id9963 . -3) (undo-tree-id9964 . -3) (undo-tree-id9965 . -3) (undo-tree-id9966 . -3) (undo-tree-id9967 . -3) (undo-tree-id9968 . -3) (undo-tree-id9969 . -3) (undo-tree-id9970 . -3) (undo-tree-id9971 . -3) (undo-tree-id9972 . -3) (undo-tree-id9973 . -3) (undo-tree-id9974 . -3) (undo-tree-id9975 . -3) (undo-tree-id9976 . -3) (undo-tree-id9977 . -3) (undo-tree-id9978 . -3) (undo-tree-id9979 . -3) (undo-tree-id9980 . -3) (undo-tree-id9981 . -3) (undo-tree-id9982 . -3) (undo-tree-id9983 . -3) (undo-tree-id9984 . -3) (undo-tree-id9985 . -3) (undo-tree-id9986 . -3) (undo-tree-id9987 . -3) (undo-tree-id9988 . -3) (undo-tree-id9989 . -3) (undo-tree-id9990 . -3) (undo-tree-id9991 . -3) (undo-tree-id9992 . -3) (undo-tree-id9993 . -3) (undo-tree-id9994 . -3) (undo-tree-id9995 . -3) (undo-tree-id9996 . -3) (undo-tree-id9997 . -3) (undo-tree-id9998 . -3) (undo-tree-id9999 . -3) (undo-tree-id10000 . -3) (undo-tree-id10001 . -3) (undo-tree-id10002 . -3) (undo-tree-id10003 . -3) (undo-tree-id10004 . -3) (undo-tree-id10005 . -3) (undo-tree-id10006 . -3) (undo-tree-id10007 . -3) (undo-tree-id10008 . -3) (undo-tree-id10009 . -3) (undo-tree-id10010 . -3) (undo-tree-id10011 . -3) (undo-tree-id10012 . -3) (undo-tree-id10013 . -3) (undo-tree-id10014 . -3) (undo-tree-id10015 . -3) (undo-tree-id10016 . -3) (undo-tree-id10017 . -3) (undo-tree-id10018 . -3) (undo-tree-id10019 . -3) (undo-tree-id10020 . -3) (undo-tree-id10021 . -3) (undo-tree-id10022 . -3) (undo-tree-id10023 . -3) (undo-tree-id10024 . -3) (undo-tree-id10025 . -3) (undo-tree-id10026 . -3) (undo-tree-id10027 . -3) (undo-tree-id10028 . -3) (t 24969 54146 788674 97000)) (24969 54157 955920 915000) 0 nil]) ((#("300" 0 3 (fontified t face highlight-numbers-number)) . 1770)) ((1770 . 1773)) (24969 54159 93826 26000) 0 nil]) ((1767 . 1768) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 1767)) ((1767 . 1768) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 1767)) (24969 54159 238938 629000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 1767)) ((1767 . 1768)) (24969 54160 553485 498000) 0 nil]) ((#("3" 0 1 (fontified t face highlight-numbers-number)) . 1767)) ((1767 . 1768)) (24969 54159 825412 643000) 0 nil]) ((1773 . 1775) (1772 . 1773) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 1772) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1)) nil (24969 54152 598053 143000) 0 nil]) ((#("5" 0 1 (fontified t face highlight-numbers-number)) . 1772)) nil (24969 54135 338710 643000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1772) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1)) nil (24969 54135 338720 772000) 0 nil]) ((1767 . 1770)) nil (24969 54135 338723 688000) 0 nil]) ((#("150" 0 3 (fontified t face highlight-numbers-number)) . 1767) (undo-tree-id9834 . -3) (undo-tree-id9835 . -3) (undo-tree-id9836 . -3) (undo-tree-id9837 . -3) (undo-tree-id9838 . -3) (t 24969 54123 858709 944000)) nil (24969 54135 338735 69000) 0 nil]) ((1796 . 1797) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1796) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (t 24969 54116 508721 514000)) nil (24969 54123 800651 252000) 0 nil]) ((#("2" 0 1 (fontified t)) . 1476) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1)) nil (24969 54116 450155 215000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1476) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1)) nil (24969 54116 450211 601000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1477) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1)) nil (24969 54116 450225 527000) 0 nil]) ((#("+" 0 1 (fontified t)) . 1477) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (t 24969 54111 127730 10000)) nil (24969 54116 450237 38000) 0 nil]) ((1446 . 1447) (#("8" 0 1 (fontified t face highlight-numbers-number)) . 1446)) nil (24969 54111 80113 776000) 0 nil]) ((1486 . 1487) (#("8" 0 1 (fontified t face highlight-numbers-number)) . 1486) (undo-tree-id9726 . -1) (t 24969 54094 949755 685000)) nil (24969 54111 80136 168000) 0 nil]) ((1481 . 1482)) nil (24969 54094 723876 51000) 0 nil]) ((#(")" 0 1 (fontified t)) . -1486) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (#(" " 0 1 (fontified t)) . -1487) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) 1488) nil (24969 54094 724385 44000) 0 nil]) ((#(" " 0 1 (fontified t rear-nonsticky t)) . 1480) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1)) nil (24969 54094 724451 449000) 0 nil]) ((1481 . 1482)) nil (24969 54094 724456 288000) 0 nil]) ((nil rear-nonsticky nil 1480 . 1481) (nil fontified nil 1477 . 1481) (1477 . 1481) 1476) nil (24969 54094 724460 105000) 0 nil]) ((#("+ 2 " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face highlight-numbers-number) 3 4 (fontified t)) . 1484) (undo-tree-id9641 . -3) (undo-tree-id9642 . -3) (undo-tree-id9643 . -4) (undo-tree-id9644 . -4) (undo-tree-id9645 . -4) (undo-tree-id9646 . -4) (undo-tree-id9647 . -4) (undo-tree-id9648 . -4) (undo-tree-id9649 . -4) (undo-tree-id9650 . -3) (undo-tree-id9651 . -3) (undo-tree-id9652 . -3) (undo-tree-id9653 . -3) (undo-tree-id9654 . -3) (undo-tree-id9655 . -3) (undo-tree-id9656 . -3) (undo-tree-id9657 . -3) (undo-tree-id9658 . -3) (undo-tree-id9659 . -3) (undo-tree-id9660 . -3) (undo-tree-id9661 . -3) (undo-tree-id9662 . -3) (undo-tree-id9663 . -3) (undo-tree-id9664 . -3) (undo-tree-id9665 . -3) (undo-tree-id9666 . -3) (undo-tree-id9667 . -3) (undo-tree-id9668 . -3) (undo-tree-id9669 . -3) (undo-tree-id9670 . -3) (undo-tree-id9671 . -3) (undo-tree-id9672 . -3) (undo-tree-id9673 . -3) (undo-tree-id9674 . -3) (undo-tree-id9675 . -3) (undo-tree-id9676 . -3) (undo-tree-id9677 . -3) (undo-tree-id9678 . -3) (undo-tree-id9679 . -3) (undo-tree-id9680 . -3) (undo-tree-id9681 . -3) (undo-tree-id9682 . -3) (undo-tree-id9683 . -3) (undo-tree-id9684 . -3) (undo-tree-id9685 . -3) (undo-tree-id9686 . -3) (undo-tree-id9687 . -3) (undo-tree-id9688 . -3) (undo-tree-id9689 . -3) (undo-tree-id9690 . -3) (undo-tree-id9691 . -4) (undo-tree-id9692 . -3) (undo-tree-id9693 . -3) (undo-tree-id9694 . -3) (undo-tree-id9695 . -3) (undo-tree-id9696 . -3) (undo-tree-id9697 . -3) (undo-tree-id9698 . -3) (undo-tree-id9699 . -2) (undo-tree-id9700 . -2) (undo-tree-id9701 . -2) (undo-tree-id9702 . -2) (undo-tree-id9703 . -2) (undo-tree-id9704 . -2) (undo-tree-id9705 . -2) (undo-tree-id9706 . -2) (undo-tree-id9707 . -2) (undo-tree-id9708 . -2) (undo-tree-id9709 . -2) (undo-tree-id9710 . -2) (undo-tree-id9711 . -2) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -3) (undo-tree-id9718 . -4) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (t 24969 54084 136772 957000)) nil (24969 54094 724596 781000) 0 nil]) ((1467 . 1468)) nil (24969 54084 77739 7000) 0 nil]) ((1481 . 1482) (t 24969 54072 34792 397000)) nil (24969 54084 77747 343000) 0 nil]) ((1476 . 1481) (1475 . 1476)) nil (24969 54071 987001 184000) 0 nil]) ((#("*" 0 1 (fontified t)) . -1480) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (#(" " 0 1 (fontified t)) . -1481) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) 1482 (1479 . 1482)) nil (24969 54071 987125 326000) 0 nil]) ((1445 . 1447) (#("." 0 1 (fontified t)) . -1445) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1446) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) 1447 (1444 . 1447) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1444) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) 1445 (t 24969 54043 949837 971000)) nil (24969 54071 987416 91000) 0 nil]) ((#("-" 0 1 (fontified t)) . -1465) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) 1466 (1465 . 1466) (t 24969 54039 677844 961000)) nil (24969 54043 889301 885000) 0 nil]) ((1474 . 1475) (#("-" 0 1 (fontified t)) . 1474) (t 24969 54032 370856 953000)) nil (24969 54039 619527 969000) 0 nil]) ((1474 . 1475) (#("+" 0 1 (fontified t)) . 1474)) nil (24969 54032 312698 81000) 0 nil]) ((#("        " 0 8 (fontified t)) . -1413) (undo-tree-id9022 . -8) (undo-tree-id9023 . -8) (undo-tree-id9024 . -8) (undo-tree-id9025 . -8) (undo-tree-id9026 . -8) (undo-tree-id9027 . -8) (undo-tree-id9028 . -8) (undo-tree-id9029 . -8) (undo-tree-id9030 . -8) (undo-tree-id9031 . -8) 1421 (1412 . 1421) 1374) nil (24969 54032 312732 625000) 0 nil]) ((#("
" 0 1 (fontified nil)) . -1476) (1412 . 1477) 1366) nil (24969 54032 312737 835000) 0 nil]) ((#("        self.xsp = self.xsp * 1
        self.ysp = self.ysp + 2
" 0 1 (highlight-indent-guides-prop #22# fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #23# fontified t) 2 3 (highlight-indent-guides-prop #21# fontified t) 3 4 (highlight-indent-guides-prop #25# fontified t) 4 5 (highlight-indent-guides-prop #24# fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #27# fontified t) 6 7 (highlight-indent-guides-prop #26# fontified t) 7 8 (highlight-indent-guides-prop #28# rear-nonsticky t fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 17 (fontified t) 17 19 (fontified t) 19 23 (fontified t face font-lock-keyword-face) 23 30 (fontified t) 30 31 (fontified t face highlight-numbers-number) 31 32 (fontified t) 32 33 (highlight-indent-guides-prop #32# fontified t face highlight-indent-guides-even-face) 33 34 (highlight-indent-guides-prop #35# fontified t) 34 35 (highlight-indent-guides-prop #34# fontified t) 35 36 (highlight-indent-guides-prop #33# fontified t) 36 37 (highlight-indent-guides-prop #37# fontified t face highlight-indent-guides-odd-face) 37 38 (highlight-indent-guides-prop #36# fontified t) 38 39 (highlight-indent-guides-prop #38# fontified t) 39 40 (highlight-indent-guides-prop #39# fontified t) 40 44 (fontified t face font-lock-keyword-face) 44 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t face highlight-numbers-number) 63 64 (fontified t)) . 1025) (undo-tree-id9032 . -32) (undo-tree-id9033 . -64) (undo-tree-id9034 . -40) (undo-tree-id9035 . -63) (undo-tree-id9036 . -8) (undo-tree-id9037 . -40) (undo-tree-id9038 . -64) (undo-tree-id9039 . -64) (undo-tree-id9040 . -64) (undo-tree-id9041 . -64) (undo-tree-id9042 . -64) (undo-tree-id9043 . -64) (undo-tree-id9044 . -64) (undo-tree-id9045 . -64) (undo-tree-id9046 . -64) (undo-tree-id9047 . -64) (undo-tree-id9048 . -64) (undo-tree-id9049 . -64) (undo-tree-id9050 . 1) (undo-tree-id9051 . -64) (undo-tree-id9052 . -64) (undo-tree-id9053 . -32) (undo-tree-id9054 . -32) (undo-tree-id9055 . -8) (undo-tree-id9056 . -40) (undo-tree-id9057 . -8) (undo-tree-id9058 . -8) (undo-tree-id9059 . -8) (undo-tree-id9060 . -8) (undo-tree-id9061 . -8) (undo-tree-id9062 . -8) (undo-tree-id9063 . -8) (undo-tree-id9064 . -8) (undo-tree-id9065 . -8) (undo-tree-id9066 . -8) (undo-tree-id9067 . -8) (undo-tree-id9068 . -8) (undo-tree-id9069 . -8) (undo-tree-id9070 . -8) (undo-tree-id9071 . -8) (undo-tree-id9072 . -8) (undo-tree-id9073 . -8) (undo-tree-id9074 . -8) (undo-tree-id9075 . -8) (undo-tree-id9076 . -8) (undo-tree-id9077 . -8) (undo-tree-id9078 . -64) (undo-tree-id9079 . -64) (undo-tree-id9080 . -8) (undo-tree-id9081 . -8) (undo-tree-id9082 . -8) (undo-tree-id9083 . -8) (undo-tree-id9084 . -8) (undo-tree-id9085 . -8) (undo-tree-id9086 . -8) (undo-tree-id9087 . -8) (undo-tree-id9088 . -8) (undo-tree-id9089 . -8) (undo-tree-id9090 . -8) (undo-tree-id9091 . -8) (undo-tree-id9092 . -8) (undo-tree-id9093 . -8) (undo-tree-id9094 . -8) (undo-tree-id9095 . -8) (undo-tree-id9096 . -8) (undo-tree-id9097 . -8) (undo-tree-id9098 . -8) (undo-tree-id9099 . -8) (undo-tree-id9100 . -8) (undo-tree-id9101 . -8) (undo-tree-id9102 . -8) (undo-tree-id9103 . -8) (undo-tree-id9104 . -8) (undo-tree-id9105 . -8) (undo-tree-id9106 . -8) (undo-tree-id9107 . -8) (undo-tree-id9108 . -8) (undo-tree-id9109 . -8) (undo-tree-id9110 . -8) (undo-tree-id9111 . -8) (undo-tree-id9112 . -8) (undo-tree-id9113 . -8) (undo-tree-id9114 . -8) (undo-tree-id9115 . -8) (undo-tree-id9116 . -8) (undo-tree-id9117 . -8) (undo-tree-id9118 . -8) (undo-tree-id9119 . -8) (undo-tree-id9120 . -8) (undo-tree-id9121 . -8) (undo-tree-id9122 . -8) (undo-tree-id9123 . -8) (undo-tree-id9124 . -8) (undo-tree-id9125 . -8) (undo-tree-id9126 . -8) (undo-tree-id9127 . -8) (undo-tree-id9128 . -8) (undo-tree-id9129 . -8) (undo-tree-id9130 . -8) (undo-tree-id9131 . -8) (undo-tree-id9132 . -8) (undo-tree-id9133 . -8) (undo-tree-id9134 . -8) (undo-tree-id9135 . -8) (undo-tree-id9136 . -8) (undo-tree-id9137 . -8) (undo-tree-id9138 . -8) (undo-tree-id9139 . -8) (undo-tree-id9140 . -8) (undo-tree-id9141 . -8) (undo-tree-id9142 . -8) (undo-tree-id9143 . -8) (undo-tree-id9144 . -8) (undo-tree-id9145 . -8) (undo-tree-id9146 . -8) (undo-tree-id9147 . -8) (undo-tree-id9148 . -8) (undo-tree-id9149 . -8) (undo-tree-id9150 . -8) (undo-tree-id9151 . -8) (undo-tree-id9152 . -8) (undo-tree-id9153 . -8) (undo-tree-id9154 . -8) (undo-tree-id9155 . -8) (undo-tree-id9156 . -8) (undo-tree-id9157 . -8) (undo-tree-id9158 . -64) (undo-tree-id9159 . -8) (undo-tree-id9160 . -40) (undo-tree-id9161 . -8) (undo-tree-id9162 . -8) (undo-tree-id9163 . -8) (undo-tree-id9164 . -8) (undo-tree-id9165 . -8) (undo-tree-id9166 . -8) (undo-tree-id9167 . -8) (undo-tree-id9168 . -8) (undo-tree-id9169 . -8) (undo-tree-id9170 . -8) (undo-tree-id9171 . -8) (undo-tree-id9172 . -8) (undo-tree-id9173 . -40) (undo-tree-id9174 . -40) (undo-tree-id9175 . -40) (undo-tree-id9176 . -40) (undo-tree-id9177 . -40) (undo-tree-id9178 . -32) (undo-tree-id9179 . -40) (undo-tree-id9180 . -40) (undo-tree-id9181 . -40) (undo-tree-id9182 . -40) (undo-tree-id9183 . -40) (undo-tree-id9184 . -40) 1065 (t 24969 54019 778877 728000)) nil (24969 54032 312998 133000) 0 nil]) ((#("
" 0 1 (fontified nil)) . -1088) (1024 . 1089) 971) nil (24969 54019 721211 852000) 0 nil]) ((#("        self.xsp = self.xsp * 1
        self.ysp = self.ysp + 2
" 0 1 (highlight-indent-guides-prop #22# fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #23# fontified t) 2 3 (highlight-indent-guides-prop #21# fontified t) 3 4 (highlight-indent-guides-prop #25# fontified t) 4 5 (highlight-indent-guides-prop #24# fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #27# fontified t) 6 7 (highlight-indent-guides-prop #26# fontified t) 7 8 (highlight-indent-guides-prop #28# rear-nonsticky t fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 17 (fontified t) 17 19 (fontified t) 19 23 (fontified t face font-lock-keyword-face) 23 30 (fontified t) 30 31 (fontified t face highlight-numbers-number) 31 32 (fontified t) 32 33 (highlight-indent-guides-prop #32# fontified t face highlight-indent-guides-even-face) 33 34 (highlight-indent-guides-prop #35# fontified t) 34 35 (highlight-indent-guides-prop #34# fontified t) 35 36 (highlight-indent-guides-prop #33# fontified t) 36 37 (highlight-indent-guides-prop #37# fontified t face highlight-indent-guides-odd-face) 37 38 (highlight-indent-guides-prop #36# fontified t) 38 39 (highlight-indent-guides-prop #38# fontified t) 39 40 (highlight-indent-guides-prop #39# fontified t) 40 44 (fontified t face font-lock-keyword-face) 44 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t face highlight-numbers-number) 63 64 (fontified t)) . 1414) (undo-tree-id8893 . -32) (undo-tree-id8894 . -40) (undo-tree-id8895 . -40) (undo-tree-id8896 . -8) (undo-tree-id8897 . -64) (undo-tree-id8898 . -64) (undo-tree-id8899 . -32) (undo-tree-id8900 . -32) (undo-tree-id8901 . -8) (undo-tree-id8902 . -8) (undo-tree-id8903 . -8) (undo-tree-id8904 . -8) (undo-tree-id8905 . -8) (undo-tree-id8906 . -8) (undo-tree-id8907 . -8) (undo-tree-id8908 . -8) (undo-tree-id8909 . -8) (undo-tree-id8910 . -8) (undo-tree-id8911 . -8) (undo-tree-id8912 . -8) (undo-tree-id8913 . -8) (undo-tree-id8914 . -8) (undo-tree-id8915 . -8) (undo-tree-id8916 . -8) (undo-tree-id8917 . -8) (undo-tree-id8918 . -8) (undo-tree-id8919 . -8) (undo-tree-id8920 . -8) (undo-tree-id8921 . -8) (undo-tree-id8922 . -8) (undo-tree-id8923 . -8) (undo-tree-id8924 . -8) (undo-tree-id8925 . -8) (undo-tree-id8926 . -8) (undo-tree-id8927 . -8) (undo-tree-id8928 . -8) (undo-tree-id8929 . -8) (undo-tree-id8930 . -8) (undo-tree-id8931 . -8) (undo-tree-id8932 . -8) (undo-tree-id8933 . -8) (undo-tree-id8934 . -8) (undo-tree-id8935 . -8) (undo-tree-id8936 . -8) (undo-tree-id8937 . -8) (undo-tree-id8938 . -8) (undo-tree-id8939 . -8) (undo-tree-id8940 . -8) (undo-tree-id8941 . -8) (undo-tree-id8942 . -8) (undo-tree-id8943 . -8) (undo-tree-id8944 . -8) (undo-tree-id8945 . -8) (undo-tree-id8946 . -8) (undo-tree-id8947 . -8) (undo-tree-id8948 . -8) (undo-tree-id8949 . -8) (undo-tree-id8950 . -8) (undo-tree-id8951 . -8) (undo-tree-id8952 . -8) (undo-tree-id8953 . -8) (undo-tree-id8954 . -8) (undo-tree-id8955 . -8) (undo-tree-id8956 . -8) (undo-tree-id8957 . -8) (undo-tree-id8958 . -8) (undo-tree-id8959 . -8) (undo-tree-id8960 . -8) (undo-tree-id8961 . -8) (undo-tree-id8962 . -8) (undo-tree-id8963 . -8) (undo-tree-id8964 . -8) (undo-tree-id8965 . -8) (undo-tree-id8966 . -8) (undo-tree-id8967 . -8) (undo-tree-id8968 . -8) (undo-tree-id8969 . -8) (undo-tree-id8970 . -8) (undo-tree-id8971 . -8) (undo-tree-id8972 . -8) (undo-tree-id8973 . -8) (undo-tree-id8974 . -8) (undo-tree-id8975 . -8) (undo-tree-id8976 . -8) (undo-tree-id8977 . -8) (undo-tree-id8978 . -8) (undo-tree-id8979 . -8) (undo-tree-id8980 . -8) (undo-tree-id8981 . -8) (undo-tree-id8982 . -8) (undo-tree-id8983 . -8) (undo-tree-id8984 . -40) (undo-tree-id8985 . -40) (undo-tree-id8986 . -40) (undo-tree-id8987 . -40) (undo-tree-id8988 . -40) (undo-tree-id8989 . -40) (undo-tree-id8990 . -40) (undo-tree-id8991 . -40) (undo-tree-id8992 . -40) (undo-tree-id8993 . -40) (undo-tree-id8994 . -40) (undo-tree-id8995 . -40) (undo-tree-id8996 . -64) (undo-tree-id8997 . -8) (undo-tree-id8998 . -40) (undo-tree-id8999 . -40) (undo-tree-id9000 . -40) (undo-tree-id9001 . -40) (undo-tree-id9002 . -40) (undo-tree-id9003 . -40) (undo-tree-id9004 . -40) (undo-tree-id9005 . -40) (undo-tree-id9006 . -40) (undo-tree-id9007 . -40) (undo-tree-id9008 . -40) (undo-tree-id9009 . -40) (undo-tree-id9010 . -40) (undo-tree-id9011 . -40) (undo-tree-id9012 . -40) (undo-tree-id9013 . -40) (undo-tree-id9014 . -40) (undo-tree-id9015 . -40) (undo-tree-id9016 . -8) (undo-tree-id9017 . -8) (undo-tree-id9018 . -8) (undo-tree-id9019 . -8) (undo-tree-id9020 . -8) (undo-tree-id9021 . -8) 1422 (t 24969 54005 107902 113000)) nil (24969 54019 721443 516000) 0 nil]) ((nil rear-nonsticky nil 1373 . 1374) (#("
" 0 1 (fontified nil)) . -1412) (1365 . 1413) 1298) nil (24969 54005 50304 573000) 0 nil]) ((#("        print(round(math.degrees(self.angle)))
" 0 1 (highlight-indent-guides-prop #42=(0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #43=(0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop #41=(0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop #44=(0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop #40=(1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #46=(1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop #45=(1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop #47=(1 nil nil 1 nil #11#) fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 19 (fontified t face font-lock-builtin-face) 19 33 (fontified t) 33 37 (fontified t face font-lock-keyword-face) 37 43 (fontified t) 43 46 (fontified t) 46 47 (fontified t)) . 1432) (undo-tree-id8862 . -47) (undo-tree-id8863 . -47) (undo-tree-id8864 . -47) (undo-tree-id8865 . -47) (undo-tree-id8866 . -47) (undo-tree-id8867 . -47) (undo-tree-id8868 . -47) (undo-tree-id8869 . -47) (undo-tree-id8870 . -47) (undo-tree-id8871 . -1) (undo-tree-id8872 . -4) (undo-tree-id8873 . -5) (undo-tree-id8874 . -1) (undo-tree-id8875 . -4) (undo-tree-id8876 . -5) (undo-tree-id8877 . -1) (undo-tree-id8878 . -4) (undo-tree-id8879 . -5) (undo-tree-id8880 . -1) (undo-tree-id8881 . -4) (undo-tree-id8882 . -5)) nil (24969 54005 50356 109000) 0 nil]) ((#("        " 0 8 (fontified t)) . -1431) (undo-tree-id8883 . -8) (undo-tree-id8884 . -8) (undo-tree-id8885 . -8) (undo-tree-id8886 . -8) (undo-tree-id8887 . -8) (undo-tree-id8888 . -8) (undo-tree-id8889 . -8) (undo-tree-id8890 . -8) (undo-tree-id8891 . -8) (undo-tree-id8892 . -8) 1439 (1430 . 1439) (t 24969 53999 8912 308000) 1399) nil (24969 54005 50378 802000) 0 nil] [nil nil ((#("        print(round(math.degrees(self.angle)))
" 0 1 (highlight-indent-guides-prop #42# fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #43# fontified t) 2 3 (highlight-indent-guides-prop #41# fontified t) 3 4 (highlight-indent-guides-prop #44# fontified t) 4 5 (highlight-indent-guides-prop #40# fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop #46# fontified t) 6 7 (highlight-indent-guides-prop #45# fontified t) 7 8 (highlight-indent-guides-prop #47# fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 19 (fontified t face font-lock-builtin-face) 19 33 (fontified t) 33 37 (fontified t face font-lock-keyword-face) 37 43 (fontified t) 43 46 (fontified t) 46 47 (fontified t)) . 1431) (undo-tree-id8847 . -47) (undo-tree-id8848 . -47) (undo-tree-id8849 . -47) (undo-tree-id8850 . -47) (undo-tree-id8851 . -47) (undo-tree-id8852 . -47) (undo-tree-id8853 . -47) (undo-tree-id8854 . -47) (undo-tree-id8855 . -47) (undo-tree-id8856 . -1) (undo-tree-id8857 . -4) (undo-tree-id8858 . -5) (undo-tree-id8859 . -1) (undo-tree-id8860 . -4) (undo-tree-id8861 . -5) (t 24969 53999 8912 308000)) ((1431 . 1478)) (24969 54001 476165 635000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1244) (undo-tree-id8401 . -1) (undo-tree-id8402 . 1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1)) nil (24969 54001 476735 62000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1244) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1)) nil (24969 53998 951148 947000) 0 nil]) ((#("        " 0 8 (fontified t)) . -1368) (undo-tree-id8672 . -8) (undo-tree-id8673 . -8) (undo-tree-id8674 . -8) (undo-tree-id8675 . -8) (undo-tree-id8676 . -8) (undo-tree-id8677 . -8) (undo-tree-id8678 . -8) (undo-tree-id8679 . -8) (undo-tree-id8680 . -8) (undo-tree-id8681 . -8) 1376 (1367 . 1376) 1308) nil (24969 53998 951182 770000) 0 nil]) ((nil rear-nonsticky nil 1375 . 1376) (#("
" 0 1 (fontified nil)) . -1431) (1367 . 1432) 1300) nil (24969 53998 951187 479000) 0 nil]) ((#("        self.xsp = self.xsp * 1
        self.ysp = self.ysp + 2
" 0 1 (fontified t highlight-indent-guides-prop #22# face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop #23#) 2 3 (fontified t highlight-indent-guides-prop #21#) 3 4 (fontified t highlight-indent-guides-prop #25#) 4 5 (fontified t highlight-indent-guides-prop #24# face highlight-indent-guides-odd-face) 5 6 (fontified t highlight-indent-guides-prop #27#) 6 7 (fontified t highlight-indent-guides-prop #26#) 7 8 (fontified t highlight-indent-guides-prop #28#) 8 12 (fontified t face font-lock-keyword-face) 12 17 (fontified t) 17 19 (fontified t) 19 23 (fontified t face font-lock-keyword-face) 23 30 (fontified t) 30 31 (fontified t face highlight-numbers-number) 31 32 (fontified t) 32 33 (fontified t highlight-indent-guides-prop #32# face highlight-indent-guides-even-face) 33 34 (fontified t highlight-indent-guides-prop #35#) 34 35 (fontified t highlight-indent-guides-prop #34#) 35 36 (fontified t highlight-indent-guides-prop #33#) 36 37 (fontified t highlight-indent-guides-prop #37# face highlight-indent-guides-odd-face) 37 38 (fontified t highlight-indent-guides-prop #36#) 38 39 (fontified t highlight-indent-guides-prop #38#) 39 40 (fontified t highlight-indent-guides-prop #39#) 40 44 (fontified t face font-lock-keyword-face) 44 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t face highlight-numbers-number) 63 64 (fontified t)) . 1245) (undo-tree-id8682 . -32) (undo-tree-id8683 . -60) (undo-tree-id8684 . -60) (undo-tree-id8685 . -28) (undo-tree-id8686 . 1) (undo-tree-id8687 . -29) (undo-tree-id8688 . -29) (undo-tree-id8689 . -64) (undo-tree-id8690 . -64) (undo-tree-id8691 . -32) (undo-tree-id8692 . -32) (undo-tree-id8693 . -60) (undo-tree-id8694 . -28) (undo-tree-id8695 . -60) (undo-tree-id8696 . -60) (undo-tree-id8697 . -60) (undo-tree-id8698 . -60) (undo-tree-id8699 . -60) (undo-tree-id8700 . -60) (undo-tree-id8701 . -60) (undo-tree-id8702 . -60) (undo-tree-id8703 . -60) (undo-tree-id8704 . -60) (undo-tree-id8705 . -60) (undo-tree-id8706 . -60) (undo-tree-id8707 . -60) (undo-tree-id8708 . -60) (undo-tree-id8709 . -60) (undo-tree-id8710 . -60) (undo-tree-id8711 . -60) (undo-tree-id8712 . -60) (undo-tree-id8713 . -60) (undo-tree-id8714 . -60) (undo-tree-id8715 . -60) (undo-tree-id8716 . -60) (undo-tree-id8717 . -60) (undo-tree-id8718 . -60) (undo-tree-id8719 . -60) (undo-tree-id8720 . -60) (undo-tree-id8721 . -60) (undo-tree-id8722 . -60) (undo-tree-id8723 . -60) (undo-tree-id8724 . -60) (undo-tree-id8725 . -60) (undo-tree-id8726 . -60) (undo-tree-id8727 . -60) (undo-tree-id8728 . -60) (undo-tree-id8729 . -60) (undo-tree-id8730 . -60) (undo-tree-id8731 . -60) (undo-tree-id8732 . -60) (undo-tree-id8733 . -60) (undo-tree-id8734 . -60) (undo-tree-id8735 . -60) (undo-tree-id8736 . -60) (undo-tree-id8737 . -60) (undo-tree-id8738 . -60) (undo-tree-id8739 . -60) (undo-tree-id8740 . -60) (undo-tree-id8741 . -60) (undo-tree-id8742 . -60) (undo-tree-id8743 . -60) (undo-tree-id8744 . -60) (undo-tree-id8745 . -60) (undo-tree-id8746 . -60) (undo-tree-id8747 . -60) (undo-tree-id8748 . -60) (undo-tree-id8749 . -60) (undo-tree-id8750 . -60) (undo-tree-id8751 . -60) (undo-tree-id8752 . -60) (undo-tree-id8753 . -60) (undo-tree-id8754 . -60) (undo-tree-id8755 . -60) (undo-tree-id8756 . -60) (undo-tree-id8757 . -60) (undo-tree-id8758 . -60) (undo-tree-id8759 . -60) (undo-tree-id8760 . -60) (undo-tree-id8761 . -60) (undo-tree-id8762 . -60) (undo-tree-id8763 . -60) (undo-tree-id8764 . -60) (undo-tree-id8765 . -60) (undo-tree-id8766 . -60) (undo-tree-id8767 . -60) (undo-tree-id8768 . -60) (undo-tree-id8769 . -60) (undo-tree-id8770 . -60) (undo-tree-id8771 . -60) (undo-tree-id8772 . -60) (undo-tree-id8773 . -60) (undo-tree-id8774 . -60) (undo-tree-id8775 . -60) (undo-tree-id8776 . -60) (undo-tree-id8777 . -60) (undo-tree-id8778 . -60) (undo-tree-id8779 . -60) (undo-tree-id8780 . -60) (undo-tree-id8781 . -60) (undo-tree-id8782 . -60) (undo-tree-id8783 . -60) (undo-tree-id8784 . -60) (undo-tree-id8785 . -60) (undo-tree-id8786 . -60) (undo-tree-id8787 . -60) (undo-tree-id8788 . -60) (undo-tree-id8789 . -60) (undo-tree-id8790 . -60) (undo-tree-id8791 . -60) (undo-tree-id8792 . -60) (undo-tree-id8793 . -60) (undo-tree-id8794 . -60) (undo-tree-id8795 . -60) (undo-tree-id8796 . -60) (undo-tree-id8797 . -60) (undo-tree-id8798 . -60) (undo-tree-id8799 . -60) (undo-tree-id8800 . -60) (undo-tree-id8801 . -60) (undo-tree-id8802 . -60) (undo-tree-id8803 . -60) (undo-tree-id8804 . -60) (undo-tree-id8805 . -60) (undo-tree-id8806 . -60) (undo-tree-id8807 . -60) (undo-tree-id8808 . -60) (undo-tree-id8809 . -60) (undo-tree-id8810 . -60) (undo-tree-id8811 . -60) (undo-tree-id8812 . -60) (undo-tree-id8813 . -60) (undo-tree-id8814 . -60) (undo-tree-id8815 . -60) (undo-tree-id8816 . -64) (undo-tree-id8817 . -28) (undo-tree-id8818 . -60) (undo-tree-id8819 . -60) (undo-tree-id8820 . -60) (undo-tree-id8821 . -60) (undo-tree-id8822 . -60) (undo-tree-id8823 . -60) (undo-tree-id8824 . -60) (undo-tree-id8825 . -60) (undo-tree-id8826 . -60) (undo-tree-id8827 . -60) (undo-tree-id8828 . -60) (undo-tree-id8829 . -60) (undo-tree-id8830 . -60) (undo-tree-id8831 . -60) (undo-tree-id8832 . -60) (undo-tree-id8833 . -60) (undo-tree-id8834 . -60) (undo-tree-id8835 . -60) (undo-tree-id8836 . -28) (undo-tree-id8837 . -28) (undo-tree-id8838 . -28) (undo-tree-id8839 . -28) (undo-tree-id8840 . -28) (undo-tree-id8841 . -28) (undo-tree-id8842 . -28) (undo-tree-id8843 . -28) (undo-tree-id8844 . -28) (undo-tree-id8845 . -28) (undo-tree-id8846 . -28) 1273 (t 24969 53980 556943 364000)) nil (24969 53998 951448 398000) 0 nil]) ((1305 . 1306) (#("-" 0 1 (fontified t)) . 1305) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (t 24969 53972 336957 304000)) nil (24969 53980 512079 460000) 0 nil]) ((1307 . 1308) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1307) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) 1308 (1307 . 1308) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1307) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (#("." 0 1 (fontified t)) . -1308) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1309) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) 1310 (1301 . 1310) (#("x" 0 1 (fontified t)) . -1301) (undo-tree-id8390 . -1) (#("s" 0 1 (fontified t)) . -1302) (undo-tree-id8391 . -1) (#("p" 0 1 (fontified t)) . -1303) (undo-tree-id8392 . -1) (#(" " 0 1 (fontified t)) . -1304) (undo-tree-id8393 . -1) 1305 (#("+" 0 1 (fontified t)) . -1305) (undo-tree-id8394 . -1) (#(" " 0 1 (fontified t)) . -1306) (undo-tree-id8395 . -1) 1307 (1306 . 1307) (1285 . 1306) (1276 . 1285) (t 24969 53957 696982 295000) 1275) nil (24969 53972 281197 391000) 0 nil]) ((1275 . 1276) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1275) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1276) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (#(" " 0 1 (fontified t)) . -1277) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) 1278 (1274 . 1278) (#(" " 0 1 (fontified t)) . -1274) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (#("m" 0 1 (fontified t)) . -1275) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (#("u" 0 1 (fontified t)) . -1276) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) 1277) nil (24969 53957 640808 356000) 0 nil]) ((1275 . 1277) (#("d" 0 1 (fontified nil)) . 1275) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (1274 . 1276) (#("d" 0 1 (fontified nil)) . 1274) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (1274 . 1275) (#(" mu" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1274) (undo-tree-id7769 . -3) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -2) (undo-tree-id7879 . -2) (undo-tree-id7880 . -2) (undo-tree-id7881 . -2) (undo-tree-id7882 . -2) (undo-tree-id7883 . -2) (undo-tree-id7884 . -2) (undo-tree-id7885 . -2) (undo-tree-id7886 . -2) (undo-tree-id7887 . -2) (undo-tree-id7888 . -2) (undo-tree-id7889 . -2) (undo-tree-id7890 . -2) (undo-tree-id7891 . -2) (undo-tree-id7892 . -2) (undo-tree-id7893 . -2) (undo-tree-id7894 . -2) (undo-tree-id7895 . -2) (undo-tree-id7896 . -2) (undo-tree-id7897 . -2) (undo-tree-id7898 . -2) (undo-tree-id7899 . -2) (undo-tree-id7900 . -2) (undo-tree-id7901 . -2) (undo-tree-id7902 . -2) (undo-tree-id7903 . -2) (undo-tree-id7904 . -3) (undo-tree-id7905 . -3) (undo-tree-id7906 . -3) (undo-tree-id7907 . -3) (undo-tree-id7908 . -3) (undo-tree-id7909 . -3) (undo-tree-id7910 . -3) (undo-tree-id7911 . -3) (undo-tree-id7912 . -3) (undo-tree-id7913 . -3) (undo-tree-id7914 . -3) (undo-tree-id7915 . -3) (undo-tree-id7916 . -3) (undo-tree-id7917 . -3) (undo-tree-id7918 . -3) (undo-tree-id7919 . -3) (undo-tree-id7920 . -3) (undo-tree-id7921 . -3) (undo-tree-id7922 . -3) (undo-tree-id7923 . -3) (undo-tree-id7924 . -3) (undo-tree-id7925 . -3) (undo-tree-id7926 . -3) (undo-tree-id7927 . -3) (undo-tree-id7928 . -3) (undo-tree-id7929 . -3) (undo-tree-id7930 . -3) (undo-tree-id7931 . -3) (undo-tree-id7932 . -3) (undo-tree-id7933 . -3) (undo-tree-id7934 . -3) (undo-tree-id7935 . -3) (undo-tree-id7936 . -3) (undo-tree-id7937 . -3) (undo-tree-id7938 . -3) (undo-tree-id7939 . -3) (undo-tree-id7940 . -3) (undo-tree-id7941 . -3) (undo-tree-id7942 . -2) (undo-tree-id7943 . -2) (undo-tree-id7944 . -2) (undo-tree-id7945 . -2) (undo-tree-id7946 . -2) (undo-tree-id7947 . -2) (undo-tree-id7948 . -2) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (1275 . 1277) (#("self.xsp " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1275) (undo-tree-id7955 . -9) (undo-tree-id7956 . -9) (undo-tree-id7957 . -9) (undo-tree-id7958 . -9) (undo-tree-id7959 . -9) (undo-tree-id7960 . -9) (undo-tree-id7961 . -9) (undo-tree-id7962 . -9) (undo-tree-id7963 . -9) (undo-tree-id7964 . -9) (undo-tree-id7965 . -9) (undo-tree-id7966 . -9) (undo-tree-id7967 . -9) (undo-tree-id7968 . -9) (undo-tree-id7969 . -9) (undo-tree-id7970 . -9) (undo-tree-id7971 . -8) (undo-tree-id7972 . -8) (undo-tree-id7973 . -8) (undo-tree-id7974 . -8) (undo-tree-id7975 . -8) (undo-tree-id7976 . -8) (undo-tree-id7977 . -7) (undo-tree-id7978 . -7) (undo-tree-id7979 . -7) (undo-tree-id7980 . -7) (undo-tree-id7981 . -7) (undo-tree-id7982 . -7) (undo-tree-id7983 . -6) (undo-tree-id7984 . -6) (undo-tree-id7985 . -6) (undo-tree-id7986 . -6) (undo-tree-id7987 . -6) (undo-tree-id7988 . -6) (undo-tree-id7989 . -5) (undo-tree-id7990 . -5) (undo-tree-id7991 . -5) (undo-tree-id7992 . -5) (undo-tree-id7993 . -5) (undo-tree-id7994 . -5) (undo-tree-id7995 . -4) (undo-tree-id7996 . -4) (undo-tree-id7997 . -4) (undo-tree-id7998 . -4) (undo-tree-id7999 . -4) (undo-tree-id8000 . -4) (undo-tree-id8001 . -3) (undo-tree-id8002 . -3) (undo-tree-id8003 . -3) (undo-tree-id8004 . -3) (undo-tree-id8005 . -3) (undo-tree-id8006 . -3) (undo-tree-id8007 . -2) (undo-tree-id8008 . -2) (undo-tree-id8009 . -2) (undo-tree-id8010 . -2) (undo-tree-id8011 . -2) (undo-tree-id8012 . -2) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (1262 . 1284) (#("-= sel" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 6 (fontified nil)) . 1262) (1264 . 1268) (#("- " 0 1 (fontified nil) 1 2 (fontified nil)) . 1264) (1262 . 1266) (#("= " 0 1 (fontified nil) 1 2 (fontified nil)) . 1262) (1253 . 1264) (#("    " 0 4 (fontified nil)) . 1253) (1245 . 1257)) ((#("            " 0 1 (fontified nil highlight-indent-guides-prop #22# face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop #23#) 2 3 (fontified nil highlight-indent-guides-prop #21#) 3 4 (fontified nil highlight-indent-guides-prop #25#) 4 5 (fontified nil highlight-indent-guides-prop #24# face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop #27#) 6 7 (fontified nil highlight-indent-guides-prop #26#) 7 8 (fontified nil highlight-indent-guides-prop #28#) 8 12 (fontified nil)) . 1245) (undo-tree-id6839 . -8) (undo-tree-id6840 . -8) (undo-tree-id6841 . -8) (undo-tree-id6842 . -8) (undo-tree-id6843 . -8) (undo-tree-id6844 . -8) (undo-tree-id6845 . -8) (undo-tree-id6846 . -8) (undo-tree-id6847 . -8) (undo-tree-id6848 . -8) (undo-tree-id6849 . -8) (undo-tree-id6850 . -8) (undo-tree-id6851 . -8) (undo-tree-id6852 . -8) (undo-tree-id6853 . -8) (undo-tree-id6854 . -8) (undo-tree-id6855 . -8) (undo-tree-id6856 . -8) (undo-tree-id6857 . -8) (undo-tree-id6858 . -8) (undo-tree-id6859 . -8) (undo-tree-id6860 . -8) (undo-tree-id6861 . -8) (undo-tree-id6862 . -8) (undo-tree-id6863 . -8) (undo-tree-id6864 . -8) (undo-tree-id6865 . -8) (undo-tree-id6866 . -8) (undo-tree-id6867 . -8) (undo-tree-id6868 . -8) (undo-tree-id6869 . -8) (undo-tree-id6870 . -8) (undo-tree-id6871 . -8) (undo-tree-id6872 . -8) (undo-tree-id6873 . -8) (undo-tree-id6874 . -8) (undo-tree-id6875 . -8) (undo-tree-id6876 . -8) (undo-tree-id6877 . -8) (undo-tree-id6878 . -8) (undo-tree-id6879 . -8) (undo-tree-id6880 . -8) (undo-tree-id6881 . -8) (undo-tree-id6882 . -8) (undo-tree-id6883 . -8) (undo-tree-id6884 . -8) (undo-tree-id6885 . -8) (undo-tree-id6886 . -8) (undo-tree-id6887 . -8) (undo-tree-id6888 . -8) (undo-tree-id6889 . -8) (undo-tree-id6890 . -8) (undo-tree-id6891 . -8) (undo-tree-id6892 . -8) (undo-tree-id6893 . -8) (undo-tree-id6894 . -8) (undo-tree-id6895 . -8) (undo-tree-id6896 . -8) (undo-tree-id6897 . -8) (undo-tree-id6898 . -8) (undo-tree-id6899 . -8) (undo-tree-id6900 . -8) (undo-tree-id6901 . -8) (undo-tree-id6902 . -8) (undo-tree-id6903 . -8) (undo-tree-id6904 . -8) (undo-tree-id6905 . -8) (undo-tree-id6906 . -8) (undo-tree-id6907 . -8) (undo-tree-id6908 . -8) (undo-tree-id6909 . -8) (undo-tree-id6910 . -8) (undo-tree-id6911 . -8) (undo-tree-id6912 . -8) (undo-tree-id6913 . -8) (undo-tree-id6914 . -8) (undo-tree-id6915 . -8) (undo-tree-id6916 . -8) (undo-tree-id6917 . -8) (undo-tree-id6918 . -8) (undo-tree-id6919 . -8) (undo-tree-id6920 . -8) (undo-tree-id6921 . -8) (undo-tree-id6922 . -8) (undo-tree-id6923 . -8) (undo-tree-id6924 . -8) (undo-tree-id6925 . -8) (undo-tree-id6926 . -8) (undo-tree-id6927 . -8) (undo-tree-id6928 . -8) (undo-tree-id6929 . -8) (undo-tree-id6930 . -8) (undo-tree-id6931 . -8) (undo-tree-id6932 . -8) (undo-tree-id6933 . -8) (undo-tree-id6934 . -8) (undo-tree-id6935 . -8) (undo-tree-id6936 . -8) (undo-tree-id6937 . -8) (undo-tree-id6938 . -8) (undo-tree-id6939 . -8) (undo-tree-id6940 . -8) (undo-tree-id6941 . -8) (undo-tree-id6942 . -8) (undo-tree-id6943 . -8) (undo-tree-id6944 . -8) (undo-tree-id6945 . -8) (undo-tree-id6946 . -8) (undo-tree-id6947 . -8) (undo-tree-id6948 . -8) (undo-tree-id6949 . -8) (undo-tree-id6950 . -8) (undo-tree-id6951 . -8) (undo-tree-id6952 . -8) (undo-tree-id6953 . -8) (undo-tree-id6954 . -8) (undo-tree-id6955 . -8) (undo-tree-id6956 . -8) (undo-tree-id6957 . -8) (undo-tree-id6958 . -8) (undo-tree-id6959 . -8) (undo-tree-id6960 . -8) (undo-tree-id6961 . -8) (undo-tree-id6962 . -8) (undo-tree-id6963 . -8) (undo-tree-id6964 . -8) (undo-tree-id6965 . -8) (undo-tree-id6966 . -8) (undo-tree-id6967 . -8) (undo-tree-id6968 . -8) (undo-tree-id6969 . -8) (undo-tree-id6970 . -8) (undo-tree-id6971 . -8) (undo-tree-id6972 . -8) (undo-tree-id6973 . -8) (undo-tree-id6974 . -8) (undo-tree-id6975 . -8) (undo-tree-id6976 . -8) (undo-tree-id6977 . -8) (undo-tree-id6978 . -8) (undo-tree-id6979 . -8) (undo-tree-id6980 . -8) (undo-tree-id6981 . -8) (undo-tree-id6982 . -8) (undo-tree-id6983 . -8) (undo-tree-id6984 . -8) (undo-tree-id6985 . -8) (undo-tree-id6986 . -8) (undo-tree-id6987 . -8) (undo-tree-id6988 . -8) (undo-tree-id6989 . -8) (undo-tree-id6990 . -8) (undo-tree-id6991 . -8) (undo-tree-id6992 . -8) (undo-tree-id6993 . -8) (undo-tree-id6994 . -8) (undo-tree-id6995 . -8) (undo-tree-id6996 . -8) (undo-tree-id6997 . -8) (undo-tree-id6998 . -8) (undo-tree-id6999 . -8) (undo-tree-id7000 . -8) (undo-tree-id7001 . -8) (undo-tree-id7002 . -8) (undo-tree-id7003 . -8) (undo-tree-id7004 . -8) (undo-tree-id7005 . -8) (undo-tree-id7006 . -8) (undo-tree-id7007 . -8) (undo-tree-id7008 . -8) (undo-tree-id7009 . -8) (undo-tree-id7010 . -8) (undo-tree-id7011 . -8) (undo-tree-id7012 . -8) (undo-tree-id7013 . -8) (undo-tree-id7014 . -8) (undo-tree-id7015 . -8) (undo-tree-id7016 . -8) (undo-tree-id7017 . -8) (undo-tree-id7018 . -8) (undo-tree-id7019 . -8) (undo-tree-id7020 . -8) (undo-tree-id7021 . -8) (undo-tree-id7022 . -8) (undo-tree-id7023 . -8) (undo-tree-id7024 . -8) (undo-tree-id7025 . -8) (undo-tree-id7026 . -8) (undo-tree-id7027 . -8) (undo-tree-id7028 . -8) (undo-tree-id7029 . -8) (undo-tree-id7030 . -8) (undo-tree-id7031 . -8) (undo-tree-id7032 . -8) (undo-tree-id7033 . -8) (undo-tree-id7034 . -8) (undo-tree-id7035 . -8) (undo-tree-id7036 . -8) (undo-tree-id7037 . -8) (undo-tree-id7038 . -8) (undo-tree-id7039 . -8) (undo-tree-id7040 . -8) (undo-tree-id7041 . -8) (undo-tree-id7042 . -8) (undo-tree-id7043 . -8) (undo-tree-id7044 . -8) (undo-tree-id7045 . -8) (undo-tree-id7046 . -8) (undo-tree-id7047 . -8) (undo-tree-id7048 . -8) (undo-tree-id7049 . -8) (undo-tree-id7050 . -8) (undo-tree-id7051 . -8) (undo-tree-id7052 . -8) (undo-tree-id7053 . -8) (undo-tree-id7054 . -8) (undo-tree-id7055 . -8) (undo-tree-id7056 . -8) (undo-tree-id7057 . -8) (undo-tree-id7058 . -8) (undo-tree-id7059 . -8) (undo-tree-id7060 . -8) (undo-tree-id7061 . -8) (undo-tree-id7062 . -8) (undo-tree-id7063 . -8) (undo-tree-id7064 . -8) (undo-tree-id7065 . -8) (undo-tree-id7066 . -8) (undo-tree-id7067 . -8) (undo-tree-id7068 . -8) (undo-tree-id7069 . -8) (undo-tree-id7070 . -8) (undo-tree-id7071 . -8) (undo-tree-id7072 . -8) (undo-tree-id7073 . -8) (undo-tree-id7074 . -8) (undo-tree-id7075 . -8) (undo-tree-id7076 . -8) (undo-tree-id7077 . -8) (undo-tree-id7078 . -8) (undo-tree-id7079 . -8) (undo-tree-id7080 . -8) (undo-tree-id7081 . -8) (1253 . 1257) (#("self.xsp = " 0 4 (fontified nil face font-lock-keyword-face) 4 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil)) . 1253) (undo-tree-id7082 . -9) (undo-tree-id7083 . -9) (undo-tree-id7084 . -9) (undo-tree-id7085 . -9) (undo-tree-id7086 . -9) (undo-tree-id7087 . -9) (undo-tree-id7088 . -9) (undo-tree-id7089 . -9) (undo-tree-id7090 . -9) (undo-tree-id7091 . -9) (undo-tree-id7092 . -9) (undo-tree-id7093 . -9) (undo-tree-id7094 . -9) (undo-tree-id7095 . -9) (undo-tree-id7096 . -9) (undo-tree-id7097 . -9) (undo-tree-id7098 . -9) (undo-tree-id7099 . -9) (undo-tree-id7100 . -9) (undo-tree-id7101 . -9) (undo-tree-id7102 . -9) (undo-tree-id7103 . -9) (undo-tree-id7104 . -9) (undo-tree-id7105 . -9) (undo-tree-id7106 . -9) (undo-tree-id7107 . -9) (undo-tree-id7108 . -9) (undo-tree-id7109 . -9) (undo-tree-id7110 . -9) (undo-tree-id7111 . -9) (undo-tree-id7112 . -9) (undo-tree-id7113 . -9) (undo-tree-id7114 . -9) (undo-tree-id7115 . -9) (undo-tree-id7116 . -9) (undo-tree-id7117 . -9) (undo-tree-id7118 . -9) (undo-tree-id7119 . -9) (undo-tree-id7120 . -9) (undo-tree-id7121 . -9) (undo-tree-id7122 . -9) (undo-tree-id7123 . -9) (undo-tree-id7124 . -9) (undo-tree-id7125 . -9) (undo-tree-id7126 . -9) (undo-tree-id7127 . -9) (undo-tree-id7128 . -9) (undo-tree-id7129 . -9) (undo-tree-id7130 . -9) (undo-tree-id7131 . -9) (undo-tree-id7132 . -9) (undo-tree-id7133 . -9) (undo-tree-id7134 . -9) (undo-tree-id7135 . -9) (undo-tree-id7136 . -9) (undo-tree-id7137 . -9) (undo-tree-id7138 . -9) (undo-tree-id7139 . -9) (undo-tree-id7140 . -9) (undo-tree-id7141 . -9) (undo-tree-id7142 . -9) (undo-tree-id7143 . -9) (undo-tree-id7144 . -9) (undo-tree-id7145 . -9) (undo-tree-id7146 . -9) (undo-tree-id7147 . -9) (undo-tree-id7148 . -9) (undo-tree-id7149 . -9) (undo-tree-id7150 . -9) (undo-tree-id7151 . -9) (undo-tree-id7152 . -9) (undo-tree-id7153 . -9) (undo-tree-id7154 . -9) (undo-tree-id7155 . -9) (undo-tree-id7156 . -9) (undo-tree-id7157 . -9) (undo-tree-id7158 . -9) (undo-tree-id7159 . -9) (undo-tree-id7160 . -9) (undo-tree-id7161 . -9) (undo-tree-id7162 . -9) (undo-tree-id7163 . -9) (undo-tree-id7164 . -9) (undo-tree-id7165 . -9) (undo-tree-id7166 . -9) (undo-tree-id7167 . -9) (undo-tree-id7168 . -9) (undo-tree-id7169 . -9) (undo-tree-id7170 . -9) (undo-tree-id7171 . -9) (undo-tree-id7172 . -9) (undo-tree-id7173 . -9) (undo-tree-id7174 . -9) (undo-tree-id7175 . -9) (undo-tree-id7176 . -9) (undo-tree-id7177 . -9) (undo-tree-id7178 . -9) (undo-tree-id7179 . -9) (undo-tree-id7180 . -9) (undo-tree-id7181 . -9) (undo-tree-id7182 . -9) (undo-tree-id7183 . -9) (undo-tree-id7184 . -9) (undo-tree-id7185 . -9) (undo-tree-id7186 . -9) (undo-tree-id7187 . -9) (undo-tree-id7188 . -9) (undo-tree-id7189 . -9) (undo-tree-id7190 . -9) (undo-tree-id7191 . -9) (undo-tree-id7192 . -9) (undo-tree-id7193 . -9) (undo-tree-id7194 . -9) (undo-tree-id7195 . -9) (undo-tree-id7196 . -9) (undo-tree-id7197 . -9) (undo-tree-id7198 . -9) (undo-tree-id7199 . -9) (undo-tree-id7200 . -9) (undo-tree-id7201 . -9) (undo-tree-id7202 . -9) (undo-tree-id7203 . -9) (undo-tree-id7204 . -9) (undo-tree-id7205 . -9) (undo-tree-id7206 . -9) (undo-tree-id7207 . -9) (undo-tree-id7208 . -9) (undo-tree-id7209 . -9) (undo-tree-id7210 . -9) (undo-tree-id7211 . -9) (undo-tree-id7212 . -9) (undo-tree-id7213 . -9) (undo-tree-id7214 . -9) (undo-tree-id7215 . -9) (undo-tree-id7216 . -9) (undo-tree-id7217 . -9) (undo-tree-id7218 . -9) (undo-tree-id7219 . -9) (undo-tree-id7220 . -9) (undo-tree-id7221 . -9) (undo-tree-id7222 . -9) (undo-tree-id7223 . -9) (undo-tree-id7224 . -9) (undo-tree-id7225 . -9) (undo-tree-id7226 . -9) (undo-tree-id7227 . -9) (undo-tree-id7228 . -9) (undo-tree-id7229 . -9) (undo-tree-id7230 . -9) (undo-tree-id7231 . -9) (undo-tree-id7232 . -9) (undo-tree-id7233 . -9) (undo-tree-id7234 . -9) (undo-tree-id7235 . -9) (undo-tree-id7236 . -9) (undo-tree-id7237 . -9) (undo-tree-id7238 . -9) (undo-tree-id7239 . -9) (undo-tree-id7240 . -9) (undo-tree-id7241 . -9) (undo-tree-id7242 . -9) (undo-tree-id7243 . -9) (undo-tree-id7244 . -9) (undo-tree-id7245 . -9) (undo-tree-id7246 . -9) (undo-tree-id7247 . -9) (undo-tree-id7248 . -9) (undo-tree-id7249 . -9) (undo-tree-id7250 . -9) (undo-tree-id7251 . -9) (undo-tree-id7252 . -9) (undo-tree-id7253 . -9) (undo-tree-id7254 . -9) (undo-tree-id7255 . -9) (undo-tree-id7256 . -9) (undo-tree-id7257 . -9) (undo-tree-id7258 . -9) (undo-tree-id7259 . -9) (undo-tree-id7260 . -9) (undo-tree-id7261 . -9) (undo-tree-id7262 . -9) (undo-tree-id7263 . -9) (undo-tree-id7264 . -9) (undo-tree-id7265 . -9) (undo-tree-id7266 . -9) (undo-tree-id7267 . -9) (undo-tree-id7268 . -9) (undo-tree-id7269 . -9) (undo-tree-id7270 . -9) (undo-tree-id7271 . -9) (undo-tree-id7272 . -9) (undo-tree-id7273 . -9) (undo-tree-id7274 . -9) (undo-tree-id7275 . -9) (undo-tree-id7276 . -9) (undo-tree-id7277 . -9) (undo-tree-id7278 . -9) (undo-tree-id7279 . -9) (undo-tree-id7280 . -9) (undo-tree-id7281 . -9) (undo-tree-id7282 . -9) (undo-tree-id7283 . -9) (undo-tree-id7284 . -9) (undo-tree-id7285 . -9) (undo-tree-id7286 . -9) (undo-tree-id7287 . -9) (undo-tree-id7288 . -9) (undo-tree-id7289 . -9) (undo-tree-id7290 . -9) (undo-tree-id7291 . -9) (undo-tree-id7292 . -9) (undo-tree-id7293 . -9) (undo-tree-id7294 . -9) (undo-tree-id7295 . -9) (undo-tree-id7296 . -9) (undo-tree-id7297 . -9) (undo-tree-id7298 . -9) (undo-tree-id7299 . -9) (undo-tree-id7300 . -9) (undo-tree-id7301 . -9) (undo-tree-id7302 . -9) (undo-tree-id7303 . -9) (undo-tree-id7304 . -9) (undo-tree-id7305 . -9) (undo-tree-id7306 . -9) (undo-tree-id7307 . -9) (undo-tree-id7308 . -9) (undo-tree-id7309 . -9) (undo-tree-id7310 . -9) (undo-tree-id7311 . -9) (undo-tree-id7312 . -9) (undo-tree-id7313 . -9) (undo-tree-id7314 . -9) (undo-tree-id7315 . -9) (undo-tree-id7316 . -9) (undo-tree-id7317 . -9) (undo-tree-id7318 . -9) (undo-tree-id7319 . -9) (undo-tree-id7320 . -9) (undo-tree-id7321 . -9) (undo-tree-id7322 . -9) (undo-tree-id7323 . -9) (undo-tree-id7324 . -9) (1262 . 1264) (#("-=- " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1262) (1264 . 1266) (#(" sel" 0 1 (fontified nil) 1 4 (fontified nil)) . 1264) (1262 . 1268) (#("= self.xsp * self.xsp" 0 2 (fontified nil) 2 6 (fontified nil face font-lock-keyword-face) 6 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil face font-lock-keyword-face) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 1262) (undo-tree-id7325 . -12) (undo-tree-id7326 . -13) (undo-tree-id7327 . -21) (undo-tree-id7328 . -21) (undo-tree-id7329 . -21) (undo-tree-id7330 . -21) (undo-tree-id7331 . -21) (undo-tree-id7332 . -21) (undo-tree-id7333 . -21) (undo-tree-id7334 . -21) (undo-tree-id7335 . -21) (undo-tree-id7336 . -21) (undo-tree-id7337 . -21) (undo-tree-id7338 . -21) (undo-tree-id7339 . -21) (undo-tree-id7340 . -21) (undo-tree-id7341 . -21) (undo-tree-id7342 . -21) (undo-tree-id7343 . -21) (undo-tree-id7344 . -21) (undo-tree-id7345 . -21) (undo-tree-id7346 . -21) (undo-tree-id7347 . -21) (undo-tree-id7348 . -21) (undo-tree-id7349 . -20) (undo-tree-id7350 . -20) (undo-tree-id7351 . -20) (undo-tree-id7352 . -20) (undo-tree-id7353 . -20) (undo-tree-id7354 . -20) (undo-tree-id7355 . -19) (undo-tree-id7356 . -19) (undo-tree-id7357 . -19) (undo-tree-id7358 . -19) (undo-tree-id7359 . -19) (undo-tree-id7360 . -19) (undo-tree-id7361 . -18) (undo-tree-id7362 . -18) (undo-tree-id7363 . -18) (undo-tree-id7364 . -18) (undo-tree-id7365 . -18) (undo-tree-id7366 . -18) (undo-tree-id7367 . -17) (undo-tree-id7368 . -17) (undo-tree-id7369 . -17) (undo-tree-id7370 . -17) (undo-tree-id7371 . -17) (undo-tree-id7372 . -17) (undo-tree-id7373 . -16) (undo-tree-id7374 . -16) (undo-tree-id7375 . -16) (undo-tree-id7376 . -16) (undo-tree-id7377 . -16) (undo-tree-id7378 . -16) (undo-tree-id7379 . -15) (undo-tree-id7380 . -15) (undo-tree-id7381 . -15) (undo-tree-id7382 . -15) (undo-tree-id7383 . -15) (undo-tree-id7384 . -15) (undo-tree-id7385 . -14) (undo-tree-id7386 . -14) (undo-tree-id7387 . -14) (undo-tree-id7388 . -14) (undo-tree-id7389 . -14) (undo-tree-id7390 . -14) (undo-tree-id7391 . -14) (undo-tree-id7392 . -14) (undo-tree-id7393 . -14) (undo-tree-id7394 . -14) (undo-tree-id7395 . -14) (undo-tree-id7396 . -14) (undo-tree-id7397 . -14) (undo-tree-id7398 . -13) (undo-tree-id7399 . -13) (undo-tree-id7400 . -13) (undo-tree-id7401 . -13) (undo-tree-id7402 . -13) (undo-tree-id7403 . -13) (undo-tree-id7404 . -13) (undo-tree-id7405 . -13) (undo-tree-id7406 . -13) (undo-tree-id7407 . -13) (undo-tree-id7408 . -13) (undo-tree-id7409 . -13) (undo-tree-id7410 . -13) (undo-tree-id7411 . -13) (undo-tree-id7412 . -13) (undo-tree-id7413 . -13) (undo-tree-id7414 . -13) (undo-tree-id7415 . -13) (undo-tree-id7416 . -13) (undo-tree-id7417 . -13) (undo-tree-id7418 . -13) (undo-tree-id7419 . -13) (undo-tree-id7420 . -13) (undo-tree-id7421 . -13) (undo-tree-id7422 . -13) (undo-tree-id7423 . -13) (undo-tree-id7424 . -13) (undo-tree-id7425 . -13) (undo-tree-id7426 . -13) (undo-tree-id7427 . -13) (undo-tree-id7428 . -13) (undo-tree-id7429 . -13) (undo-tree-id7430 . -13) (undo-tree-id7431 . -13) (undo-tree-id7432 . -13) (undo-tree-id7433 . -13) (undo-tree-id7434 . -13) (undo-tree-id7435 . -13) (undo-tree-id7436 . -13) (undo-tree-id7437 . -13) (undo-tree-id7438 . -13) (undo-tree-id7439 . -13) (undo-tree-id7440 . -13) (undo-tree-id7441 . -13) (undo-tree-id7442 . -13) (undo-tree-id7443 . -13) (undo-tree-id7444 . -13) (undo-tree-id7445 . -13) (undo-tree-id7446 . -13) (undo-tree-id7447 . -13) (undo-tree-id7448 . -13) (undo-tree-id7449 . -13) (undo-tree-id7450 . -13) (undo-tree-id7451 . -13) (undo-tree-id7452 . -13) (undo-tree-id7453 . -13) (undo-tree-id7454 . -13) (undo-tree-id7455 . -13) (undo-tree-id7456 . -13) (undo-tree-id7457 . -13) (undo-tree-id7458 . -13) (undo-tree-id7459 . -13) (undo-tree-id7460 . -13) (undo-tree-id7461 . -13) (undo-tree-id7462 . -13) (undo-tree-id7463 . -13) (undo-tree-id7464 . -13) (undo-tree-id7465 . -13) (undo-tree-id7466 . -13) (undo-tree-id7467 . -13) (undo-tree-id7468 . -13) (undo-tree-id7469 . -13) (undo-tree-id7470 . -13) (undo-tree-id7471 . -13) (undo-tree-id7472 . -13) (undo-tree-id7473 . -13) (undo-tree-id7474 . -13) (undo-tree-id7475 . -13) (undo-tree-id7476 . -13) (undo-tree-id7477 . -13) (undo-tree-id7478 . -13) (undo-tree-id7479 . -13) (undo-tree-id7480 . -13) (undo-tree-id7481 . -13) (undo-tree-id7482 . -13) (undo-tree-id7483 . -13) (undo-tree-id7484 . -13) (undo-tree-id7485 . -13) (undo-tree-id7486 . -13) (undo-tree-id7487 . -13) (undo-tree-id7488 . -13) (undo-tree-id7489 . -13) (undo-tree-id7490 . -13) (undo-tree-id7491 . -13) (undo-tree-id7492 . -13) (undo-tree-id7493 . -13) (undo-tree-id7494 . -13) (undo-tree-id7495 . -13) (undo-tree-id7496 . -13) (undo-tree-id7497 . -13) (undo-tree-id7498 . -13) (undo-tree-id7499 . -13) (undo-tree-id7500 . -13) (undo-tree-id7501 . -13) (undo-tree-id7502 . -13) (undo-tree-id7503 . -13) (undo-tree-id7504 . -13) (undo-tree-id7505 . -13) (undo-tree-id7506 . -13) (undo-tree-id7507 . -13) (undo-tree-id7508 . -13) (undo-tree-id7509 . -13) (undo-tree-id7510 . -13) (undo-tree-id7511 . -13) (undo-tree-id7512 . -12) (undo-tree-id7513 . -12) (undo-tree-id7514 . -12) (undo-tree-id7515 . -12) (undo-tree-id7516 . -12) (undo-tree-id7517 . -12) (undo-tree-id7518 . -12) (undo-tree-id7519 . -12) (undo-tree-id7520 . -12) (undo-tree-id7521 . -12) (undo-tree-id7522 . -12) (undo-tree-id7523 . -12) (undo-tree-id7524 . -12) (undo-tree-id7525 . -12) (undo-tree-id7526 . -12) (undo-tree-id7527 . -12) (undo-tree-id7528 . -12) (undo-tree-id7529 . -12) (undo-tree-id7530 . -12) (undo-tree-id7531 . -12) (undo-tree-id7532 . -12) (undo-tree-id7533 . -12) (undo-tree-id7534 . -12) (undo-tree-id7535 . -12) (undo-tree-id7536 . -12) (undo-tree-id7537 . -12) (undo-tree-id7538 . -12) (undo-tree-id7539 . -12) (undo-tree-id7540 . -12) (undo-tree-id7541 . -12) (undo-tree-id7542 . -12) (undo-tree-id7543 . -12) (undo-tree-id7544 . -12) (undo-tree-id7545 . -12) (undo-tree-id7546 . -12) (undo-tree-id7547 . -12) (undo-tree-id7548 . -12) (undo-tree-id7549 . -12) (undo-tree-id7550 . -12) (undo-tree-id7551 . -12) (undo-tree-id7552 . -12) (undo-tree-id7553 . -12) (undo-tree-id7554 . -12) (undo-tree-id7555 . -12) (undo-tree-id7556 . -12) (undo-tree-id7557 . -12) (undo-tree-id7558 . -12) (undo-tree-id7559 . -12) (undo-tree-id7560 . -12) (undo-tree-id7561 . -12) (undo-tree-id7562 . -12) (undo-tree-id7563 . -12) (undo-tree-id7564 . -12) (undo-tree-id7565 . -12) (undo-tree-id7566 . -12) (undo-tree-id7567 . -12) (#(" " 0 1 (fontified nil)) . 1283) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (1275 . 1284) (#("mu" 0 1 (fontified nil) 1 2 (fontified nil)) . 1275) (undo-tree-id7584 . -2) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -2) (undo-tree-id7612 . -2) (undo-tree-id7613 . -2) (undo-tree-id7614 . -2) (undo-tree-id7615 . -2) (undo-tree-id7616 . -2) (undo-tree-id7617 . -2) (undo-tree-id7618 . -2) (undo-tree-id7619 . -2) (undo-tree-id7620 . -2) (undo-tree-id7621 . -2) (undo-tree-id7622 . -2) (undo-tree-id7623 . -2) (undo-tree-id7624 . -2) (undo-tree-id7625 . -2) (undo-tree-id7626 . -2) (undo-tree-id7627 . -2) (undo-tree-id7628 . -2) (undo-tree-id7629 . -2) (undo-tree-id7630 . -2) (undo-tree-id7631 . -2) (undo-tree-id7632 . -2) (undo-tree-id7633 . -2) (undo-tree-id7634 . -2) (undo-tree-id7635 . -2) (undo-tree-id7636 . -2) (undo-tree-id7637 . -2) (undo-tree-id7638 . -2) (undo-tree-id7639 . -2) (undo-tree-id7640 . -2) (undo-tree-id7641 . -2) (undo-tree-id7642 . -2) (undo-tree-id7643 . -2) (undo-tree-id7644 . -2) (undo-tree-id7645 . -2) (undo-tree-id7646 . -2) (undo-tree-id7647 . -2) (undo-tree-id7648 . -2) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (1274 . 1277) (#("d" 0 1 (fontified nil)) . 1274) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (1274 . 1275) (#(" d" 0 1 (fontified nil) 1 2 (fontified nil)) . 1274) (undo-tree-id7682 . -1) (undo-tree-id7683 . -2) (undo-tree-id7684 . -2) (undo-tree-id7685 . -2) (undo-tree-id7686 . -2) (undo-tree-id7687 . -2) (undo-tree-id7688 . -2) (undo-tree-id7689 . -2) (undo-tree-id7690 . -2) (undo-tree-id7691 . -2) (undo-tree-id7692 . -2) (undo-tree-id7693 . -2) (undo-tree-id7694 . -2) (undo-tree-id7695 . -2) (undo-tree-id7696 . -2) (undo-tree-id7697 . -2) (undo-tree-id7698 . -2) (undo-tree-id7699 . -2) (undo-tree-id7700 . -2) (undo-tree-id7701 . -2) (undo-tree-id7702 . -2) (undo-tree-id7703 . -2) (undo-tree-id7704 . -2) (undo-tree-id7705 . -2) (undo-tree-id7706 . -2) (undo-tree-id7707 . -2) (undo-tree-id7708 . -2) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (1275 . 1276) (#("mu" 0 2 (fontified t)) . 1275) (undo-tree-id7713 . -1) (undo-tree-id7714 . -2) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1)) (24969 53952 735836 592000) 0 nil]) ((#("            " 0 12 (fontified t)) . -1246) (undo-tree-id6665 . -12) (undo-tree-id6666 . -12) (undo-tree-id6667 . -12) (undo-tree-id6668 . -12) (undo-tree-id6669 . -12) (undo-tree-id6670 . -12) (undo-tree-id6671 . -12) (undo-tree-id6672 . -12) (undo-tree-id6673 . -12) (undo-tree-id6674 . -12) 1258 (1246 . 1258) (#("            " 0 12 (fontified nil)) . 1245) (undo-tree-id6675 . -12) (undo-tree-id6676 . -12) (undo-tree-id6677 . -12) (undo-tree-id6678 . -12) (undo-tree-id6679 . -12) (undo-tree-id6680 . -12) (undo-tree-id6681 . -12) (undo-tree-id6682 . -12) (undo-tree-id6683 . -12) (undo-tree-id6684 . -12) (1245 . 1258) (#("            " 0 12 (fontified nil)) . 1244) (undo-tree-id6685 . -12) (undo-tree-id6686 . -12) (undo-tree-id6687 . -12) (undo-tree-id6688 . -12) (undo-tree-id6689 . -12) (undo-tree-id6690 . -12) (undo-tree-id6691 . -12) (undo-tree-id6692 . -12) (undo-tree-id6693 . -12) (undo-tree-id6694 . -12) (undo-tree-id6695 . -1) (undo-tree-id6696 . -12) (undo-tree-id6697 . -12) (undo-tree-id6698 . -12) (undo-tree-id6699 . -12) (undo-tree-id6700 . -12) (undo-tree-id6701 . -12) (undo-tree-id6702 . -12) (undo-tree-id6703 . -12) (1256 . 1257) (1243 . 1256) 1211) nil (24969 53951 709554 534000) 0 nil]) ((#("        self.xsp -= 
" 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 4 5 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) face highlight-indent-guides-odd-face) 5 6 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 6 7 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 7 8 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 8 12 (fontified t face font-lock-keyword-face) 12 20 (fontified t) 20 21 (fontified t)) . 1244) (undo-tree-id6704 . -21) (undo-tree-id6705 . -21) (undo-tree-id6706 . -21) (undo-tree-id6707 . -21) (undo-tree-id6708 . -21) (undo-tree-id6709 . 1) (undo-tree-id6710 . -21) (undo-tree-id6711 . -21) (undo-tree-id6712 . -21) (undo-tree-id6713 . -21) (undo-tree-id6714 . -21) (undo-tree-id6715 . -21) (undo-tree-id6716 . -21) (undo-tree-id6717 . -21) (undo-tree-id6718 . -21) (undo-tree-id6719 . -21) (undo-tree-id6720 . -21) (undo-tree-id6721 . -21) (undo-tree-id6722 . -21) (undo-tree-id6723 . -21) (undo-tree-id6724 . -21) (undo-tree-id6725 . -21) (undo-tree-id6726 . -21) (undo-tree-id6727 . -21) (undo-tree-id6728 . -21) (undo-tree-id6729 . -21) (undo-tree-id6730 . -21) (undo-tree-id6731 . -21) (undo-tree-id6732 . -21) (undo-tree-id6733 . -21) (undo-tree-id6734 . -21) (undo-tree-id6735 . -21) (undo-tree-id6736 . -21) (undo-tree-id6737 . -21) (undo-tree-id6738 . -21) (undo-tree-id6739 . -21) (undo-tree-id6740 . -21) (undo-tree-id6741 . -21) (undo-tree-id6742 . -21) (undo-tree-id6743 . -21) (undo-tree-id6744 . -21) (undo-tree-id6745 . -21) (undo-tree-id6746 . -21) (undo-tree-id6747 . -21) (undo-tree-id6748 . -21) (undo-tree-id6749 . -21) (undo-tree-id6750 . -21) (undo-tree-id6751 . -21) (undo-tree-id6752 . -21) (undo-tree-id6753 . -21) (undo-tree-id6754 . -21) (undo-tree-id6755 . -21) (undo-tree-id6756 . -21) (undo-tree-id6757 . -21) (undo-tree-id6758 . -21) (undo-tree-id6759 . -19) (undo-tree-id6760 . -19) (undo-tree-id6761 . -20) (undo-tree-id6762 . -19) (undo-tree-id6763 . -20) (undo-tree-id6764 . -1) (undo-tree-id6765 . -4) (undo-tree-id6766 . -5) (undo-tree-id6767 . -1) (undo-tree-id6768 . -4) (undo-tree-id6769 . -5) (undo-tree-id6770 . -20) (undo-tree-id6771 . -20) (undo-tree-id6772 . -20) (undo-tree-id6773 . -20) (undo-tree-id6774 . -20) (undo-tree-id6775 . -20) (undo-tree-id6776 . -1) (undo-tree-id6777 . -4) (undo-tree-id6778 . -5) (undo-tree-id6779 . -1) (undo-tree-id6780 . -4) (undo-tree-id6781 . -5) (undo-tree-id6782 . -20) (undo-tree-id6783 . -20) (undo-tree-id6784 . -20) (undo-tree-id6785 . -20) (undo-tree-id6786 . -20) (undo-tree-id6787 . -20) (undo-tree-id6788 . -19) (undo-tree-id6789 . -19) (undo-tree-id6790 . -19) (undo-tree-id6791 . -19) (undo-tree-id6792 . -19) (undo-tree-id6793 . -19) (undo-tree-id6794 . -19) (undo-tree-id6795 . -19) (undo-tree-id6796 . -19) (undo-tree-id6797 . -19) (undo-tree-id6798 . -19) (undo-tree-id6799 . -19) (undo-tree-id6800 . -19) (undo-tree-id6801 . -19) (undo-tree-id6802 . -19) (undo-tree-id6803 . -19) (undo-tree-id6804 . -19) (undo-tree-id6805 . -19) (undo-tree-id6806 . -19) (undo-tree-id6807 . -19) (undo-tree-id6808 . -19) (undo-tree-id6809 . -19) (undo-tree-id6810 . -19) (undo-tree-id6811 . -19) (undo-tree-id6812 . -19) (undo-tree-id6813 . -19) (undo-tree-id6814 . -19) (undo-tree-id6815 . -19) (undo-tree-id6816 . -19) (undo-tree-id6817 . -19) (undo-tree-id6818 . -19) (undo-tree-id6819 . -19) (undo-tree-id6820 . -19) (undo-tree-id6821 . -19) (undo-tree-id6822 . -19) (undo-tree-id6823 . -19) (undo-tree-id6824 . -19) (undo-tree-id6825 . -19) (undo-tree-id6826 . -19) 1263) nil (24969 53951 704374 471000) 0 nil]) ((#("v" 0 1 (fontified t)) . -1264) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (#("s" 0 1 (fontified t)) . -1265) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) 1266 (1252 . 1266) (#("    " 0 4 (fontified t)) . -1252) (undo-tree-id6837 . -4) (undo-tree-id6838 . -4) 1256 (1243 . 1256) (t 24969 53838 557194 276000) 1231) nil (24969 53951 704407 2000) 0 nil]) ((1364 . 1365)) nil (24969 53838 505116 868000) 0 nil]) ((1322 . 1323)) nil (24969 53838 505124 41000) 0 nil] [nil ([nil nil ((1351 . 1352) (#("_" 0 1 (fontified t)) . 1351) (undo-tree-id5716 . -1) (1351 . 1352) (#("-" 0 1 (fontified t)) . 1351)) ((1351 . 1352) (#("_" 0 1 (fontified nil)) . 1351) (1351 . 1352) (#("+" 0 1 (fontified t)) . 1351) (t 24969 53830 99209 964000)) (24969 53830 46462 53000) 0 nil]) ((#("abs" 0 3 (fontified t face font-lock-builtin-face)) . 1319) (undo-tree-id5717 . -3) (undo-tree-id5718 . -3) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -2) (undo-tree-id5741 . -2) (undo-tree-id5742 . -2) (undo-tree-id5743 . -2) (undo-tree-id5744 . -2) (undo-tree-id5745 . -2) (undo-tree-id5746 . -2) (undo-tree-id5747 . -3) (undo-tree-id5748 . -3) (undo-tree-id5749 . -3) (undo-tree-id5750 . -3) (undo-tree-id5751 . -3) (undo-tree-id5752 . -3) (undo-tree-id5753 . -2) (undo-tree-id5754 . -2) (undo-tree-id5755 . -2) (undo-tree-id5756 . -2) (undo-tree-id5757 . -2) (undo-tree-id5758 . -2) (undo-tree-id5759 . -2) (undo-tree-id5760 . -2) (undo-tree-id5761 . -2) (undo-tree-id5762 . -2) (undo-tree-id5763 . -2) (undo-tree-id5764 . -2) (undo-tree-id5765 . -2) (undo-tree-id5766 . -2) (undo-tree-id5767 . -2) (undo-tree-id5768 . -2) (undo-tree-id5769 . -2) (undo-tree-id5770 . -2) (undo-tree-id5771 . -2) (undo-tree-id5772 . -2) (undo-tree-id5773 . -2) (undo-tree-id5774 . -2) (undo-tree-id5775 . -2) (undo-tree-id5776 . -2) (undo-tree-id5777 . -2) (undo-tree-id5778 . -2) (undo-tree-id5779 . -2) (undo-tree-id5780 . -2) (undo-tree-id5781 . -2) (undo-tree-id5782 . -2) (undo-tree-id5783 . -2) (undo-tree-id5784 . -2) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -2) (undo-tree-id5789 . -2) (undo-tree-id5790 . -2) (undo-tree-id5791 . -2) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -3) (undo-tree-id5799 . -3) (undo-tree-id5800 . -3) (undo-tree-id5801 . -3) (undo-tree-id5802 . -3) (undo-tree-id5803 . -3) (undo-tree-id5804 . -3) (undo-tree-id5805 . -3) (undo-tree-id5806 . -3) (undo-tree-id5807 . -3) (undo-tree-id5808 . -3) (undo-tree-id5809 . -3) (undo-tree-id5810 . -3) (undo-tree-id5811 . -3) (undo-tree-id5812 . -3) (undo-tree-id5813 . -3) (undo-tree-id5814 . -3) (undo-tree-id5815 . -3) (undo-tree-id5816 . -3) (undo-tree-id5817 . -3) (undo-tree-id5818 . -3) (undo-tree-id5819 . -3) (undo-tree-id5820 . -3) (undo-tree-id5821 . -3) (undo-tree-id5822 . -3) (undo-tree-id5823 . -3) (undo-tree-id5824 . -3) (undo-tree-id5825 . -3) (undo-tree-id5826 . -3) (undo-tree-id5827 . -3) (undo-tree-id5828 . -3) (undo-tree-id5829 . -3) (undo-tree-id5830 . -3) (undo-tree-id5831 . -3) (undo-tree-id5832 . -3) (undo-tree-id5833 . -3) (undo-tree-id5834 . -3) (undo-tree-id5835 . -3) (undo-tree-id5836 . -3) (undo-tree-id5837 . -3) (undo-tree-id5838 . -3) (undo-tree-id5839 . -3) (undo-tree-id5840 . -3) (undo-tree-id5841 . -3) (undo-tree-id5842 . -3) (undo-tree-id5843 . -3) (undo-tree-id5844 . -3) (undo-tree-id5845 . -3) (undo-tree-id5846 . -3) (undo-tree-id5847 . -3) (undo-tree-id5848 . -3) (undo-tree-id5849 . -3) (undo-tree-id5850 . -3) (undo-tree-id5851 . -3) (undo-tree-id5852 . -3) (undo-tree-id5853 . -3) (undo-tree-id5854 . -3) (undo-tree-id5855 . -3) (undo-tree-id5856 . -3) (undo-tree-id5857 . -3) (undo-tree-id5858 . -3) (undo-tree-id5859 . -3) (undo-tree-id5860 . -3) (undo-tree-id5861 . -3) (undo-tree-id5862 . -3) (undo-tree-id5863 . -3) (undo-tree-id5864 . -3) (undo-tree-id5865 . -3) (undo-tree-id5866 . -3) (undo-tree-id5867 . -3) (undo-tree-id5868 . -3) (undo-tree-id5869 . -3) 1322) ((1319 . 1322)) (24969 53835 20368 636000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1322) (undo-tree-id5870 . 1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) 1323) nil (24969 53835 426290 53000) 0 nil]) ((1319 . 1322)) nil (24969 53830 46983 690000) 0 nil]) ((1319 . 1320) (t 24969 53810 709246 281000)) nil (24969 53830 46986 225000) 0 nil]) ((1351 . 1352) (#("+" 0 1 (fontified t)) . 1351) (t 24969 53802 904261 40000)) nil (24969 53810 668751 832000) 0 nil]) ((1319 . 1320) (t 24969 53795 610274 909000)) nil (24969 53802 853045 231000) 0 nil]) ((1350 . 1351) (#("-" 0 1 (fontified t)) . 1350) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (t 24969 53776 687311 233000)) nil (24969 53795 570475 77000) 0 nil] [nil nil ((#("xsp) - " 0 3 (fontified t) 3 7 (fontified t)) . -1345) (undo-tree-id5708 . -7) 1352 (#("math." 0 5 (fontified t)) . -1352) (undo-tree-id5709 . -5) 1357 (#("pi" 0 2 (fontified t)) . -1357) (undo-tree-id5710 . -2) 1359 (t 24969 53776 687311 233000)) ((1345 . 1359)) (24969 53791 653284 719000) 0 nil]) ((1349 . 1359) (t 24969 53757 806347 989000)) nil (24969 53791 653864 204000) 0 nil]) ((#(" + math.pi" 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t)) . 1349)) nil (24969 53757 748149 619000) 0 nil] [nil nil ((#("a" 0 1 (fontified t)) . 1324) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (t 24969 53729 646403 800000)) ((1324 . 1325) (t 24969 53744 376374 455000)) (24969 53744 335899 746000) 0 nil] [nil ([nil nil ((1341 . 1342) (t 24969 53710 953441 533000)) ((#("-" 0 1 (fontified t)) . 1341) (t 24969 53723 360416 426000)) (24969 53723 308416 403000) 0 nil] [nil nil ((1330 . 1331) (#("-" 0 1 (fontified t)) . 1330) (t 24969 53710 953441 533000)) ((1330 . 1331) (#("r" 0 1 (fontified t)) . 1330)) (24969 53719 576600 685000) 0 nil]) ((1330 . 1331) (t 24969 53696 518471 59000)) ((#("-" 0 1 (fontified t)) . 1330)) (24969 53728 294383 887000) 0 nil]) ((1711 . 1718) (1709 . 1711) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1709) (undo-tree-id5702 . -1) 1710 (t 24969 53685 894493 13000)) nil (24969 53748 812429 659000) 0 nil]) ((1709 . 1712)) nil (24969 53685 855746 77000) 0 nil]) ((#("math.pi, " 0 8 (fontified t) 8 9 (fontified t)) . 1709) (undo-tree-id5647 . -9) (undo-tree-id5648 . -9) (undo-tree-id5649 . -9) (undo-tree-id5650 . -9) (undo-tree-id5651 . -9) (undo-tree-id5652 . -9) (undo-tree-id5653 . -9) (undo-tree-id5654 . -9) (undo-tree-id5655 . -9) (undo-tree-id5656 . -9) (undo-tree-id5657 . -9) (undo-tree-id5658 . -9) (undo-tree-id5659 . -9) (undo-tree-id5660 . -9) (undo-tree-id5661 . -9) (undo-tree-id5662 . -9) (undo-tree-id5663 . -9) (undo-tree-id5664 . -9) (undo-tree-id5665 . -9) (undo-tree-id5666 . -9) (undo-tree-id5667 . -9) (undo-tree-id5668 . -9) (undo-tree-id5669 . -9) (undo-tree-id5670 . -9) (undo-tree-id5671 . -9) (undo-tree-id5672 . -9) (undo-tree-id5673 . -9) (undo-tree-id5674 . -9) (undo-tree-id5675 . -9) (undo-tree-id5676 . -9) (undo-tree-id5677 . -9) (undo-tree-id5678 . -9) (undo-tree-id5679 . -9) (undo-tree-id5680 . -9) (undo-tree-id5681 . -9) (undo-tree-id5682 . -4) (undo-tree-id5683 . -4) (undo-tree-id5684 . -4) (undo-tree-id5685 . -4) (undo-tree-id5686 . -4) (undo-tree-id5687 . -3) (undo-tree-id5688 . -3) (undo-tree-id5689 . -3) (undo-tree-id5690 . -3) (undo-tree-id5691 . -3) (undo-tree-id5692 . -2) (undo-tree-id5693 . -2) (undo-tree-id5694 . -2) (undo-tree-id5695 . -2) (undo-tree-id5696 . -2) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (t 24969 53656 330555 134000)) nil (24969 53685 855850 863000) 0 nil] [nil ([nil ([nil nil ((1363 . 1364)) ((#(")" 0 1 (fontified t)) . 1363) (t 24969 53641 598586 677000)) (24969 53641 559655 594000) 0 nil]) ((1319 . 1323) (t 24969 53636 184598 370000)) ((#("abs(" 0 3 (fontified t face font-lock-builtin-face) 3 4 (fontified t)) . 1319)) (24969 53646 786555 689000) 0 nil]) ((1350 . 1351) (#("+" 0 1 (fontified t)) . 1350) (t 24969 53624 131624 602000)) ((1350 . 1351) (#("-" 0 1 (fontified t)) . 1350) (t 24969 53649 162570 432000)) (24969 53646 984200 854000) 0 nil]) ((1349 . 1359)) nil (24969 53653 646565 476000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1396) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1)) nil (24969 53624 92611 122000) 0 nil]) ((1396 . 1397) (t 24969 53618 591636 753000)) nil (24969 53624 92615 640000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1348) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1)) nil (24969 53618 541174 61000) 0 nil]) ((#("," 0 1 (fontified t)) . 1348) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1)) nil (24969 53618 541189 240000) 0 nil]) ((1338 . 1340)) nil (24969 53618 541192 546000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1338)) nil (24969 53618 541194 780000) 0 nil]) ((1347 . 1349)) nil (24969 53618 541196 914000) 0 nil]) ((1328 . 1329) (t 24969 53494 906782 335000)) nil (24969 53618 541199 269000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1347) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) 1348 (1347 . 1348)) nil (24969 53494 856604 41000) 0 nil]) ((#(" + math.pi" 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t)) . 1347) (undo-tree-id5618 . -7) (undo-tree-id5619 . -7) (undo-tree-id5620 . -7) (undo-tree-id5621 . -3) (undo-tree-id5622 . -3) (undo-tree-id5623 . -3) (undo-tree-id5624 . -3) (undo-tree-id5625 . -3) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (t 24969 53476 143803 253000)) nil (24969 53494 856633 987000) 0 nil]) ((1714 . 1715)) nil (24969 53476 104778 228000) 0 nil]) ((#("," 0 1 (fontified t)) . 1714)) nil (24969 53476 104785 191000) 0 nil]) ((#("3" 0 1 (fontified t)) . 1714)) nil (24969 53476 104788 597000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1714) (t 24969 53460 452820 769000)) nil (24969 53476 104791 673000) 0 nil]) ((1348 . 1349) (#("-" 0 1 (fontified t)) . 1348) (t 24969 53426 917858 276000)) nil (24969 53460 402209 350000) 0 nil]) ((1348 . 1349) (#("+" 0 1 (fontified t)) . 1348) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (t 24969 53411 799875 218000)) nil (24969 53426 867092 574000) 0 nil]) ((#("/2" 0 1 (fontified t) 1 2 (fontified t face highlight-numbers-number)) . 1357) (undo-tree-id5519 . -2) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -2) (undo-tree-id5527 . -2) (undo-tree-id5528 . -2) (undo-tree-id5529 . -2) (undo-tree-id5530 . -2) (undo-tree-id5531 . -2) (undo-tree-id5532 . -2) (undo-tree-id5533 . -2) (undo-tree-id5534 . -2) (undo-tree-id5535 . -2) (undo-tree-id5536 . -2) (undo-tree-id5537 . -2) (undo-tree-id5538 . -2) (undo-tree-id5539 . -2) (undo-tree-id5540 . -2) (undo-tree-id5541 . -2) (undo-tree-id5542 . -2) (undo-tree-id5543 . -2) (undo-tree-id5544 . -2) (undo-tree-id5545 . -2) (undo-tree-id5546 . -2) (undo-tree-id5547 . -2) (undo-tree-id5548 . -2) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) (undo-tree-id5554 . -2) (undo-tree-id5555 . -2) (undo-tree-id5556 . -2) (undo-tree-id5557 . -2) (undo-tree-id5558 . -2) (undo-tree-id5559 . -2) (undo-tree-id5560 . -2) (undo-tree-id5561 . -2) (undo-tree-id5562 . -2) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1)) nil (24969 53411 749458 193000) 0 nil]) ((1350 . 1359) (#("p" 0 1 (fontified t)) . -1350) (undo-tree-id5584 . -1) 1351 (1347 . 1351) (t 24969 53393 842895 370000)) nil (24969 53411 749472 229000) 0 nil]) ((#(" + 3*math.pi/2" 0 3 (fontified t) 3 4 (fontified t face highlight-numbers-number) 4 5 (fontified t) 5 9 (fontified t) 9 13 (fontified t) 13 14 (fontified t face highlight-numbers-number)) . 1347) (undo-tree-id5465 . -3) (undo-tree-id5466 . -3) (undo-tree-id5467 . -13) (undo-tree-id5468 . -13) (undo-tree-id5469 . -13) (undo-tree-id5470 . -13) (undo-tree-id5471 . -13) (undo-tree-id5472 . -12) (undo-tree-id5473 . -12) (undo-tree-id5474 . -12) (undo-tree-id5475 . -12) (undo-tree-id5476 . -12) (undo-tree-id5477 . -10) (undo-tree-id5478 . -10) (undo-tree-id5479 . -10) (undo-tree-id5480 . -10) (undo-tree-id5481 . -10) (undo-tree-id5482 . -9) (undo-tree-id5483 . -9) (undo-tree-id5484 . -9) (undo-tree-id5485 . -9) (undo-tree-id5486 . -9) (undo-tree-id5487 . -5) (undo-tree-id5488 . -5) (undo-tree-id5489 . -5) (undo-tree-id5490 . -5) (undo-tree-id5491 . -5) (undo-tree-id5492 . -5) (undo-tree-id5493 . -5) (undo-tree-id5494 . -5) (undo-tree-id5495 . -5) (undo-tree-id5496 . -5) (undo-tree-id5497 . -5) (undo-tree-id5498 . -5) (undo-tree-id5499 . -4) (undo-tree-id5500 . -4) (undo-tree-id5501 . -4) (undo-tree-id5502 . -4) (undo-tree-id5503 . -4) (undo-tree-id5504 . -3) (undo-tree-id5505 . -3) (undo-tree-id5506 . -3) (undo-tree-id5507 . -3) (undo-tree-id5508 . -3) (undo-tree-id5509 . -2) (undo-tree-id5510 . -2) (undo-tree-id5511 . -2) (undo-tree-id5512 . -2) (undo-tree-id5513 . -2) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1)) nil (24969 53393 804912 725000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((1351 . 1352) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1351) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (t 24969 53318 997979 719000)) ((1351 . 1352) (#("4" 0 1 (fontified t face highlight-numbers-number)) . 1351) (t 24969 53377 478913 762000)) (24969 53377 439466 84000) 0 nil]) ((1319 . 1320)) ((#("(" 0 1 (fontified t)) . 1319)) (24969 53384 429207 339000) 0 nil]) ((1359 . 1360)) ((#(")" 0 1 (fontified t)) . 1359)) (24969 53384 674688 929000) 0 nil]) ((1359 . 1361)) ((#("/2" 0 1 (fontified t) 1 2 (fontified t face highlight-numbers-number)) . 1359) (undo-tree-id5441 . -2)) (24969 53384 956696 518000) 0 nil]) ((1350 . 1359)) ((#("2*math.pi" 0 1 (fontified t face highlight-numbers-number) 1 9 (fontified t)) . 1350) (undo-tree-id5442 . -9) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -8) (undo-tree-id5449 . -9) (undo-tree-id5450 . -9) (undo-tree-id5451 . -9) (undo-tree-id5452 . -9) (undo-tree-id5453 . -9) (undo-tree-id5454 . -9) (undo-tree-id5455 . -9) (undo-tree-id5456 . -8) (undo-tree-id5457 . -8) (undo-tree-id5458 . -8) (undo-tree-id5459 . -8) (undo-tree-id5460 . -8) (undo-tree-id5461 . -8) (undo-tree-id5462 . -8)) (24969 53385 336697 803000) 0 nil]) ((#("3*math.pi/2" 0 1 (fontified t face highlight-numbers-number) 1 2 (fontified t) 2 6 (fontified t) 6 10 (fontified t) 10 11 (fontified t face highlight-numbers-number)) . 1350) (undo-tree-id5417 . -7) (undo-tree-id5419 . -7) (undo-tree-id5421 . -6) (undo-tree-id5423 . -6) (undo-tree-id5425 . -6) (undo-tree-id5427 . -2) (undo-tree-id5429 . -2) (undo-tree-id5431 . -1) (undo-tree-id5433 . -1) (undo-tree-id5435 . -1) (t 24969 53287 641015 242000)) ((1350 . 1361)) (24969 53385 698772 909000) 0 nil]) ((1722 . 1723)) ((#("5" 0 1 (fontified t face highlight-numbers-number)) . 1722) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1)) (24969 53388 836749 831000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1722) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1)) nil (24969 53387 266792 805000) 0 nil]) ((#("." 0 1 (fontified t)) . 1722) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1)) nil (24969 53287 590246 792000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 1722) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (t 24969 53255 449051 836000)) nil (24969 53287 590297 197000) 0 nil]) ((1359 . 1361)) nil (24969 53255 395770 959000) 0 nil]) ((1351 . 1352) (#("/" 0 1 (fontified t)) . -1351) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) 1352 (1350 . 1352) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -1350) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) 1351 (1350 . 1351) (t 24969 53243 613065 324000)) nil (24969 53255 395844 106000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((1358 . 1359) (#("3" 0 1 (fontified t face highlight-numbers-number)) . -1358) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) 1359 (1358 . 1359) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -1358) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) 1359 (t 24969 53223 610088 160000)) ((1358 . 1359) (#("3" 0 1 (fontified nil face highlight-numbers-number)) . 1358) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (1358 . 1359) (#("4" 0 1 (fontified t face highlight-numbers-number)) . 1358) (t 24969 53226 95085 320000)) (24969 53226 42654 182000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1350)) ((1350 . 1351)) (24969 53231 357389 32000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1350)) ((1350 . 1351)) (24969 53231 546919 199000) 0 nil]) ((1350 . 1351) (#("3" 0 1 (fontified t face highlight-numbers-number)) . 1350) (1350 . 1351) (#("4" 0 1 (fontified t face highlight-numbers-number)) . 1350) (1350 . 1351) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1350) (1350 . 1351) (#("3" 0 1 (fontified t face highlight-numbers-number)) . 1350) (t 24969 53205 324109 84000)) ((1350 . 1351) (#("2" 0 1 (fontified nil face highlight-numbers-number)) . 1350) (1350 . 1351) (#("4" 0 1 (fontified nil face highlight-numbers-number)) . 1350) (1350 . 1351) (#("3" 0 1 (fontified nil face highlight-numbers-number)) . 1350) (1350 . 1351) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 1350)) (24969 53232 46922 578000) 0 nil]) ((1360 . 1361) (#("3" 0 1 (fontified t face highlight-numbers-number)) . -1360) (undo-tree-id5300 . -1) (undo-tree-id5302 . -1) (undo-tree-id5304 . -1) (undo-tree-id5306 . -1) 1361 (1359 . 1361)) ((#("/3" 0 1 (fontified nil) 1 2 (fontified nil face highlight-numbers-number)) . 1359) (1360 . 1361) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1360)) (24969 53232 580325 769000) 0 nil]) ((1350 . 1352) (t 24969 53197 202118 393000)) ((#("3*" 0 1 (fontified t face highlight-numbers-number) 1 2 (fontified t)) . 1350)) (24969 53239 424977 18000) 0 nil]) ((#(" * 2" 0 3 (fontified t) 3 4 (fontified t face highlight-numbers-number)) . 1357) (undo-tree-id5299 . -3) (t 24969 53189 72127 721000)) nil (24969 53240 72940 394000) 0 nil]) ((1357 . 1361)) nil (24969 53189 22579 814000) 0 nil]) ((#("/2" 0 1 (fontified t) 1 2 (fontified t face highlight-numbers-number)) . 1357) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (t 24969 53177 432141 93000)) nil (24969 53189 22606 664000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1328) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1)) nil (24969 53177 382877 912000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1347) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1)) nil (24969 53177 382887 510000) 0 nil]) ((1359 . 1361) (#(" " 0 1 (fontified t)) . -1359) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) 1360 (1349 . 1360) (t 24969 53169 333150 409000)) nil (24969 53177 382907 457000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1348) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1)) nil (24969 53169 281820 104000) 0 nil]) ((#("+ " 0 2 (fontified t)) . 1349) (undo-tree-id5244 . -2) (undo-tree-id5245 . -2) (undo-tree-id5246 . -2) (undo-tree-id5247 . -2) (undo-tree-id5248 . -2) (undo-tree-id5249 . -2) (undo-tree-id5250 . -2) (undo-tree-id5251 . -1) (undo-tree-id5252 . -2) (undo-tree-id5253 . -2) (undo-tree-id5254 . -2) (undo-tree-id5255 . -2) (undo-tree-id5256 . -2) (undo-tree-id5257 . -2) (undo-tree-id5258 . -2) (undo-tree-id5259 . -2) (undo-tree-id5260 . -2) (undo-tree-id5261 . -2) (undo-tree-id5262 . -2) (undo-tree-id5263 . -2) (undo-tree-id5264 . -2) (undo-tree-id5265 . -2) (undo-tree-id5266 . -2) (undo-tree-id5267 . -2) (undo-tree-id5268 . -2) 1351) nil (24969 53169 281902 589000) 0 nil]) ((#("math" 0 4 (fontified t)) . 1351) (undo-tree-id5269 . -4) (undo-tree-id5270 . -4) (undo-tree-id5271 . -4) 1355) nil (24969 53169 281916 635000) 0 nil]) ((#("." 0 1 (fontified t)) . 1355) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) 1356) nil (24969 53169 281927 606000) 0 nil]) ((#("pi" 0 2 (fontified t)) . 1356) (undo-tree-id5275 . -2) (undo-tree-id5276 . -1) (undo-tree-id5277 . -2) 1358 (t 24969 53159 878161 297000)) nil (24969 53169 281939 97000) 0 nil]) ((1348 . 1358) (#("/" 0 1 (fontified t)) . -1348) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) 1349 (1348 . 1349)) nil (24969 53159 826061 694000) 0 nil]) ((1329 . 1330)) nil (24969 53159 826068 256000) 0 nil]) ((1346 . 1347) (#(" " 0 1 (fontified t)) . -1346) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) 1347) nil (24969 53159 826305 180000) 0 nil]) ((#("- " 0 2 (fontified t)) . 1347) (undo-tree-id4713 . -2) (undo-tree-id4714 . -2) (undo-tree-id4715 . -2) (undo-tree-id4716 . -2) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (undo-tree-id4720 . -2) (undo-tree-id4721 . -2) (undo-tree-id4722 . -2) (undo-tree-id4723 . -2) (undo-tree-id4724 . -2) (undo-tree-id4725 . -2) (undo-tree-id4726 . -2) (undo-tree-id4727 . -2) (undo-tree-id4728 . -2) (undo-tree-id4729 . -2) (undo-tree-id4730 . -2) (undo-tree-id4731 . -2) (undo-tree-id4732 . -2) (undo-tree-id4733 . -2) (undo-tree-id4734 . -2) (undo-tree-id4735 . -2) (undo-tree-id4736 . -2) (undo-tree-id4737 . -2) (undo-tree-id4738 . -2) (undo-tree-id4739 . -2) (undo-tree-id4740 . -2) (undo-tree-id4741 . -2) (undo-tree-id4742 . -2) (undo-tree-id4743 . -2) (undo-tree-id4744 . -2) (undo-tree-id4745 . -2) (undo-tree-id4746 . -2) (undo-tree-id4747 . -2) (undo-tree-id4748 . -2) (undo-tree-id4749 . -2) (undo-tree-id4750 . -2) (undo-tree-id4751 . -2) (undo-tree-id4752 . -2) (undo-tree-id4753 . -2) (undo-tree-id4754 . -2) (undo-tree-id4755 . -2) (undo-tree-id4756 . -2) (undo-tree-id4757 . -2) (undo-tree-id4758 . -2) (undo-tree-id4759 . -2) (undo-tree-id4760 . -2) (undo-tree-id4761 . -2) (undo-tree-id4762 . -2) (undo-tree-id4763 . -2) (undo-tree-id4764 . -2) (undo-tree-id4765 . -2) (undo-tree-id4766 . -2) (undo-tree-id4767 . -2) (undo-tree-id4768 . -2) (undo-tree-id4769 . -2) (undo-tree-id4770 . -2) (undo-tree-id4771 . -2) (undo-tree-id4772 . -2) (undo-tree-id4773 . -2) (undo-tree-id4774 . -2) (undo-tree-id4775 . -2) (undo-tree-id4776 . -2) (undo-tree-id4777 . -2) (undo-tree-id4778 . -2) (undo-tree-id4779 . -2) (undo-tree-id4780 . -2) (undo-tree-id4781 . -2) (undo-tree-id4782 . -2) (undo-tree-id4783 . -2) (undo-tree-id4784 . -2) (undo-tree-id4785 . -2) (undo-tree-id4786 . -2) (undo-tree-id4787 . -2) (undo-tree-id4788 . -2) (undo-tree-id4789 . -2) (undo-tree-id4790 . -2) (undo-tree-id4791 . -2) (undo-tree-id4792 . -2) (undo-tree-id4793 . -2) (undo-tree-id4794 . -2) (undo-tree-id4795 . -2) (undo-tree-id4796 . -2) (undo-tree-id4797 . -2) (undo-tree-id4798 . -2) (undo-tree-id4799 . -2) (undo-tree-id4800 . -2) (undo-tree-id4801 . -2) (undo-tree-id4802 . -2) (undo-tree-id4803 . -2) (undo-tree-id4804 . -2) (undo-tree-id4805 . -2) (undo-tree-id4806 . -2) (undo-tree-id4807 . -2) (undo-tree-id4808 . -2) (undo-tree-id4809 . -2) (undo-tree-id4810 . -2) (undo-tree-id4811 . -2) (undo-tree-id4812 . -2) (undo-tree-id4813 . -2) (undo-tree-id4814 . -2) (undo-tree-id4815 . -2) (undo-tree-id4816 . -2) (undo-tree-id4817 . -2) (undo-tree-id4818 . -2) (undo-tree-id4819 . -2) (undo-tree-id4820 . -2) (undo-tree-id4821 . -2) (undo-tree-id4822 . -2) (undo-tree-id4823 . -2) (undo-tree-id4824 . -2) (undo-tree-id4825 . -2) (undo-tree-id4826 . -2) (undo-tree-id4827 . -2) (undo-tree-id4828 . -2) (undo-tree-id4829 . -2) (undo-tree-id4830 . -2) (undo-tree-id4831 . -2) (undo-tree-id4832 . -2) (undo-tree-id4833 . -2) (undo-tree-id4834 . -2) (undo-tree-id4835 . -2) (undo-tree-id4836 . -2) (undo-tree-id4837 . -2) (undo-tree-id4838 . -2) (undo-tree-id4839 . -2) (undo-tree-id4840 . -2) (undo-tree-id4841 . -2) (undo-tree-id4842 . -2) (undo-tree-id4843 . -2) (undo-tree-id4844 . -2) (undo-tree-id4845 . -2) (undo-tree-id4846 . -2) (undo-tree-id4847 . -2) (undo-tree-id4848 . -2) (undo-tree-id4849 . -2) (undo-tree-id4850 . -2) (undo-tree-id4851 . -2) (undo-tree-id4852 . -2) (undo-tree-id4853 . -2) (undo-tree-id4854 . -2) (undo-tree-id4855 . -2) 1349) nil (24969 53159 826659 554000) 0 nil]) ((#("math" 0 4 (fontified t)) . 1349) (undo-tree-id4856 . -4) (undo-tree-id4857 . -4) (undo-tree-id4858 . -4) (undo-tree-id4859 . -4) (undo-tree-id4860 . -4) (undo-tree-id4861 . -4) (undo-tree-id4862 . -4) (undo-tree-id4863 . -4) (undo-tree-id4864 . -4) (undo-tree-id4865 . -4) (undo-tree-id4866 . -4) (undo-tree-id4867 . -4) (undo-tree-id4868 . -4) (undo-tree-id4869 . -4) (undo-tree-id4870 . -4) (undo-tree-id4871 . -4) (undo-tree-id4872 . -4) (undo-tree-id4873 . -4) (undo-tree-id4874 . -4) (undo-tree-id4875 . -4) (undo-tree-id4876 . -4) (undo-tree-id4877 . -4) (undo-tree-id4878 . -4) (undo-tree-id4879 . -4) (undo-tree-id4880 . -4) (undo-tree-id4881 . -4) (undo-tree-id4882 . -4) (undo-tree-id4883 . -4) (undo-tree-id4884 . -4) (undo-tree-id4885 . -4) (undo-tree-id4886 . -4) (undo-tree-id4887 . -4) (undo-tree-id4888 . -4) (undo-tree-id4889 . -4) (undo-tree-id4890 . -4) (undo-tree-id4891 . -4) (undo-tree-id4892 . -4) (undo-tree-id4893 . -4) (undo-tree-id4894 . -4) (undo-tree-id4895 . -4) (undo-tree-id4896 . -4) (undo-tree-id4897 . -4) (undo-tree-id4898 . -4) (undo-tree-id4899 . -4) (undo-tree-id4900 . -4) (undo-tree-id4901 . -4) (undo-tree-id4902 . -4) (undo-tree-id4903 . -4) (undo-tree-id4904 . -4) (undo-tree-id4905 . -4) (undo-tree-id4906 . -4) (undo-tree-id4907 . -4) (undo-tree-id4908 . -4) (undo-tree-id4909 . -4) (undo-tree-id4910 . -4) (undo-tree-id4911 . -4) (undo-tree-id4912 . -4) (undo-tree-id4913 . -4) (undo-tree-id4914 . -4) (undo-tree-id4915 . -4) (undo-tree-id4916 . -4) (undo-tree-id4917 . -4) (undo-tree-id4918 . -4) (undo-tree-id4919 . -4) (undo-tree-id4920 . -4) (undo-tree-id4921 . -4) (undo-tree-id4922 . -4) (undo-tree-id4923 . -4) (undo-tree-id4924 . -4) (undo-tree-id4925 . -4) (undo-tree-id4926 . -4) (undo-tree-id4927 . -4) (undo-tree-id4928 . -4) (undo-tree-id4929 . -4) (undo-tree-id4930 . -4) (undo-tree-id4931 . -4) (undo-tree-id4932 . -4) (undo-tree-id4933 . -4) (undo-tree-id4934 . -4) (undo-tree-id4935 . -4) (undo-tree-id4936 . -4) (undo-tree-id4937 . -4) (undo-tree-id4938 . -4) (undo-tree-id4939 . -4) (undo-tree-id4940 . -4) (undo-tree-id4941 . -4) (undo-tree-id4942 . -4) (undo-tree-id4943 . -4) (undo-tree-id4944 . -4) (undo-tree-id4945 . -4) (undo-tree-id4946 . -4) (undo-tree-id4947 . -4) (undo-tree-id4948 . -4) (undo-tree-id4949 . -4) (undo-tree-id4950 . -4) (undo-tree-id4951 . -4) (undo-tree-id4952 . -4) (undo-tree-id4953 . -4) (undo-tree-id4954 . -4) (undo-tree-id4955 . -4) (undo-tree-id4956 . -4) (undo-tree-id4957 . -4) (undo-tree-id4958 . -4) (undo-tree-id4959 . -4) (undo-tree-id4960 . -4) (undo-tree-id4961 . -4) (undo-tree-id4962 . -4) (undo-tree-id4963 . -4) (undo-tree-id4964 . -4) (undo-tree-id4965 . -4) (undo-tree-id4966 . -4) (undo-tree-id4967 . -4) (undo-tree-id4968 . -4) (undo-tree-id4969 . -4) (undo-tree-id4970 . -4) (undo-tree-id4971 . -4) (undo-tree-id4972 . -4) (undo-tree-id4973 . -4) (undo-tree-id4974 . -4) (undo-tree-id4975 . -4) (undo-tree-id4976 . -4) (undo-tree-id4977 . -4) (undo-tree-id4978 . -4) (undo-tree-id4979 . -4) (undo-tree-id4980 . -4) (undo-tree-id4981 . -4) (undo-tree-id4982 . -4) (undo-tree-id4983 . -4) (undo-tree-id4984 . -4) 1353) nil (24969 53159 826872 644000) 0 nil]) ((#("." 0 1 (fontified t)) . 1353) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) 1354) nil (24969 53159 827111 391000) 0 nil]) ((#("pi" 0 2 (fontified t)) . 1354) (undo-tree-id5100 . -2) (undo-tree-id5101 . -2) (undo-tree-id5102 . -2) (undo-tree-id5103 . -2) (undo-tree-id5104 . -2) (undo-tree-id5105 . -2) (undo-tree-id5106 . -2) (undo-tree-id5107 . -2) (undo-tree-id5108 . -2) (undo-tree-id5109 . -2) (undo-tree-id5110 . -2) (undo-tree-id5111 . -2) (undo-tree-id5112 . -2) (undo-tree-id5113 . -2) (undo-tree-id5114 . -2) (undo-tree-id5115 . -2) (undo-tree-id5116 . -2) (undo-tree-id5117 . -2) (undo-tree-id5118 . -2) (undo-tree-id5119 . -2) (undo-tree-id5120 . -2) (undo-tree-id5121 . -2) (undo-tree-id5122 . -2) (undo-tree-id5123 . -2) (undo-tree-id5124 . -2) (undo-tree-id5125 . -2) (undo-tree-id5126 . -2) (undo-tree-id5127 . -2) (undo-tree-id5128 . -2) (undo-tree-id5129 . -2) (undo-tree-id5130 . -2) (undo-tree-id5131 . -2) (undo-tree-id5132 . -2) (undo-tree-id5133 . -2) (undo-tree-id5134 . -2) (undo-tree-id5135 . -2) (undo-tree-id5136 . -2) (undo-tree-id5137 . -2) (undo-tree-id5138 . -2) (undo-tree-id5139 . -2) (undo-tree-id5140 . -2) (undo-tree-id5141 . -2) (undo-tree-id5142 . -2) (undo-tree-id5143 . -2) (undo-tree-id5144 . -2) (undo-tree-id5145 . -2) (undo-tree-id5146 . -2) (undo-tree-id5147 . -2) (undo-tree-id5148 . -2) (undo-tree-id5149 . -2) (undo-tree-id5150 . -2) (undo-tree-id5151 . -2) (undo-tree-id5152 . -2) (undo-tree-id5153 . -2) (undo-tree-id5154 . -2) (undo-tree-id5155 . -2) (undo-tree-id5156 . -2) (undo-tree-id5157 . -2) (undo-tree-id5158 . -2) (undo-tree-id5159 . -2) (undo-tree-id5160 . -2) (undo-tree-id5161 . -2) (undo-tree-id5162 . -2) (undo-tree-id5163 . -2) (undo-tree-id5164 . -2) (undo-tree-id5165 . -2) (undo-tree-id5166 . -2) (undo-tree-id5167 . -2) (undo-tree-id5168 . -2) (undo-tree-id5169 . -2) (undo-tree-id5170 . -2) (undo-tree-id5171 . -2) (undo-tree-id5172 . -2) (undo-tree-id5173 . -2) (undo-tree-id5174 . -2) (undo-tree-id5175 . -2) (undo-tree-id5176 . -2) (undo-tree-id5177 . -2) (undo-tree-id5178 . -2) (undo-tree-id5179 . -2) (undo-tree-id5180 . -2) (undo-tree-id5181 . -2) (undo-tree-id5182 . -2) (undo-tree-id5183 . -2) (undo-tree-id5184 . -2) (undo-tree-id5185 . -2) (undo-tree-id5186 . -2) (undo-tree-id5187 . -2) (undo-tree-id5188 . -2) (undo-tree-id5189 . -2) (undo-tree-id5190 . -2) (undo-tree-id5191 . -2) (undo-tree-id5192 . -2) (undo-tree-id5193 . -2) (undo-tree-id5194 . -2) (undo-tree-id5195 . -2) (undo-tree-id5196 . -2) (undo-tree-id5197 . -2) (undo-tree-id5198 . -2) (undo-tree-id5199 . -2) (undo-tree-id5200 . -2) 1356 (t 24969 53144 397179 155000)) nil (24969 53159 827279 205000) 0 nil]) ((#(" + math.pi" 0 10 (fontified t)) . 1357) (t 24969 53142 258181 626000)) nil (24969 53144 349035 632000) 0 nil]) ((1346 . 1356) (t 24969 53098 947231 810000)) nil (24969 53142 209200 156000) 0 nil]) ((1718 . 1721) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 1718) (undo-tree-id4567 . -1) (t 24969 53079 960253 913000)) nil (24969 53098 898915 115000) 0 nil]) ((1350 . 1357) (#("p" 0 1 (fontified t)) . -1350) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (#("i" 0 1 (fontified t)) . -1351) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) 1352 (1347 . 1352) (#(" " 0 1 (fontified t)) . -1347) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) 1348 (1347 . 1348) (t 24969 53063 313273 346000)) nil (24969 53079 912610 681000) 0 nil]) ((1324 . 1325) (t 24969 52993 32355 983000)) nil (24969 53063 278784 325000) 0 nil]) ((1392 . 1393)) nil (24969 52992 984587 844000) 0 nil]) ((1366 . 1367) (1361 . 1366)) nil (24969 52992 984594 647000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1346)) nil (24969 52992 984597 582000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1319) (undo-tree-id4506 . -1)) nil (24969 52992 984610 116000) 0 nil]) ((#("round" 0 5 (fontified t face font-lock-builtin-face)) . 1319) (t 24969 52961 495393 402000)) nil (24969 52992 984613 272000) 0 nil]) ((1703 . 1705)) ((#("/3" 0 1 (fontified t) 1 2 (fontified t face highlight-numbers-number)) . 1703) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4406 . -1) (undo-tree-id4408 . -1) (undo-tree-id4410 . -1) (undo-tree-id4412 . -1) (undo-tree-id4414 . -1) (undo-tree-id4416 . -1) (undo-tree-id4418 . -1) (undo-tree-id4420 . -1) (undo-tree-id4422 . -1) (undo-tree-id4424 . -1) (undo-tree-id4426 . -1) (undo-tree-id4428 . -1) (undo-tree-id4430 . -1) (undo-tree-id4432 . -1) (undo-tree-id4434 . -1) (undo-tree-id4436 . -1) (undo-tree-id4438 . -1) (undo-tree-id4440 . -1) (undo-tree-id4442 . -1) (undo-tree-id4444 . -1) (undo-tree-id4446 . -1) (undo-tree-id4448 . -1) (undo-tree-id4450 . -1) (undo-tree-id4452 . -1) (undo-tree-id4454 . -1) (undo-tree-id4456 . -1) (undo-tree-id4458 . -1) (undo-tree-id4460 . -1) (undo-tree-id4462 . -1) (undo-tree-id4464 . -1) (undo-tree-id4466 . -1) (undo-tree-id4468 . -1) (undo-tree-id4470 . -1) (undo-tree-id4472 . -1) (undo-tree-id4474 . -1) (undo-tree-id4476 . -1) (undo-tree-id4478 . -1) (undo-tree-id4480 . -1) (undo-tree-id4482 . -1) (undo-tree-id4484 . -1) (undo-tree-id4486 . -1) (undo-tree-id4488 . -1) (undo-tree-id4490 . -1) (undo-tree-id4492 . -1) (undo-tree-id4494 . -1) (undo-tree-id4496 . -1) (undo-tree-id4498 . -1) (undo-tree-id4500 . -1) (undo-tree-id4502 . -1) (undo-tree-id4504 . -1) (t 24969 52961 495393 402000)) (24969 52982 9314 873000) 0 nil]) ((#("." 0 1 (fontified t)) . 1319)) nil (24969 52980 951677 728000) 0 nil]) ((#("math" 0 4 (fontified t)) . 1319) (undo-tree-id4401 . -4) (t 24969 52929 873431 151000)) nil (24969 52939 623841 774000) 0 nil]) ((1357 . 1358)) nil (24969 52929 825387 757000) 0 nil]) ((1327 . 1330) (1324 . 1327) (#("ceil" 0 4 (fontified t)) . -1324) (undo-tree-id4149 . -4) (undo-tree-id4150 . -3) (undo-tree-id4151 . -3) (undo-tree-id4152 . -3) (undo-tree-id4153 . -3) (undo-tree-id4154 . -3) (undo-tree-id4155 . -3) (undo-tree-id4156 . -4) (undo-tree-id4157 . -4) (undo-tree-id4158 . -4) (undo-tree-id4159 . -4) (undo-tree-id4160 . -4) (undo-tree-id4161 . -4) (undo-tree-id4162 . -4) (undo-tree-id4163 . -4) (undo-tree-id4164 . -4) (undo-tree-id4165 . -4) (undo-tree-id4166 . -4) (undo-tree-id4167 . -4) (undo-tree-id4168 . -4) (undo-tree-id4169 . -4) (undo-tree-id4170 . -4) (undo-tree-id4171 . -4) (undo-tree-id4172 . -4) (undo-tree-id4173 . -4) (undo-tree-id4174 . -4) (undo-tree-id4175 . -4) (undo-tree-id4176 . -4) (undo-tree-id4177 . -4) (undo-tree-id4178 . -4) (undo-tree-id4179 . -4) (undo-tree-id4180 . -4) (undo-tree-id4181 . -4) 1328 (1319 . 1328)) nil (24969 52929 825460 433000) 0 nil]) ((#("." 0 1 (fontified t)) . -1346) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) 1347 (#("round" 0 5 (fontified t face font-lock-builtin-face)) . -1347) (undo-tree-id4294 . -5) (undo-tree-id4295 . -5) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -2) (undo-tree-id4318 . -2) (undo-tree-id4319 . -2) (undo-tree-id4320 . -2) (undo-tree-id4321 . -2) (undo-tree-id4322 . -2) (undo-tree-id4323 . -2) (undo-tree-id4324 . -3) (undo-tree-id4325 . -3) (undo-tree-id4326 . -3) (undo-tree-id4327 . -3) (undo-tree-id4328 . -3) (undo-tree-id4329 . -3) (undo-tree-id4330 . -4) (undo-tree-id4331 . -4) (undo-tree-id4332 . -4) (undo-tree-id4333 . -4) (undo-tree-id4334 . -4) (undo-tree-id4335 . -4) (undo-tree-id4336 . -5) (undo-tree-id4337 . -5) (undo-tree-id4338 . -5) (undo-tree-id4339 . -5) (undo-tree-id4340 . -5) (undo-tree-id4341 . -5) (undo-tree-id4342 . -5) (undo-tree-id4343 . -5) (undo-tree-id4344 . -5) (undo-tree-id4345 . -5) (undo-tree-id4346 . -5) (undo-tree-id4347 . -5) (undo-tree-id4348 . -5) (undo-tree-id4349 . -5) (undo-tree-id4350 . -5) (undo-tree-id4351 . -5) (undo-tree-id4352 . -5) (undo-tree-id4353 . -5) (undo-tree-id4354 . -5) (undo-tree-id4355 . -5) (undo-tree-id4356 . -5) (undo-tree-id4357 . -5) (undo-tree-id4358 . -5) (undo-tree-id4359 . -5) (undo-tree-id4360 . -5) (undo-tree-id4361 . -5) (undo-tree-id4362 . -5) (undo-tree-id4363 . -5) (undo-tree-id4364 . -5) (undo-tree-id4365 . -5) (undo-tree-id4366 . -5) (undo-tree-id4367 . -5) (undo-tree-id4368 . -5) (undo-tree-id4369 . -5) (undo-tree-id4370 . -5) (undo-tree-id4371 . -5) (undo-tree-id4372 . -5) (undo-tree-id4373 . -5) (undo-tree-id4374 . -5) (undo-tree-id4375 . -5) (undo-tree-id4376 . -5) (undo-tree-id4377 . -5) (undo-tree-id4378 . -5) (undo-tree-id4379 . -5) (undo-tree-id4380 . -5) (undo-tree-id4381 . -5) (undo-tree-id4382 . -5) (undo-tree-id4383 . -5) (undo-tree-id4384 . -5) (undo-tree-id4385 . -5) (undo-tree-id4386 . -5) (undo-tree-id4387 . -5) (undo-tree-id4388 . -5) (undo-tree-id4389 . -5) (undo-tree-id4390 . -5) (undo-tree-id4391 . -5) (undo-tree-id4392 . -5) 1352 (#(" " 0 1 (fontified t)) . -1352) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) 1353 (1346 . 1353) (t 24969 52888 941480 379000)) nil (24969 52929 825985 597000) 0 nil]) ((1342 . 1345) (#("y" 0 1 (fontified t)) . -1342) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (#("s" 0 1 (fontified t)) . -1343) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (#("p" 0 1 (fontified t)) . -1344) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) 1345 (1342 . 1345) (#("h" 0 1 (fontified t)) . -1342) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (#("s" 0 1 (fontified t)) . -1343) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) 1344 (1342 . 1344) (#("v" 0 1 (fontified t)) . -1342) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (#("s" 0 1 (fontified t)) . -1343) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (#("p" 0 1 (fontified t)) . -1344) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) 1345 (1340 . 1345) (#("v" 0 1 (fontified t)) . -1340) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (#("." 0 1 (fontified t)) . -1341) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) 1342 (1337 . 1342) (#("v" 0 1 (fontified t)) . -1337) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) 1338 (1333 . 1338) (#("x" 0 1 (fontified t)) . -1333) (undo-tree-id4116 . -1) (#("s" 0 1 (fontified t)) . -1334) (undo-tree-id4117 . -1) (#("p" 0 1 (fontified t)) . -1335) (undo-tree-id4118 . -1) (#(" " 0 1 (fontified t)) . -1336) (undo-tree-id4119 . -1) 1337 (1328 . 1337)) nil (24969 52888 904904 804000) 0 nil]) ((#("7" 0 1 (fontified t face highlight-numbers-number)) . 1328)) nil (24969 52888 904952 463000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1328) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1)) nil (24969 52888 905010 251000) 0 nil]) ((#("7" 0 1 (fontified t face highlight-numbers-number)) . 1328) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (t 24969 52812 554573 457000)) nil (24969 52888 905028 996000) 0 nil]) ((1328 . 1331)) nil (24969 52812 507687 923000) 0 nil]) ((#("xsp" 0 3 (fontified t)) . 1328) (undo-tree-id3804 . 3) (undo-tree-id3805 . -3)) nil (24969 52812 507707 49000) 0 nil]) ((#("." 0 1 (fontified t)) . 1328)) nil (24969 52812 507710 876000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1328)) nil (24969 52812 507713 411000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1328)) nil (24969 52812 507716 46000) 0 nil]) ((#("ysp" 0 3 (fontified t)) . 1328)) nil (24969 52812 507718 581000) 0 nil]) ((#("." 0 1 (fontified t)) . 1328)) nil (24969 52812 507720 895000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1328) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (t 24969 52639 766791 85000)) nil (24969 52812 507733 38000) 0 nil] [nil ([nil ([nil ([nil ([nil nil ((1336 . 1345)) ((#("/self.ysp" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 9 (fontified t)) . 1336) (undo-tree-id3693 . -8) (undo-tree-id3694 . -8) (undo-tree-id3695 . -8) (undo-tree-id3696 . -9) (undo-tree-id3697 . -8) (undo-tree-id3698 . -8) (undo-tree-id3699 . -8) (undo-tree-id3700 . -8) (undo-tree-id3701 . -8) (undo-tree-id3702 . -8) (undo-tree-id3703 . -8) (undo-tree-id3704 . -8) (undo-tree-id3705 . -8) (undo-tree-id3706 . -8) (undo-tree-id3707 . -8) (undo-tree-id3708 . -8) (undo-tree-id3709 . -8) (undo-tree-id3710 . -8) (undo-tree-id3711 . -8) (undo-tree-id3712 . -8) (undo-tree-id3713 . -8) (undo-tree-id3714 . -8) (undo-tree-id3715 . -8) (undo-tree-id3716 . -8) (undo-tree-id3717 . -8) (undo-tree-id3718 . -8) (undo-tree-id3719 . -8) (undo-tree-id3720 . -8) (undo-tree-id3721 . -8) (undo-tree-id3722 . -8) (undo-tree-id3723 . -8) (undo-tree-id3724 . -8) (undo-tree-id3725 . -8) (undo-tree-id3726 . -8) (undo-tree-id3727 . -8) (undo-tree-id3728 . -8) (undo-tree-id3729 . -8) (undo-tree-id3730 . -8) (undo-tree-id3731 . -8) (undo-tree-id3732 . -8) (undo-tree-id3733 . -8) (undo-tree-id3734 . -8) (undo-tree-id3735 . -8) (undo-tree-id3736 . -8) (undo-tree-id3737 . -8) (undo-tree-id3738 . -8) (undo-tree-id3739 . -8) (undo-tree-id3740 . -8) (undo-tree-id3741 . -8) (undo-tree-id3742 . -8) (undo-tree-id3743 . -8) (undo-tree-id3744 . -8) (undo-tree-id3745 . -8) (undo-tree-id3746 . -8) (undo-tree-id3747 . -8) (undo-tree-id3748 . -8) (undo-tree-id3749 . -8) (undo-tree-id3750 . -8) (undo-tree-id3751 . -8) (undo-tree-id3752 . -8) (undo-tree-id3753 . -8) (undo-tree-id3754 . -8) (undo-tree-id3755 . -8) (undo-tree-id3756 . -8) (undo-tree-id3757 . -8) (undo-tree-id3758 . -8) (undo-tree-id3759 . -8) (undo-tree-id3760 . -8) (undo-tree-id3761 . -8) (undo-tree-id3762 . -8) (undo-tree-id3763 . -8) (undo-tree-id3764 . -8) (undo-tree-id3765 . -8) (undo-tree-id3766 . -8) (undo-tree-id3767 . -8) (undo-tree-id3768 . -8) (undo-tree-id3769 . -8) (undo-tree-id3770 . -8) (undo-tree-id3771 . -8) (undo-tree-id3772 . -8) (undo-tree-id3773 . -8) (undo-tree-id3774 . -8) (undo-tree-id3775 . -8) (undo-tree-id3776 . -8) (undo-tree-id3777 . -8) (undo-tree-id3778 . -8) (undo-tree-id3779 . -8) (undo-tree-id3780 . -8) (undo-tree-id3781 . -8) (undo-tree-id3782 . -8) (undo-tree-id3783 . -8) (undo-tree-id3784 . -8) (undo-tree-id3785 . -8) (undo-tree-id3786 . -8) (undo-tree-id3787 . -8) (undo-tree-id3788 . -8) (undo-tree-id3789 . -8) (undo-tree-id3790 . -8) (undo-tree-id3791 . -8) (undo-tree-id3792 . -8) (undo-tree-id3793 . -8) (undo-tree-id3794 . -8) (undo-tree-id3795 . -8) (undo-tree-id3796 . -8) (undo-tree-id3797 . -8) (undo-tree-id3798 . -9) (undo-tree-id3799 . -9) (undo-tree-id3800 . -9) (undo-tree-id3801 . -9) (undo-tree-id3802 . -9) (undo-tree-id3803 . -9) (t 24969 52631 178802 204000)) (24969 52631 133119 386000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1328)) ((1328 . 1329)) (24969 52636 838105 398000) 0 nil]) ((#("ysp" 0 3 (fontified t)) . 1328)) ((1328 . 1331)) (24969 52637 47729 694000) 0 nil]) ((#("." 0 1 (fontified t)) . 1328)) ((1328 . 1329)) (24969 52637 643665 133000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1328) (t 24969 52614 253824 211000)) ((1328 . 1332)) (24969 52638 361741 22000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1324) (t 24969 52538 356924 556000)) nil (24969 52638 929853 161000) 0 nil]) ((#("2" 0 1 (fontified t)) . 1328) (t 24969 52534 37930 353000)) nil (24969 52538 310733 712000) 0 nil]) ((1328 . 1329)) nil (24969 52533 991695 175000) 0 nil]) ((1319 . 1324) (t 24969 52522 249946 226000)) nil (24969 52533 991702 509000) 0 nil]) ((#("2" 0 1 (fontified t)) . 1323) (undo-tree-id3692 . -1) (t 24969 52516 804953 583000)) nil (24969 52522 214562 581000) 0 nil]) ((1341 . 1343) (1320 . 1341) (#("r" 0 1 (fontified t)) . -1320) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (#("c" 0 1 (fontified t)) . -1321) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (#("t" 0 1 (fontified t)) . -1322) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (#("a" 0 1 (fontified t)) . -1323) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (#("n" 0 1 (fontified t)) . -1324) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) 1325 (1319 . 1325)) nil (24969 52516 769091 413000) 0 nil]) ((#(" * 360" 0 3 (fontified t) 3 6 (fontified t face highlight-numbers-number)) . 1319) (t 24969 52462 651027 665000)) nil (24969 52516 769110 939000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1319) (undo-tree-id3029 . -4) (undo-tree-id3030 . -4) (undo-tree-id3031 . -4) (undo-tree-id3032 . -4) (undo-tree-id3033 . -4) (undo-tree-id3034 . -4) (undo-tree-id3035 . -4) (undo-tree-id3036 . -4) (undo-tree-id3037 . -4) (undo-tree-id3038 . -4) (undo-tree-id3039 . -4) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) (undo-tree-id3042 . -4) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) (undo-tree-id3045 . -4) (undo-tree-id3046 . -4) (undo-tree-id3047 . -4) (undo-tree-id3048 . -4) (undo-tree-id3049 . -4) (undo-tree-id3050 . -4) (undo-tree-id3051 . -4) (undo-tree-id3052 . -4) (undo-tree-id3053 . -4) (undo-tree-id3054 . -4) (undo-tree-id3055 . -4) (undo-tree-id3056 . -4) (undo-tree-id3057 . -4) (undo-tree-id3058 . -4) (undo-tree-id3059 . -4) (undo-tree-id3060 . -4) (undo-tree-id3061 . -4) (undo-tree-id3062 . -4) (undo-tree-id3063 . -4) (undo-tree-id3064 . -4) (undo-tree-id3065 . -4) (undo-tree-id3066 . -4) (undo-tree-id3067 . -4) (undo-tree-id3068 . -4) (undo-tree-id3069 . -4) (undo-tree-id3070 . -4) (undo-tree-id3071 . -4) (undo-tree-id3072 . -4) (undo-tree-id3073 . -4) (undo-tree-id3074 . -4) (undo-tree-id3075 . -4) (undo-tree-id3076 . -4) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -4) (undo-tree-id3082 . -4) (undo-tree-id3083 . -4) (undo-tree-id3084 . -4) (undo-tree-id3085 . -4) (undo-tree-id3086 . -4) (undo-tree-id3087 . -4) (undo-tree-id3088 . -4) (undo-tree-id3089 . -4) (undo-tree-id3090 . -4) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -4) (undo-tree-id3135 . -4) (undo-tree-id3136 . -4) (undo-tree-id3137 . -4) (undo-tree-id3138 . -4) (undo-tree-id3139 . -4) (undo-tree-id3140 . -4) (undo-tree-id3141 . -4) (undo-tree-id3142 . -4) (undo-tree-id3143 . -4) (undo-tree-id3144 . -4) (undo-tree-id3145 . -4) (undo-tree-id3146 . -4) (undo-tree-id3147 . -4) (undo-tree-id3148 . -4) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) (undo-tree-id3161 . -4) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -4) (undo-tree-id3165 . -4) 1323) nil (24969 52462 617327 525000) 0 nil]) ((#("." 0 1 (fontified t)) . 1323) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) 1324) nil (24969 52462 617592 531000) 0 nil]) ((#("xsp" 0 3 (fontified t)) . 1324) (undo-tree-id3289 . -3) (undo-tree-id3290 . -3) (undo-tree-id3291 . -3) (undo-tree-id3292 . -3) (undo-tree-id3293 . -3) (undo-tree-id3294 . -3) (undo-tree-id3295 . -3) (undo-tree-id3296 . -3) (undo-tree-id3297 . -3) (undo-tree-id3298 . -3) (undo-tree-id3299 . -3) (undo-tree-id3300 . -3) (undo-tree-id3301 . -3) (undo-tree-id3302 . -3) (undo-tree-id3303 . -3) (undo-tree-id3304 . -3) (undo-tree-id3305 . -3) (undo-tree-id3306 . -3) (undo-tree-id3307 . -3) (undo-tree-id3308 . -3) (undo-tree-id3309 . -3) (undo-tree-id3310 . -3) (undo-tree-id3311 . -3) (undo-tree-id3312 . -3) (undo-tree-id3313 . -3) (undo-tree-id3314 . -3) (undo-tree-id3315 . -3) (undo-tree-id3316 . -3) (undo-tree-id3317 . -3) (undo-tree-id3318 . -3) (undo-tree-id3319 . -3) (undo-tree-id3320 . -3) (undo-tree-id3321 . -3) (undo-tree-id3322 . -3) (undo-tree-id3323 . -3) (undo-tree-id3324 . -3) (undo-tree-id3325 . -3) (undo-tree-id3326 . -3) (undo-tree-id3327 . -3) (undo-tree-id3328 . -3) (undo-tree-id3329 . -3) (undo-tree-id3330 . -3) (undo-tree-id3331 . -3) (undo-tree-id3332 . -3) (undo-tree-id3333 . -3) (undo-tree-id3334 . -3) (undo-tree-id3335 . -3) (undo-tree-id3336 . -3) (undo-tree-id3337 . -3) (undo-tree-id3338 . -3) (undo-tree-id3339 . -3) (undo-tree-id3340 . -3) (undo-tree-id3341 . -3) (undo-tree-id3342 . -3) (undo-tree-id3343 . -3) (undo-tree-id3344 . -3) (undo-tree-id3345 . -3) (undo-tree-id3346 . -3) (undo-tree-id3347 . -3) (undo-tree-id3348 . -3) (undo-tree-id3349 . -3) (undo-tree-id3350 . -3) (undo-tree-id3351 . -3) (undo-tree-id3352 . -3) (undo-tree-id3353 . -3) (undo-tree-id3354 . -3) (undo-tree-id3355 . -3) (undo-tree-id3356 . -3) (undo-tree-id3357 . -3) (undo-tree-id3358 . -3) (undo-tree-id3359 . -3) (undo-tree-id3360 . -3) (undo-tree-id3361 . -3) (undo-tree-id3362 . -3) (undo-tree-id3363 . -3) (undo-tree-id3364 . -3) (undo-tree-id3365 . -3) (undo-tree-id3366 . -3) (undo-tree-id3367 . -3) (undo-tree-id3368 . -3) (undo-tree-id3369 . -3) (undo-tree-id3370 . -3) (undo-tree-id3371 . -3) (undo-tree-id3372 . -3) (undo-tree-id3373 . -3) (undo-tree-id3374 . -3) (undo-tree-id3375 . -3) (undo-tree-id3376 . -3) (undo-tree-id3377 . -3) (undo-tree-id3378 . -3) (undo-tree-id3379 . -3) (undo-tree-id3380 . -3) (undo-tree-id3381 . -3) (undo-tree-id3382 . -3) (undo-tree-id3383 . -3) (undo-tree-id3384 . -3) (undo-tree-id3385 . -3) (undo-tree-id3386 . -3) (undo-tree-id3387 . -3) (undo-tree-id3388 . -3) (undo-tree-id3389 . -3) (undo-tree-id3390 . -3) 1327) nil (24969 52462 617778 49000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1327) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) 1328) nil (24969 52462 617873 848000) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1328) (undo-tree-id3447 . -4) (undo-tree-id3448 . -4) (undo-tree-id3449 . -4) (undo-tree-id3450 . -4) (undo-tree-id3451 . -4) (undo-tree-id3452 . -4) (undo-tree-id3453 . -4) (undo-tree-id3454 . -4) (undo-tree-id3455 . -4) (undo-tree-id3456 . -4) (undo-tree-id3457 . -4) (undo-tree-id3458 . -4) (undo-tree-id3459 . -4) (undo-tree-id3460 . -4) (undo-tree-id3461 . -4) (undo-tree-id3462 . -4) (undo-tree-id3463 . -4) (undo-tree-id3464 . -4) (undo-tree-id3465 . -4) (undo-tree-id3466 . -4) (undo-tree-id3467 . -4) (undo-tree-id3468 . -4) (undo-tree-id3469 . -4) (undo-tree-id3470 . -4) (undo-tree-id3471 . -4) (undo-tree-id3472 . -4) (undo-tree-id3473 . -4) (undo-tree-id3474 . -4) (undo-tree-id3475 . -4) (undo-tree-id3476 . -4) (undo-tree-id3477 . -4) (undo-tree-id3478 . -4) (undo-tree-id3479 . -4) (undo-tree-id3480 . -4) (undo-tree-id3481 . -4) (undo-tree-id3482 . -4) (undo-tree-id3483 . -4) (undo-tree-id3484 . -4) (undo-tree-id3485 . -4) (undo-tree-id3486 . -4) (undo-tree-id3487 . -4) (undo-tree-id3488 . -4) 1332) nil (24969 52462 617944 781000) 0 nil]) ((#("." 0 1 (fontified t)) . 1332) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) 1333) nil (24969 52462 617993 272000) 0 nil]) ((#("ysp" 0 3 (fontified t)) . 1333) (undo-tree-id3517 . -3) (undo-tree-id3518 . -3) (undo-tree-id3519 . -3) (undo-tree-id3520 . -3) (undo-tree-id3521 . -3) (undo-tree-id3522 . -3) (undo-tree-id3523 . -3) (undo-tree-id3524 . -3) (undo-tree-id3525 . -3) (undo-tree-id3526 . -3) (undo-tree-id3527 . -3) (undo-tree-id3528 . -3) (undo-tree-id3529 . -3) (undo-tree-id3530 . -3) 1336 (t 24969 52446 259050 432000)) nil (24969 52462 618019 862000) 0 nil]) ((1339 . 1342) (#("4" 0 1 (fontified t face highlight-numbers-number)) . -1339) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (#("6" 0 1 (fontified t face highlight-numbers-number)) . -1340) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) 1341 (1339 . 1341) (1327 . 1339) (#("/" 0 1 (fontified t)) . -1327) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) 1328 (1319 . 1328)) nil (24969 52446 212605 481000) 0 nil]) ((#("math.sin(self.ysp)/math.cos(self.xsp)" 0 8 (fontified t) 8 9 (fontified t) 9 13 (fontified t face font-lock-keyword-face) 13 18 (fontified t) 18 28 (fontified t) 28 32 (fontified t face font-lock-keyword-face) 32 36 (fontified t) 36 37 (fontified t)) . 1319) (undo-tree-id3003 . -37) (undo-tree-id3004 . 32) (undo-tree-id3005 . -27) (undo-tree-id3006 . -28) (undo-tree-id3007 . -5) (undo-tree-id3008 . -5) (undo-tree-id3009 . -5) (undo-tree-id3010 . -5) (undo-tree-id3011 . -5) (undo-tree-id3012 . -5) (undo-tree-id3013 . -5) (undo-tree-id3014 . -5) (undo-tree-id3015 . -5) (undo-tree-id3016 . -5) (undo-tree-id3017 . -5) (undo-tree-id3018 . -5) (undo-tree-id3019 . -5) (undo-tree-id3020 . -5) (undo-tree-id3021 . -5) (undo-tree-id3022 . -5) (undo-tree-id3023 . -5) (undo-tree-id3024 . -4) (undo-tree-id3025 . -4) (undo-tree-id3026 . -4) (undo-tree-id3027 . -4) (undo-tree-id3028 . -4) (t 24969 52430 66073 89000)) nil (24969 52446 212660 714000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1324) (t 24969 52424 935080 304000)) nil (24969 52430 22280 250000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1344) (t 24969 52414 523094 996000)) nil (24969 52424 890151 976000) 0 nil]) ((1324 . 1325)) nil (24969 52414 492790 623000) 0 nil]) ((1343 . 1344) (t 24969 52410 418100 809000)) nil (24969 52414 492798 27000) 0 nil]) ((1346 . 1347) (#("b" 0 1 (fontified t)) . -1346) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) 1347 (1346 . 1347) (#("(" 0 1 (fontified t)) . 1346) (t 24969 52392 496126 320000)) nil (24969 52410 380320 800000) 0 nil]) ((1338 . 1347)) nil (24969 52392 450575 686000) 0 nil]) ((1336 . 1337)) nil (24969 52392 450582 279000) 0 nil]) ((1324 . 1327)) nil (24969 52392 450585 164000) 0 nil]) ((#("atan" 0 4 (fontified t)) . 1324) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) (undo-tree-id2921 . -4) (undo-tree-id2922 . -4) (undo-tree-id2923 . -4) (undo-tree-id2924 . -4) (undo-tree-id2925 . -4) (undo-tree-id2926 . -4) (undo-tree-id2927 . -4) (undo-tree-id2928 . -4) (undo-tree-id2929 . -4) (undo-tree-id2930 . -4) (undo-tree-id2931 . -4) (undo-tree-id2932 . -4) (undo-tree-id2933 . -4) (undo-tree-id2934 . -4) 1328 (t 24969 52373 475153 641000)) nil (24969 52392 450642 842000) 0 nil]) ((#("4" 0 1 (fontified t)) . 1697)) nil (24969 52373 430362 175000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1697) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (t 24969 52341 124200 717000)) nil (24969 52373 430388 355000) 0 nil]) ((#("-" 0 1 (fontified t)) . 1329) (t 24969 52333 3212 658000)) nil (24969 52341 91019 48000) 0 nil]) ((1329 . 1330) (t 24969 52320 918230 525000)) nil (24969 52332 969800 491000) 0 nil]) ((#("        self.angle = math.atan()
" 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #10#)) 4 5 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) face highlight-indent-guides-odd-face) 5 6 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 6 7 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 7 8 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #11#)) 8 12 (fontified t face font-lock-keyword-face) 12 32 (fontified t) 32 33 (fontified t)) . 1348) (undo-tree-id2894 . -33) (undo-tree-id2895 . 1) (undo-tree-id2896 . -31) (undo-tree-id2897 . -33) (undo-tree-id2898 . -33) (undo-tree-id2899 . -20) (undo-tree-id2900 . -26) (undo-tree-id2901 . -31) 1379) nil (24969 52320 883550 581000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1380) (undo-tree-id2902 . -1) 1381 (1379 . 1381)) nil (24969 52320 883559 989000) 0 nil]) ((#("0)" 0 1 (fontified t face highlight-numbers-number) 1 2 (fontified t)) . 1379) (t 24969 52316 867236 540000)) nil (24969 52320 883563 746000) 0 nil]) ((1374 . 1375) (t 24969 52309 881246 945000)) nil (24969 52316 821511 66000) 0 nil]) ((1378 . 1380)) nil (24969 52309 837069 846000) 0 nil]) ((#("math.pi" 0 4 (fontified t) 4 7 (fontified t)) . 1378) (undo-tree-id2656 . -7) (undo-tree-id2657 . -7) (undo-tree-id2658 . -7) (undo-tree-id2659 . -7) (undo-tree-id2660 . -7) (undo-tree-id2661 . -7) (undo-tree-id2662 . -7) (undo-tree-id2663 . -7) (undo-tree-id2664 . -7) (undo-tree-id2665 . -7) (undo-tree-id2666 . -7) (undo-tree-id2667 . -7) (undo-tree-id2668 . -7) (undo-tree-id2669 . -7) (undo-tree-id2670 . -7) (undo-tree-id2671 . -7) (undo-tree-id2672 . -7) (undo-tree-id2673 . -7) (undo-tree-id2674 . -7) (undo-tree-id2675 . -7) (undo-tree-id2676 . -7) (undo-tree-id2677 . -7) (undo-tree-id2678 . -7) (undo-tree-id2679 . -7) (undo-tree-id2680 . -7) (undo-tree-id2681 . -7) (undo-tree-id2682 . -7) (undo-tree-id2683 . -7) (undo-tree-id2684 . -7) (undo-tree-id2685 . -7) (undo-tree-id2686 . -7) (undo-tree-id2687 . -7) (undo-tree-id2688 . -7) (undo-tree-id2689 . -7) (undo-tree-id2690 . -7) (undo-tree-id2691 . -7) (undo-tree-id2692 . -7) (undo-tree-id2693 . -7) (undo-tree-id2694 . -7) (undo-tree-id2695 . -7) (undo-tree-id2696 . -7) (undo-tree-id2697 . -7) (undo-tree-id2698 . -7) (undo-tree-id2699 . -7) (undo-tree-id2700 . -7) (undo-tree-id2701 . -7) (undo-tree-id2702 . -7) (undo-tree-id2703 . -7) (undo-tree-id2704 . -7) (undo-tree-id2705 . -7) (undo-tree-id2706 . -7) (undo-tree-id2707 . -7) (undo-tree-id2708 . -7) (undo-tree-id2709 . -7) (undo-tree-id2710 . -7) (undo-tree-id2711 . -7) (undo-tree-id2712 . -7) (undo-tree-id2713 . -7) (undo-tree-id2714 . -7) (undo-tree-id2715 . -7) (undo-tree-id2716 . -7) (undo-tree-id2717 . -7) (undo-tree-id2718 . -7) (undo-tree-id2719 . -7) (undo-tree-id2720 . -7) (undo-tree-id2721 . -7) (undo-tree-id2722 . -7) (undo-tree-id2723 . -7) (undo-tree-id2724 . -7) (undo-tree-id2725 . -7) (undo-tree-id2726 . -7) (undo-tree-id2727 . -7) (undo-tree-id2728 . -7) (undo-tree-id2729 . -7) (undo-tree-id2730 . -7) (undo-tree-id2731 . -7) (undo-tree-id2732 . -7) (undo-tree-id2733 . -7) (undo-tree-id2734 . -7) (undo-tree-id2735 . -7) (undo-tree-id2736 . -7) (undo-tree-id2737 . -7) (undo-tree-id2738 . -7) (undo-tree-id2739 . -7) (undo-tree-id2740 . -7) (undo-tree-id2741 . -7) (undo-tree-id2742 . -7) (undo-tree-id2743 . -7) (undo-tree-id2744 . -7) (undo-tree-id2745 . -7) (undo-tree-id2746 . -7) (undo-tree-id2747 . -7) (undo-tree-id2748 . -7) (undo-tree-id2749 . -7) (undo-tree-id2750 . -7) (undo-tree-id2751 . -7) (undo-tree-id2752 . -7) (undo-tree-id2753 . -7) (undo-tree-id2754 . -7) (undo-tree-id2755 . -7) (undo-tree-id2756 . -7) (undo-tree-id2757 . -7) (undo-tree-id2758 . -7) (undo-tree-id2759 . -7) (undo-tree-id2760 . -7) (undo-tree-id2761 . -7) (undo-tree-id2762 . -6) (undo-tree-id2763 . -6) (undo-tree-id2764 . -6) (undo-tree-id2765 . -6) (undo-tree-id2766 . -6) (undo-tree-id2767 . -6) (undo-tree-id2768 . -5) (undo-tree-id2769 . -5) (undo-tree-id2770 . -5) (undo-tree-id2771 . -5) (undo-tree-id2772 . -5) (undo-tree-id2773 . -5) (undo-tree-id2774 . -5) (undo-tree-id2775 . -5) (undo-tree-id2776 . -5) (undo-tree-id2777 . -5) (undo-tree-id2778 . -5) (undo-tree-id2779 . -5) (undo-tree-id2780 . -5) (undo-tree-id2781 . -5) (undo-tree-id2782 . -5) (undo-tree-id2783 . -5) (undo-tree-id2784 . -5) (undo-tree-id2785 . -5) (undo-tree-id2786 . -5) (undo-tree-id2787 . -4) (undo-tree-id2788 . -4) (undo-tree-id2789 . -4) (undo-tree-id2790 . -4) (undo-tree-id2791 . -4) (undo-tree-id2792 . -3) (undo-tree-id2793 . -3) (undo-tree-id2794 . -3) (undo-tree-id2795 . -3) (undo-tree-id2796 . -3) (undo-tree-id2797 . -2) (undo-tree-id2798 . -2) (undo-tree-id2799 . -2) (undo-tree-id2800 . -2) (undo-tree-id2801 . -2) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1)) nil (24969 52309 837442 103000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1385) (undo-tree-id2807 . 1) (undo-tree-id2808 . -1)) nil (24969 52309 837460 97000) 0 nil]) ((#("2" 0 1 (fontified t)) . 1385)) nil (24969 52309 837462 802000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1385) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (t 24969 52297 518265 457000)) nil (24969 52309 837611 581000) 0 nil]) ((1386 . 1387) (1385 . 1386)) nil (24969 52297 482883 520000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1378)) nil (24969 52297 482890 283000) 0 nil]) ((#("2" 0 1 (fontified t face highlight-numbers-number)) . 1378) (undo-tree-id2655 . -1) (t 24969 52286 584281 935000)) nil (24969 52297 482904 610000) 0 nil]) ((1378 . 1380) (t 24969 52277 68296 360000)) nil (24969 52286 548863 528000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1374)) nil (24969 52277 35400 245000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1379) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1)) nil (24969 52277 35426 394000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1379) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (t 24969 52261 601319 975000)) nil (24969 52277 35439 138000) 0 nil]) ((#("2" 0 1 (fontified t)) . 1388)) nil (24969 52261 568163 949000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1388) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1)) nil (24969 52261 568274 95000) 0 nil]) ((#("*" 0 1 (fontified t)) . 1388)) nil (24969 52261 568281 149000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1388) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1)) nil (24969 52261 568315 583000) 0 nil]) ((1379 . 1381)) nil (24969 52261 568319 550000) 0 nil]) ((1386 . 1390) (t 24969 52243 957347 178000)) nil (24969 52261 568322 336000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1387) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) 1388 (1379 . 1388) (#(" " 0 1 (fontified t)) . -1379) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) 1380 (1379 . 1380) (#(" " 0 1 (fontified t)) . -1379) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) 1380 (1379 . 1380) (1378 . 1379) (#(" " 0 1 (fontified t)) . -1378) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) 1379 (1377 . 1379) (1356 . 1377) (1347 . 1356) (t 24969 52231 529366 513000) 1328) nil (24969 52243 919737 153000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1347) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1)) nil (24969 52231 499253 672000) 0 nil]) ((#("+ math.pi" 0 9 (fontified t)) . 1348) (undo-tree-id2510 . -8) (undo-tree-id2511 . -8) (undo-tree-id2512 . -8) (undo-tree-id2513 . -8) (undo-tree-id2514 . -8) (undo-tree-id2515 . -8) (undo-tree-id2516 . -8) (undo-tree-id2517 . -7) (undo-tree-id2518 . -7) (undo-tree-id2519 . -7) (undo-tree-id2520 . -7) (undo-tree-id2521 . -7) (undo-tree-id2522 . -6) (undo-tree-id2523 . -6) (undo-tree-id2524 . -6) (undo-tree-id2525 . -6) (undo-tree-id2526 . -6) (undo-tree-id2527 . -2) (undo-tree-id2528 . -2) (undo-tree-id2529 . -2) (undo-tree-id2530 . -2) (undo-tree-id2531 . -2) (t 24969 52221 105382 845000)) nil (24969 52231 499300 851000) 0 nil]) ((#("(" 0 1 (fontified t)) . 1319) (t 24969 52215 572391 556000)) nil (24969 52221 62036 161000) 0 nil]) ((1356 . 1358) (#("pi) % (" 0 7 (fontified t)) . -1356) (undo-tree-id2455 . -7) (undo-tree-id2456 . -7) (undo-tree-id2457 . -7) (undo-tree-id2458 . -7) (undo-tree-id2459 . -7) (undo-tree-id2460 . -7) (undo-tree-id2461 . -7) (undo-tree-id2462 . -7) (undo-tree-id2463 . -7) (undo-tree-id2464 . -7) (undo-tree-id2465 . -7) (undo-tree-id2466 . -7) (undo-tree-id2467 . -7) (undo-tree-id2468 . -7) (undo-tree-id2469 . -7) 1363 (#("math." 0 5 (fontified t)) . -1363) (undo-tree-id2470 . -5) (undo-tree-id2471 . -5) (undo-tree-id2472 . -5) (undo-tree-id2473 . -5) (undo-tree-id2474 . -5) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) 1368 (#("pi)" 0 2 (fontified t) 2 3 (fontified t)) . -1368) (undo-tree-id2479 . 1) (undo-tree-id2480 . -2) (undo-tree-id2481 . -3) 1371 (t 24969 52206 5406 690000)) nil (24969 52215 527493 930000) 0 nil]) ((#("2" 0 1 (fontified t)) . 1370) (undo-tree-id2449 . 1)) nil (24969 52205 973714 49000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1370)) nil (24969 52205 973719 870000) 0 nil]) ((#("/" 0 1 (fontified t)) . 1370)) nil (24969 52205 973722 665000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1370) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (t 24969 52193 418426 741000)) nil (24969 52205 973734 497000) 0 nil]) ((1372 . 1373)) nil (24969 52193 374178 146000) 0 nil]) ((1370 . 1371)) nil (24969 52193 374184 969000) 0 nil]) ((#("2" 0 1 (fontified t face highlight-numbers-number)) . 1372) (undo-tree-id2440 . 1) (undo-tree-id2441 . -1)) nil (24969 52193 374200 238000) 0 nil]) ((#("* " 0 2 (fontified t)) . 1372) (undo-tree-id2442 . 2)) nil (24969 52193 374205 147000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1372) (undo-tree-id2443 . 1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1)) nil (24969 52193 374377 390000) 0 nil]) ((1370 . 1372) (t 24969 52179 698448 784000)) nil (24969 52193 374381 117000) 0 nil]) ((1374 . 1375)) nil (24969 52179 654255 46000) 0 nil]) ((1362 . 1363)) nil (24969 52179 654261 769000) 0 nil]) ((1319 . 1320)) nil (24969 52179 654264 234000) 0 nil]) ((1357 . 1358)) nil (24969 52179 654266 317000) 0 nil]) ((1358 . 1371) (1357 . 1358) (#("/" 0 1 (fontified t)) . -1357) (undo-tree-id2428 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -1358) (undo-tree-id2429 . -1) (#(" " 0 1 (fontified t)) . -1359) (undo-tree-id2430 . -1) 1360 (1357 . 1360) (#(" " 0 1 (fontified t)) . -1357) (undo-tree-id2431 . -1) 1358 (1356 . 1358) (#("y" 0 1 (fontified t)) . -1356) (undo-tree-id2432 . -1) 1357 (1350 . 1357) (#("p" 0 1 (fontified t)) . -1350) (undo-tree-id2433 . -1) (#("i" 0 1 (fontified t)) . -1351) (undo-tree-id2434 . -1) 1352 (1349 . 1352) (#(" " 0 1 (fontified t)) . -1349) (undo-tree-id2435 . -1) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1350) (undo-tree-id2436 . -1) (#("8" 0 1 (fontified t face highlight-numbers-number)) . -1351) (undo-tree-id2437 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1352) (undo-tree-id2438 . -1) (#(" " 0 1 (fontified t)) . -1353) (undo-tree-id2439 . -1) 1354 (1347 . 1354) (t 24969 52108 421566 624000)) nil (24969 52179 654307 174000) 0 nil]) ((1701 . 1702) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 1701) (undo-tree-id2427 . -1) (t 24969 52105 43572 356000)) nil (24969 52108 378494 87000) 0 nil]) ((1698 . 1699) (#("3" 0 1 (fontified t face highlight-numbers-number)) . 1698) (t 24969 51964 699824 13000)) nil (24969 52104 998496 253000) 0 nil]) ((1324 . 1325) (t 24969 51962 650827 902000)) nil (24969 51964 653090 379000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1324) (t 24969 51915 457919 416000)) nil (24969 51962 608120 572000) 0 nil]) ((1338 . 1346)) nil (24969 51915 414387 768000) 0 nil]) ((1329 . 1337)) nil (24969 51915 414394 531000) 0 nil]) ((#("1" 0 1 (fontified t face highlight-numbers-number)) . 1330) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1)) nil (24969 51915 414428 284000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 1329) (undo-tree-id2424 . -1) 1330) nil (24969 51915 414434 485000) 0 nil]) ((#("." 0 1 (fontified t)) . 1330) (undo-tree-id2425 . -1) 1331) nil (24969 51915 414439 264000) 0 nil]) ((#("5" 0 1 (fontified t face highlight-numbers-number)) . 1331) (undo-tree-id2426 . -1) 1332 (t 24969 51798 900163 185000)) nil (24969 51915 414444 294000) 0 nil]) ((1332 . 1335) (#("," 0 1 (fontified t)) . -1332) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#(" " 0 1 (fontified t)) . -1333) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) 1334 (1329 . 1334)) nil (24969 51798 857493 122000) 0 nil]) ((#("self.ysp/self.xsp)" 0 4 (fontified t face font-lock-keyword-face) 4 9 (fontified t) 9 13 (fontified t face font-lock-keyword-face) 13 18 (fontified t)) . 1329) (t 24969 51498 277812 711000)) nil (24969 51798 857500 796000) 0 nil]) ((1324 . 1325) (t 24969 51458 502846 507000)) nil (24969 51498 246558 363000) 0 nil]) ((1324 . 1327)) nil (24969 51458 471398 75000) 0 nil]) ((#("cotan" 0 5 (fontified t)) . 1324) (undo-tree-id2280 . -5) (undo-tree-id2281 . -5) (undo-tree-id2282 . -5) (undo-tree-id2283 . -5) (undo-tree-id2284 . -5) (undo-tree-id2285 . -5) (undo-tree-id2286 . -5) (undo-tree-id2287 . -5) (undo-tree-id2288 . -5) (undo-tree-id2289 . -5) (undo-tree-id2290 . -5) (undo-tree-id2291 . -5) (undo-tree-id2292 . -5) (undo-tree-id2293 . -5) (undo-tree-id2294 . -5) (undo-tree-id2295 . -5) (undo-tree-id2296 . -5) (undo-tree-id2297 . -5) (undo-tree-id2298 . -5) (undo-tree-id2299 . -5) (undo-tree-id2300 . -5) (undo-tree-id2301 . -5) (undo-tree-id2302 . -5) (undo-tree-id2303 . -5) (undo-tree-id2304 . -5) (undo-tree-id2305 . -5) (undo-tree-id2306 . -5) (undo-tree-id2307 . -5) (undo-tree-id2308 . -5) (undo-tree-id2309 . -5) (undo-tree-id2310 . -5) (undo-tree-id2311 . -5) (undo-tree-id2312 . -5) (undo-tree-id2313 . -5) (undo-tree-id2314 . -5) (undo-tree-id2315 . -5) (undo-tree-id2316 . -5) (undo-tree-id2317 . -5) (undo-tree-id2318 . -5) (undo-tree-id2319 . -5) (undo-tree-id2320 . -5) (undo-tree-id2321 . -5) (undo-tree-id2322 . -5) (undo-tree-id2323 . -5) (undo-tree-id2324 . -5) (undo-tree-id2325 . -5) (undo-tree-id2326 . -5) (undo-tree-id2327 . -5) (undo-tree-id2328 . -5) (undo-tree-id2329 . -5) (undo-tree-id2330 . -5) (undo-tree-id2331 . -5) (undo-tree-id2332 . -5) (undo-tree-id2333 . -5) (undo-tree-id2334 . -5) (undo-tree-id2335 . -5) (undo-tree-id2336 . -5) (undo-tree-id2337 . -5) (undo-tree-id2338 . -5) (undo-tree-id2339 . -5) (undo-tree-id2340 . -5) (undo-tree-id2341 . -5) (undo-tree-id2342 . -5) (undo-tree-id2343 . -5) (undo-tree-id2344 . -5) (undo-tree-id2345 . -5) (undo-tree-id2346 . -5) (undo-tree-id2347 . -5) (undo-tree-id2348 . -5) (undo-tree-id2349 . -5) (undo-tree-id2350 . -5) (undo-tree-id2351 . -5) (undo-tree-id2352 . -5) (undo-tree-id2353 . -5) (undo-tree-id2354 . -5) (undo-tree-id2355 . -5) (undo-tree-id2356 . -5) (undo-tree-id2357 . -5) (undo-tree-id2358 . -5) (undo-tree-id2359 . -5) (undo-tree-id2360 . -5) (undo-tree-id2361 . -5) (undo-tree-id2362 . -5) (undo-tree-id2363 . -5) (undo-tree-id2364 . -5) (undo-tree-id2365 . -5) (undo-tree-id2366 . -5) (undo-tree-id2367 . -5) (undo-tree-id2368 . -5) (undo-tree-id2369 . -5) (undo-tree-id2370 . -5) (undo-tree-id2371 . -5) (undo-tree-id2372 . -5) (undo-tree-id2373 . -5) (undo-tree-id2374 . -5) (undo-tree-id2375 . -5) (undo-tree-id2376 . -5) (undo-tree-id2377 . -5) (undo-tree-id2378 . -5) (undo-tree-id2379 . -5) (undo-tree-id2380 . -5) (undo-tree-id2381 . -5) (undo-tree-id2382 . -5) (undo-tree-id2383 . -5) (undo-tree-id2384 . -5) (undo-tree-id2385 . -5) (undo-tree-id2386 . -5) (undo-tree-id2387 . -5) (undo-tree-id2388 . -5) (undo-tree-id2389 . -5) (undo-tree-id2390 . -5) (undo-tree-id2391 . -5) (undo-tree-id2392 . -5) (undo-tree-id2393 . -5) (undo-tree-id2394 . -5) (undo-tree-id2395 . -5) (undo-tree-id2396 . -5) (undo-tree-id2397 . -5) (undo-tree-id2398 . -5) (undo-tree-id2399 . -5) (undo-tree-id2400 . -5) (undo-tree-id2401 . -5) (undo-tree-id2402 . -5) (undo-tree-id2403 . -5) (undo-tree-id2404 . -5) 1329 (t 24969 51449 6854 576000)) nil (24969 51458 471632 614000) 0 nil] [nil nil ((1329 . 1330) (#("(" 0 1 (fontified t)) . 1329) (undo-tree-id2279 . 1) (t 24969 51449 6854 576000)) ((1329 . 1330) (#("b" 0 1 (fontified t)) . 1329)) (24969 51451 688268 236000) 0 nil]) ((1327 . 1329) (t 24969 51441 742860 750000)) nil (24969 51451 688776 879000) 0 nil]) ((1324 . 1327)) nil (24969 51441 711772 247000) 0 nil]) ((#("tan" 0 3 (fontified t)) . 1324) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -2) (undo-tree-id2262 . -2) (undo-tree-id2263 . -2) (undo-tree-id2264 . -2) (undo-tree-id2265 . -2) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -3) (undo-tree-id2276 . -3) (undo-tree-id2277 . -3) (undo-tree-id2278 . -3) 1327 (t 24969 49731 301348 232000)) nil (24969 51441 711841 356000) 0 nil]) ((1385 . 1386)) nil (24969 49731 257391 93000) 0 nil]) ((1361 . 1374) (t 24969 49712 500365 656000)) nil (24969 49731 257398 657000) 0 nil]) ((1371 . 1372) (#("O" 0 1 (fontified t)) . 1371)) nil (24969 49712 457630 362000) 0 nil]) ((1360 . 1372)) nil (24969 49712 457637 926000) 0 nil]) ((1319 . 1324)) nil (24969 49712 457640 882000) 0 nil]) ((1350 . 1355) (#("console." 0 8 (fontified t)) . -1350) (undo-tree-id2246 . -8) 1358 (#("l" 0 1 (fontified t)) . -1358) (undo-tree-id2247 . -1) 1359 (1350 . 1359) (1341 . 1350) (t 24969 49700 869376 463000) 1340) nil (24969 49712 457658 965000) 0 nil]) ((1322 . 1341) (#(" " 0 1 (fontified t)) . -1322) (undo-tree-id2221 . -1) 1323 (1319 . 1323) (1306 . 1319) (1297 . 1306) 1296) nil (24969 49700 827012 141000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1243) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) 1244 (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1244) (undo-tree-id2226 . -4) (undo-tree-id2227 . -4) 1248 (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1248) (undo-tree-id2228 . -4) (undo-tree-id2229 . -4) 1252 (#("i" 0 1 (fontified t)) . -1252) (undo-tree-id2230 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1253) (undo-tree-id2231 . -1) (#(" " 0 1 (fontified t)) . -1254) (undo-tree-id2232 . -1) 1255 (1252 . 1255) (#("    " 0 4 (fontified t)) . -1252) (undo-tree-id2233 . -4) 1256 (1244 . 1256)) nil (24969 49700 827044 301000) 0 nil]) ((1290 . 1295)) nil (24969 49700 827051 134000) 0 nil]) ((1263 . 1268)) nil (24969 49700 827053 478000) 0 nil]) ((#("            " 0 12 (fontified t)) . -1244) (undo-tree-id2234 . -12) 1256 (1243 . 1256) 1211) nil (24969 49700 827058 728000) 0 nil]) ((#("        xsp = math.cos(self.angle) * self.speed
        ysp = math.sin(self.angle) * self.speed
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 23 (fontified t) 23 24 (fontified t face font-lock-keyword-face) 24 27 (fontified t face font-lock-keyword-face) 27 36 (fontified t) 36 37 (fontified t) 37 41 (fontified t face font-lock-keyword-face) 41 44 (fontified t) 44 48 (fontified t) 48 49 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 49 50 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 50 51 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 51 52 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 52 53 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 53 54 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 54 55 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 55 56 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 56 58 (fontified t face font-lock-variable-name-face) 58 59 (fontified t face font-lock-variable-name-face) 59 71 (fontified t) 71 72 (fontified t face font-lock-keyword-face) 72 75 (fontified t face font-lock-keyword-face) 75 85 (fontified t) 85 89 (fontified t face font-lock-keyword-face) 89 96 (fontified t)) . 1244) (undo-tree-id2235 . -48) (undo-tree-id2236 . -94) (undo-tree-id2237 . -94) (undo-tree-id2238 . -46) (undo-tree-id2239 . 1) (undo-tree-id2240 . -46) (undo-tree-id2241 . -46) (undo-tree-id2242 . -46) (undo-tree-id2243 . -94) 1290) nil (24969 49700 827076 902000) 0 nil]) ((1338 . 1339) (#("k" 0 1 (fontified t)) . -1338) (undo-tree-id2244 . -1) (#("=" 0 1 (fontified t)) . -1339) (undo-tree-id2245 . -1) 1340 (1338 . 1340) (#("d" 0 1 (fontified t)) . 1338) (t 24969 49647 962425 905000)) nil (24969 49700 827085 678000) 0 nil]) ((1681 . 1682) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1681) (t 24969 49625 929446 640000)) nil (24969 49647 919743 271000) 0 nil]) ((#("0" 0 1 (fontified t face highlight-numbers-number)) . 1698) (undo-tree-id2220 . -1) (t 24969 49616 209455 817000)) nil (24969 49625 893120 30000) 0 nil]) ((1681 . 1682) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 1681)) nil (24969 49616 165648 231000) 0 nil]) ((1488 . 1499)) nil (24969 49616 165655 856000) 0 nil]) ((#("10" 0 2 (fontified t face highlight-numbers-number)) . 1488)) nil (24969 49616 165658 711000) 0 nil]) ((1476 . 1486)) nil (24969 49616 165661 406000) 0 nil]) ((#("10" 0 2 (fontified t face highlight-numbers-number)) . 1476) (undo-tree-id2196 . -2) (undo-tree-id2197 . -2) (undo-tree-id2198 . -2) (undo-tree-id2199 . -2) (undo-tree-id2200 . -2) (undo-tree-id2201 . -2) (undo-tree-id2202 . -2) (undo-tree-id2203 . -2) (undo-tree-id2204 . -2) (undo-tree-id2205 . -2) (undo-tree-id2206 . -2) (undo-tree-id2207 . -2) (undo-tree-id2208 . -2) (undo-tree-id2209 . -2) (undo-tree-id2210 . -2) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -2) (undo-tree-id2214 . -2) (undo-tree-id2215 . -2) (undo-tree-id2216 . -2) (undo-tree-id2217 . -2) (undo-tree-id2218 . -2) (undo-tree-id2219 . -2) 1478 (t 24969 49588 393482 179000)) nil (24969 49616 165713 764000) 0 nil]) ((1124 . 1133) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1124) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) 1125 (1113 . 1125) (1100 . 1113) 1025) nil (24969 49588 352228 658000) 0 nil]) ((#("            self.angle += 2*(math.pi/2 - self.angle)
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 9 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #48=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #11#)) fontified t face highlight-indent-guides-even-face) 9 10 (highlight-indent-guides-prop (2 nil nil 1 nil #48#) fontified t) 10 11 (highlight-indent-guides-prop (2 nil nil 1 nil #48#) fontified t) 11 12 (highlight-indent-guides-prop (2 nil nil 1 nil #48#) fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 19 (fontified t) 19 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t face highlight-numbers-number) 27 37 (fontified t) 37 38 (fontified t face highlight-numbers-number) 38 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 53 (fontified t)) . 1101) (undo-tree-id1989 . -53) (undo-tree-id1990 . -53) (undo-tree-id1991 . -53) (undo-tree-id1992 . -53) (undo-tree-id1993 . -53) (undo-tree-id1994 . -53) (undo-tree-id1995 . -53) (undo-tree-id1996 . -53) (undo-tree-id1997 . -53) (undo-tree-id1998 . -53) (undo-tree-id1999 . -53) (undo-tree-id2000 . -53) (undo-tree-id2001 . -53) (undo-tree-id2002 . -53) (undo-tree-id2003 . -52) (undo-tree-id2004 . -31) (undo-tree-id2005 . -31) (undo-tree-id2006 . -31) (undo-tree-id2007 . -31) (undo-tree-id2008 . -31) (undo-tree-id2009 . -31) (undo-tree-id2010 . -31) (undo-tree-id2011 . -31) (undo-tree-id2012 . -31) (undo-tree-id2013 . -31) (undo-tree-id2014 . -31) (undo-tree-id2015 . -31) (undo-tree-id2016 . -1) (undo-tree-id2017 . -4) (undo-tree-id2018 . -5) (undo-tree-id2019 . -8) (undo-tree-id2020 . -9) (undo-tree-id2021 . -52) (undo-tree-id2022 . -1) (undo-tree-id2023 . -4) (undo-tree-id2024 . -5) (undo-tree-id2025 . -8) (undo-tree-id2026 . -9)) nil (24969 49588 352299 541000) 0 nil]) ((#("            self.angle += 2*(math.pi/2 - self.angle)
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 9 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #49=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #11#)) fontified t face highlight-indent-guides-even-face) 9 10 (highlight-indent-guides-prop (2 nil nil 1 nil #49#) fontified t) 10 11 (highlight-indent-guides-prop (2 nil nil 1 nil #49#) fontified t) 11 12 (highlight-indent-guides-prop (2 nil nil 1 nil #49#) fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 26 (fontified t) 26 27 (fontified t face highlight-numbers-number) 27 37 (fontified t) 37 38 (fontified t face highlight-numbers-number) 38 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 53 (fontified t)) . 1101) (undo-tree-id2027 . -53) (undo-tree-id2028 . -52) (undo-tree-id2029 . -53) (undo-tree-id2030 . -52) (undo-tree-id2031 . -53) (undo-tree-id2032 . -52) (undo-tree-id2033 . -53) (undo-tree-id2034 . -52) (undo-tree-id2035 . -53) (undo-tree-id2036 . -52) (undo-tree-id2037 . -53) (undo-tree-id2038 . -52) (undo-tree-id2039 . -53) (undo-tree-id2040 . -52) (undo-tree-id2041 . -53) (undo-tree-id2042 . -52) (undo-tree-id2043 . -53) (undo-tree-id2044 . -52) (undo-tree-id2045 . -53) (undo-tree-id2046 . -52) (undo-tree-id2047 . -53) (undo-tree-id2048 . -52) (undo-tree-id2049 . -53) (undo-tree-id2050 . -53) (undo-tree-id2051 . -53) (undo-tree-id2052 . -53) (undo-tree-id2053 . -31) (undo-tree-id2054 . -31) (undo-tree-id2055 . -31) (undo-tree-id2056 . -31) (undo-tree-id2057 . -31) (undo-tree-id2058 . -31) (undo-tree-id2059 . -31) (undo-tree-id2060 . -31) (undo-tree-id2061 . -31) (undo-tree-id2062 . -31) (undo-tree-id2063 . -31) (undo-tree-id2064 . -31) (undo-tree-id2065 . -31) (undo-tree-id2066 . -31) (undo-tree-id2067 . -31) (undo-tree-id2068 . -31) (undo-tree-id2069 . -31) (undo-tree-id2070 . -31) (undo-tree-id2071 . -31) (undo-tree-id2072 . -31) (undo-tree-id2073 . -31) (undo-tree-id2074 . -31) (undo-tree-id2075 . -31) (undo-tree-id2076 . -31) (undo-tree-id2077 . -31) (undo-tree-id2078 . -31) (undo-tree-id2079 . -31) (undo-tree-id2080 . -31) (undo-tree-id2081 . -31) (undo-tree-id2082 . -31) (undo-tree-id2083 . -31) (undo-tree-id2084 . -31) (undo-tree-id2085 . -31) (undo-tree-id2086 . -31) (undo-tree-id2087 . -31) (undo-tree-id2088 . -31) (undo-tree-id2089 . -31) (undo-tree-id2090 . -31) (undo-tree-id2091 . -31) 1132) nil (24969 49588 352406 852000) 0 nil]) ((1307 . 1316) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1307) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) 1308 (1296 . 1308) (1283 . 1296) 1207) nil (24969 49588 352709 399000) 0 nil]) ((#("            self.angle += 2*(2*math.pi - self.angle)
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 9 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #50=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #11#)) fontified t face highlight-indent-guides-even-face) 9 10 (highlight-indent-guides-prop (2 nil nil 1 nil #50#) fontified t) 10 11 (highlight-indent-guides-prop (2 nil nil 1 nil #50#) fontified t) 11 12 (highlight-indent-guides-prop (2 nil nil 1 nil #50#) fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t face font-lock-keyword-face) 16 26 (fontified t) 26 27 (fontified t face highlight-numbers-number) 27 29 (fontified t) 29 30 (fontified t face highlight-numbers-number) 30 36 (fontified t) 36 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 53 (fontified t)) . 1284) (undo-tree-id2113 . -53) (undo-tree-id2114 . -53) (undo-tree-id2115 . -53) (undo-tree-id2116 . -53) (undo-tree-id2117 . -53) (undo-tree-id2118 . -53) (undo-tree-id2119 . -53) (undo-tree-id2120 . -53) (undo-tree-id2121 . -53) (undo-tree-id2122 . -53) (undo-tree-id2123 . -53) (undo-tree-id2124 . -53) (undo-tree-id2125 . -52) (undo-tree-id2126 . -30) (undo-tree-id2127 . -30) (undo-tree-id2128 . -53) (undo-tree-id2129 . -53) (undo-tree-id2130 . -52) (undo-tree-id2131 . -1) (undo-tree-id2132 . -4) (undo-tree-id2133 . -5) (undo-tree-id2134 . -8) (undo-tree-id2135 . -9) (undo-tree-id2136 . -53) (undo-tree-id2137 . -52) (undo-tree-id2138 . -1) (undo-tree-id2139 . -4) (undo-tree-id2140 . -5) (undo-tree-id2141 . -8) (undo-tree-id2142 . -9) (undo-tree-id2143 . -53) (undo-tree-id2144 . -1) (undo-tree-id2145 . -4) (undo-tree-id2146 . -5) (undo-tree-id2147 . -8) (undo-tree-id2148 . -9) (undo-tree-id2149 . -52) (undo-tree-id2150 . -1) (undo-tree-id2151 . -4) (undo-tree-id2152 . -5) (undo-tree-id2153 . -8) (undo-tree-id2154 . -9) (undo-tree-id2155 . -53) (undo-tree-id2156 . -53)) nil (24969 49588 352784 400000) 0 nil]) ((#("            self.angle += 2*(2*math.pi - self.angle)
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 9 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #51=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #11#)) fontified t face highlight-indent-guides-even-face) 9 10 (highlight-indent-guides-prop (2 nil nil 1 nil #51#) fontified t) 10 11 (highlight-indent-guides-prop (2 nil nil 1 nil #51#) fontified t) 11 12 (highlight-indent-guides-prop (2 nil nil 1 nil #51#) fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 23 (fontified t) 23 26 (fontified t) 26 27 (fontified t face highlight-numbers-number) 27 29 (fontified t) 29 30 (fontified t face highlight-numbers-number) 30 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 52 (fontified t) 52 53 (fontified t)) . 1284) (undo-tree-id2157 . -53) (undo-tree-id2158 . -52) (undo-tree-id2159 . -53) (undo-tree-id2160 . -52) (undo-tree-id2161 . -53) (undo-tree-id2162 . -52) (undo-tree-id2163 . -53) (undo-tree-id2164 . -52) (undo-tree-id2165 . -53) (undo-tree-id2166 . -52) (undo-tree-id2167 . -53) (undo-tree-id2168 . -52) (undo-tree-id2169 . -53) (undo-tree-id2170 . -52) (undo-tree-id2171 . -53) (undo-tree-id2172 . -52) (undo-tree-id2173 . -53) (undo-tree-id2174 . -52) (undo-tree-id2175 . -53) (undo-tree-id2176 . -52) (undo-tree-id2177 . -53) (undo-tree-id2178 . -52) (undo-tree-id2179 . -53) (undo-tree-id2180 . -53) (undo-tree-id2181 . -53) (undo-tree-id2182 . -53) (undo-tree-id2183 . -52) (undo-tree-id2184 . -1) (undo-tree-id2185 . -4) (undo-tree-id2186 . -5) (undo-tree-id2187 . -8) (undo-tree-id2188 . -9) (undo-tree-id2189 . -53) (undo-tree-id2190 . -1) (undo-tree-id2191 . -4) (undo-tree-id2192 . -5) (undo-tree-id2193 . -8) (undo-tree-id2194 . -9) (undo-tree-id2195 . -53) (t 24969 49570 157499 546000)) nil (24969 49588 352861 975000) 0 nil]) ((#("        elif 
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 14 (fontified t)) . 1154) (undo-tree-id1892 . -14) (undo-tree-id1893 . -14) (undo-tree-id1894 . -14) (undo-tree-id1895 . -14) (undo-tree-id1896 . -14) (undo-tree-id1897 . -14) (undo-tree-id1898 . -14) (undo-tree-id1899 . -14) (undo-tree-id1900 . -14) (undo-tree-id1901 . -14) (undo-tree-id1902 . -14) (undo-tree-id1903 . -14) (undo-tree-id1904 . -14) (undo-tree-id1905 . -14) (undo-tree-id1906 . -13) (undo-tree-id1907 . -14) (undo-tree-id1908 . -12) (undo-tree-id1909 . -12) (undo-tree-id1910 . -12) (undo-tree-id1911 . -12) (undo-tree-id1912 . -12) (undo-tree-id1913 . -12) (undo-tree-id1914 . -12) (undo-tree-id1915 . -13) (undo-tree-id1916 . -12) (undo-tree-id1917 . -13) (undo-tree-id1918 . -12) (undo-tree-id1919 . -12) (undo-tree-id1920 . -12) (undo-tree-id1921 . -12) (undo-tree-id1922 . -12) (undo-tree-id1923 . -12) (undo-tree-id1924 . -12) (undo-tree-id1925 . -12) (undo-tree-id1926 . -12) (undo-tree-id1927 . -12) (undo-tree-id1928 . -12) (undo-tree-id1929 . -12) (undo-tree-id1930 . -12) (undo-tree-id1931 . -12) (undo-tree-id1932 . -12) (undo-tree-id1933 . -12) (undo-tree-id1934 . -12) (undo-tree-id1935 . -12) (undo-tree-id1936 . -12) (undo-tree-id1937 . -12) (undo-tree-id1938 . -12) (undo-tree-id1939 . -12) (undo-tree-id1940 . -12) (undo-tree-id1941 . -12) (undo-tree-id1942 . -12) (undo-tree-id1943 . -12) (undo-tree-id1944 . -12) (undo-tree-id1945 . -12) (undo-tree-id1946 . -12) (undo-tree-id1947 . -12) (undo-tree-id1948 . -12) (undo-tree-id1949 . -12) (undo-tree-id1950 . -12) (undo-tree-id1951 . -12) (undo-tree-id1952 . -12) (undo-tree-id1953 . -12) (undo-tree-id1954 . -12) (undo-tree-id1955 . -12) (undo-tree-id1956 . -12) (undo-tree-id1957 . -12) (undo-tree-id1958 . -12) (undo-tree-id1959 . -12) (undo-tree-id1960 . -12) 1166 (t 24969 49567 750501 843000)) nil (24969 49570 116850 693000) 0 nil]) ((1073 . 1077)) nil (24969 49567 710074 546000) 0 nil]) ((#(":" 0 1 (fontified t rear-nonsticky t)) . 1095)) nil (24969 49567 710082 60000) 0 nil]) ((nil rear-nonsticky nil 1095 . 1096) (nil fontified nil 1073 . 1096) (1073 . 1096) 1072) nil (24969 49567 710086 969000) 0 nil]) ((#("self.x + self.xsp <= 0:" 0 4 (fontified t face font-lock-keyword-face) 4 9 (fontified t) 9 13 (fontified t face font-lock-keyword-face) 13 14 (rear-nonsticky t fontified t) 14 21 (fontified t) 21 22 (fontified t face highlight-numbers-number) 22 23 (fontified t)) . 1141) (undo-tree-id1890 . -9) (undo-tree-id1891 . -22)) nil (24969 49567 710101 687000) 0 nil]) ((#(":" 0 1 (fontified t)) . 1294) (t 24969 49539 424528 972000)) nil (24969 49567 710105 3000) 0 nil]) ((1267 . 1271)) nil (24969 49539 384488 709000) 0 nil]) ((nil rear-nonsticky nil 1289 . 1290) (nil fontified nil 1267 . 1290) (1267 . 1290) 1266) nil (24969 49539 384496 934000) 0 nil]) ((#("self.y + self.ysp <= 0:" 0 4 (fontified t face font-lock-keyword-face) 4 9 (fontified t) 9 13 (fontified t face font-lock-keyword-face) 13 14 (rear-nonsticky t fontified t) 14 21 (fontified t) 21 22 (fontified t face highlight-numbers-number) 22 23 (fontified t)) . 1321) (undo-tree-id1811 . -9) (undo-tree-id1812 . -9) (undo-tree-id1813 . -13) (undo-tree-id1814 . 23) (undo-tree-id1815 . -9) (undo-tree-id1816 . -4)) nil (24969 49539 384519 336000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1321) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) 1322) nil (24969 49539 384621 137000) 0 nil]) ((#("        elif " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #11#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #11#) fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t)) . 1322) (undo-tree-id1866 . -13) (undo-tree-id1867 . -8) (undo-tree-id1868 . -8) (undo-tree-id1869 . -8) (undo-tree-id1870 . -8) (undo-tree-id1871 . -8) (undo-tree-id1872 . -13) (undo-tree-id1873 . -13) (undo-tree-id1874 . -13) (undo-tree-id1875 . -13) (undo-tree-id1876 . -13) (undo-tree-id1877 . -13) (undo-tree-id1878 . -13) (undo-tree-id1879 . -13) (undo-tree-id1880 . -13) (undo-tree-id1881 . -13) (undo-tree-id1882 . -13) (undo-tree-id1883 . -13) (undo-tree-id1884 . -13) (undo-tree-id1885 . -13) (undo-tree-id1886 . -13) (undo-tree-id1887 . -13) (undo-tree-id1888 . -13) (undo-tree-id1889 . -13) 1335 (t 24969 49520 105547 584000)) nil (24969 49539 384664 568000) 0 nil]) ((nil rear-nonsticky nil 1348 . 1349) (nil fontified nil 1344 . 1349) (1344 . 1349)) nil (24969 49520 66429 685000) 0 nil]) ((nil rear-nonsticky nil 1154 . 1155) (nil fontified nil 1150 . 1155) (1150 . 1155) 1149) nil (24969 49520 66438 60000) 0 nil]) ((nil rear-nonsticky nil 1062 . 1063) (nil fontified nil 1058 . 1063) (1058 . 1063) 1057) nil (24969 49520 66442 489000) 0 nil]) ((1242 . 1247)) nil (24969 49520 66445 174000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1024) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) 1025 (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1025) (undo-tree-id1805 . -4) 1029 (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1029) (undo-tree-id1806 . -4) 1033 (#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -1033) (undo-tree-id1807 . -5) 1038 (1033 . 1038) (#("if " 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t)) . -1033) (undo-tree-id1808 . -3) 1036 (#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -1036) (undo-tree-id1809 . -5) 1041 (#("ysl" 0 3 (fontified t)) . -1041) (undo-tree-id1810 . -3) 1044 (1033 . 1044) (1024 . 1033) (t 24969 49498 801562 915000) 983) nil (24969 49520 66479 879000) 0 nil]) ((905 . 910)) nil (24969 49498 762307 894000) 0 nil]) (909) nil (24969 49498 762315 27000) 0 nil]) ((852 . 857)) nil (24969 49498 762317 672000) 0 nil]) ((nil rear-nonsticky nil 851 . 852) (#("
" 0 1 (fontified nil)) . -939) (843 . 940) 817) nil (24969 49498 762321 660000) 0 nil]) ((#("        xsp = math.cos(self.angle) * self.speed
        ysp = math.sin(self.angle) * self.speed
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #52=((#<marker at 1260 in main.py> . #<marker at 2464 in main.py>) . #10#)) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #52#) fontified t) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil #52#) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil #52#) fontified t) 8 11 (fontified t face font-lock-variable-name-face) 11 21 (fontified t) 21 23 (fontified t) 23 27 (fontified t face font-lock-keyword-face) 27 37 (fontified t) 37 41 (fontified t face font-lock-keyword-face) 41 48 (fontified t) 48 49 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t face highlight-indent-guides-even-face) 49 50 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 50 51 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 51 52 (highlight-indent-guides-prop (0 nil nil 1 nil #10#) fontified t) 52 53 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #52#) fontified t face highlight-indent-guides-odd-face) 53 54 (highlight-indent-guides-prop (1 nil nil 1 nil #52#) fontified t) 54 55 (highlight-indent-guides-prop (1 nil nil 1 nil #52#) fontified t) 55 56 (highlight-indent-guides-prop (1 nil nil 1 nil #52#) fontified t) 56 58 (fontified t face font-lock-variable-name-face) 58 59 (fontified t face font-lock-variable-name-face) 59 60 (fontified t) 60 71 (fontified t) 71 75 (fontified t face font-lock-keyword-face) 75 85 (fontified t) 85 89 (fontified t face font-lock-keyword-face) 89 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t)) . 919) (undo-tree-id1705 . -48) (undo-tree-id1706 . -60) (undo-tree-id1707 . -60) (undo-tree-id1708 . -12) (undo-tree-id1709 . 1) (undo-tree-id1710 . -96) (undo-tree-id1711 . -96) (undo-tree-id1712 . -48) (undo-tree-id1713 . -48) (undo-tree-id1714 . -12) (undo-tree-id1715 . -48) (undo-tree-id1716 . -49) (undo-tree-id1717 . -52) (undo-tree-id1718 . -53) (undo-tree-id1719 . -48) (undo-tree-id1720 . -49) (undo-tree-id1721 . -52) (undo-tree-id1722 . -53) (undo-tree-id1723 . -60) (undo-tree-id1724 . -60) (undo-tree-id1725 . -60) (undo-tree-id1726 . -60) (undo-tree-id1727 . -60) (undo-tree-id1728 . -60) (undo-tree-id1729 . -60) (undo-tree-id1730 . -60) (undo-tree-id1731 . -60) (undo-tree-id1732 . -60) (undo-tree-id1733 . -60) (undo-tree-id1734 . -60) (undo-tree-id1735 . -60) (undo-tree-id1736 . -60) (undo-tree-id1737 . -96) (undo-tree-id1738 . -96) (undo-tree-id1739 . -60) (undo-tree-id1740 . -60) (undo-tree-id1741 . -60) (undo-tree-id1742 . -60) (undo-tree-id1743 . -60) (undo-tree-id1744 . -60) (undo-tree-id1745 . -60) (undo-tree-id1746 . -60) (undo-tree-id1747 . -60) (undo-tree-id1748 . -60) (undo-tree-id1749 . -60) (undo-tree-id1750 . -60) (undo-tree-id1751 . -60) (undo-tree-id1752 . -60) (undo-tree-id1753 . -60) (undo-tree-id1754 . -96) (undo-tree-id1755 . -12) (undo-tree-id1756 . -60) (undo-tree-id1757 . -60) (undo-tree-id1758 . -60) (undo-tree-id1759 . -60) (undo-tree-id1760 . -60) (undo-tree-id1761 . -60) (undo-tree-id1762 . -60) (undo-tree-id1763 . -60) (undo-tree-id1764 . -60) (undo-tree-id1765 . -60) (undo-tree-id1766 . -60) (undo-tree-id1767 . -60) (undo-tree-id1768 . -60) (undo-tree-id1769 . -60) (undo-tree-id1770 . -60) (undo-tree-id1771 . -60) (undo-tree-id1772 . -60) (undo-tree-id1773 . -60) (undo-tree-id1774 . -12) (undo-tree-id1775 . -12) (undo-tree-id1776 . -12) (undo-tree-id1777 . -12) (undo-tree-id1778 . -12) (undo-tree-id1779 . -12) (undo-tree-id1780 . -12) (undo-tree-id1781 . -12) (undo-tree-id1782 . -12) (undo-tree-id1783 . -12) (undo-tree-id1784 . -12) (undo-tree-id1785 . -12) (undo-tree-id1786 . -12) (undo-tree-id1787 . -12) (undo-tree-id1788 . -12) (undo-tree-id1789 . -12) (undo-tree-id1790 . -12) (undo-tree-id1791 . -12) (undo-tree-id1792 . -12) (undo-tree-id1793 . -12) (undo-tree-id1794 . -12) (undo-tree-id1795 . -12) (undo-tree-id1796 . -12) (undo-tree-id1797 . -12) (undo-tree-id1798 . -12) (undo-tree-id1799 . -12) (undo-tree-id1800 . -12) 931 (t 24969 49443 567597 581000)) nil (24969 49498 762712 693000) 0 nil] [nil nil ((979 . 980) (#("= math.sin(self.angle) * self.speed" 0 11 (fontified t) 11 15 (fontified t face font-lock-keyword-face) 15 25 (fontified t) 25 29 (fontified t face font-lock-keyword-face) 29 34 (fontified t) 34 35 (fontified t)) . 979) (t 24969 49443 567597 581000)) ((979 . 1014) (#("k" 0 1 (fontified t)) . 979) (undo-tree-id1704 . -1)) (24969 49489 653216 317000) 0 nil]) ((1815 . 1816) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1815) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (#("6" 0 1 (fontified t face highlight-numbers-number)) . -1816) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) 1817 (1815 . 1817) (#("4" 0 1 (fontified t face highlight-numbers-number)) . 1815) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (t 24969 49400 412623 779000)) nil (24969 49489 653768 913000) 0 nil]) ((1811 . 1816) (1807 . 1811)) nil (24969 49400 388278 142000) 0 nil]) ((#("60" 0 2 (fontified t face highlight-numbers-number)) . 1807) (t 24969 49391 601629 26000)) nil (24969 49400 388285 156000) 0 nil]) ((1804 . 1805)) nil (24969 49391 574583 253000) 0 nil]) ((1797 . 1798) (t 24969 49387 5631 747000)) nil (24969 49391 574590 797000) 0 nil]) ((1794 . 1795)) nil (24969 49386 966862 293000) 0 nil]) ((1785 . 1786) (t 24969 49379 907635 931000)) nil (24969 49386 966870 488000) 0 nil]) ((1737 . 1738)) nil (24969 49379 879647 52000) 0 nil]) ((1732 . 1733) (t 24969 49370 440641 474000)) nil (24969 49379 879655 938000) 0 nil]) ((#("math" 0 4 (fontified t)) . 838) (undo-tree-id1604 . -4) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) 842) nil (24969 49370 416855 757000) 0 nil]) ((#("." 0 1 (fontified t)) . 842) (undo-tree-id1612 . -1) 843) nil (24969 49370 416864 634000) 0 nil]) ((#("radians" 0 7 (fontified t)) . 843) (undo-tree-id1613 . -7) 850) nil (24969 49370 416870 545000) 0 nil]) ((#("(" 0 1 (fontified t)) . 850) (undo-tree-id1614 . -1) 851) nil (24969 49370 416875 855000) 0 nil]) ((#(")" 0 1 (fontified t)) . 856) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (t 24969 49363 715645 386000)) nil (24969 49370 416894 500000) 0 nil]) ((#(" " 0 1 (fontified t)) . 663)) nil (24969 49363 688167 803000) 0 nil]) ((#("," 0 1 (fontified t)) . 663)) nil (24969 49363 688176 98000) 0 nil]) ((#("height" 0 6 (fontified t)) . 663) (undo-tree-id1603 . -6) (t 24969 49356 275649 688000)) nil (24969 49363 688189 984000) 0 nil]) ((#("s" 0 1 (fontified t)) . -725) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 726 (717 . 726)) nil (24969 49356 250207 113000) 0 nil]) ((#("x" 0 1 (fontified t)) . 717) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) 718) nil (24969 49356 250330 935000) 0 nil]) ((#(", " 0 2 (fontified t)) . 718) (undo-tree-id1536 . -2) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -2) (undo-tree-id1543 . -2) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -2) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) (undo-tree-id1568 . -2) (undo-tree-id1569 . -2) (undo-tree-id1570 . -2) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (undo-tree-id1573 . -2) (undo-tree-id1574 . -2) (undo-tree-id1575 . -2) (undo-tree-id1576 . -2) (undo-tree-id1577 . -2) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) 720) nil (24969 49356 250458 194000) 0 nil]) ((#("y" 0 1 (fontified t)) . 720) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) 721 (t 24969 49351 798652 262000)) nil (24969 49356 250489 392000) 0 nil]) ((781 . 784) (#("p" 0 1 (fontified t)) . -781) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) 782 (771 . 782) (#("width" 0 5 (fontified t)) . -771) (undo-tree-id1279 . -5) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -5) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -5) (undo-tree-id1299 . -5) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -5) (undo-tree-id1305 . -5) 776) nil (24969 49351 771609 529000) 0 nil]) ((809 . 812) (#("(" 0 1 (fontified t)) . -809) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) 810 (799 . 810) (#("height" 0 6 (fontified t)) . -799) (undo-tree-id1341 . -6) 805) nil (24969 49351 771791 620000) 0 nil]) ((651 . 661)) nil (24969 49351 771798 563000) 0 nil]) ((#("width" 0 5 (fontified t)) . 651)) nil (24969 49351 771801 258000) 0 nil]) ((641 . 649)) nil (24969 49351 771803 773000) 0 nil]) ((#("x" 0 1 (fontified t)) . 641) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) 642) nil (24969 49351 771907 998000) 0 nil]) ((#(", " 0 2 (fontified t)) . 642) (undo-tree-id1396 . -2) (undo-tree-id1397 . -2) (undo-tree-id1398 . -2) (undo-tree-id1399 . -2) (undo-tree-id1400 . -2) (undo-tree-id1401 . -2) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -2) (undo-tree-id1415 . -2) (undo-tree-id1416 . -2) (undo-tree-id1417 . -2) (undo-tree-id1418 . -2) (undo-tree-id1419 . -2) (undo-tree-id1420 . -2) (undo-tree-id1421 . -2) (undo-tree-id1422 . -2) (undo-tree-id1423 . -2) (undo-tree-id1424 . -2) (undo-tree-id1425 . -2) (undo-tree-id1426 . -2) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) 644) nil (24969 49351 771976 456000) 0 nil]) ((#("y" 0 1 (fontified t)) . 644) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) 645 (t 24969 49333 333662 774000)) nil (24969 49351 772022 513000) 0 nil]) ((461 . 469)) nil (24969 49333 307185 511000) 0 nil]) ((#("x" 0 1 (fontified t)) . 461) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 462) nil (24969 49333 307308 281000) 0 nil]) ((#(", " 0 2 (fontified t)) . 462) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (undo-tree-id1189 . -2) (undo-tree-id1190 . -2) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -2) (undo-tree-id1203 . -2) (undo-tree-id1204 . -2) (undo-tree-id1205 . -2) (undo-tree-id1206 . -2) (undo-tree-id1207 . -2) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) 464) nil (24969 49333 307392 509000) 0 nil]) ((#("y" 0 1 (fontified t)) . 464) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) 465) nil (24969 49333 307450 658000) 0 nil]) ((419 . 427)) nil (24969 49333 307455 927000) 0 nil]) ((#("y" 0 1 (fontified t)) . 419)) nil (24969 49333 307458 402000) 0 nil]) ((#(" " 0 1 (fontified t)) . 419)) nil (24969 49333 307460 867000) 0 nil]) ((#("," 0 1 (fontified t)) . 419)) nil (24969 49333 307463 91000) 0 nil]) ((#("x" 0 1 (fontified t)) . 419) (t 24969 49321 218669 574000)) nil (24969 49333 307466 167000) 0 nil]) ((183 . 186) (#("{" 0 1 (fontified t)) . -183) (undo-tree-id861 . -1) 184 (175 . 184)) nil (24969 49321 182723 365000) 0 nil]) ((#("int)" 0 3 (fontified t face font-lock-builtin-face) 3 4 (fontified t)) . 175) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -3) (undo-tree-id867 . -3) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -3) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3) (undo-tree-id880 . -3) (undo-tree-id881 . -3) (undo-tree-id882 . -3) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (undo-tree-id885 . -3) (undo-tree-id886 . -3) (undo-tree-id887 . -3) (undo-tree-id888 . -3) (undo-tree-id889 . -3) (undo-tree-id890 . -3) (undo-tree-id891 . -3) (undo-tree-id892 . -3) (undo-tree-id893 . -3) (undo-tree-id894 . -3) (undo-tree-id895 . -3) (undo-tree-id896 . -3) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -3) (undo-tree-id901 . -3) (undo-tree-id902 . -3) (undo-tree-id903 . -3) (undo-tree-id904 . -3) (undo-tree-id905 . -3) (undo-tree-id906 . -3) (undo-tree-id907 . -3) (undo-tree-id908 . -3) (undo-tree-id909 . -3) (undo-tree-id910 . -3) (undo-tree-id911 . -3) (undo-tree-id912 . -3) (undo-tree-id913 . -3) (undo-tree-id914 . -3) (undo-tree-id915 . -3) (undo-tree-id916 . -3) (undo-tree-id917 . -3) (undo-tree-id918 . -3) (undo-tree-id919 . -3) (undo-tree-id920 . -3) (undo-tree-id921 . -3) (undo-tree-id922 . -3) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -2) (undo-tree-id928 . -2) (undo-tree-id929 . -2) (undo-tree-id930 . -2) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -2) (undo-tree-id934 . -2) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1)) nil (24969 49321 182851 185000) 0 nil]) ((#("(" 0 1 (fontified t)) . 178) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) 179) nil (24969 49321 182926 816000) 0 nil]) ((#("y" 0 1 (fontified t)) . 179) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) 180) nil (24969 49321 182973 233000) 0 nil]) ((154 . 157)) nil (24969 49321 182977 682000) 0 nil]) ((#("x)" 0 2 (fontified t)) . 154) (undo-tree-id1009 . 2)) nil (24969 49321 182981 559000) 0 nil]) ((146 . 154)) nil (24969 49321 182984 264000) 0 nil]) ((#("int(position" 0 3 (fontified t face font-lock-builtin-face) 3 12 (fontified t)) . 146) (undo-tree-id1010 . -12) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -3) (undo-tree-id1017 . -3) (undo-tree-id1018 . -3) (undo-tree-id1019 . -3) (undo-tree-id1020 . -3) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -5) (undo-tree-id1034 . -5) (undo-tree-id1035 . -5) (undo-tree-id1036 . -5) (undo-tree-id1037 . -5) (undo-tree-id1038 . -5) (undo-tree-id1039 . -6) (undo-tree-id1040 . -6) (undo-tree-id1041 . -6) (undo-tree-id1042 . -6) (undo-tree-id1043 . -6) (undo-tree-id1044 . -6) (undo-tree-id1045 . -7) (undo-tree-id1046 . -7) (undo-tree-id1047 . -7) (undo-tree-id1048 . -7) (undo-tree-id1049 . -7) (undo-tree-id1050 . -7) (undo-tree-id1051 . -8) (undo-tree-id1052 . -8) (undo-tree-id1053 . -8) (undo-tree-id1054 . -8) (undo-tree-id1055 . -8) (undo-tree-id1056 . -8) (undo-tree-id1057 . -9) (undo-tree-id1058 . -9) (undo-tree-id1059 . -9) (undo-tree-id1060 . -9) (undo-tree-id1061 . -9) (undo-tree-id1062 . -9) (undo-tree-id1063 . -10) (undo-tree-id1064 . -10) (undo-tree-id1065 . -10) (undo-tree-id1066 . -10) (undo-tree-id1067 . -10) (undo-tree-id1068 . -10) (undo-tree-id1069 . -11) (undo-tree-id1070 . -11) (undo-tree-id1071 . -11) (undo-tree-id1072 . -11) (undo-tree-id1073 . -11) (undo-tree-id1074 . -11) (undo-tree-id1075 . -12) (undo-tree-id1076 . -12) (undo-tree-id1077 . -12) (undo-tree-id1078 . -12) (undo-tree-id1079 . -12) (undo-tree-id1080 . -12) (undo-tree-id1081 . -11) (undo-tree-id1082 . -11) (undo-tree-id1083 . -11) (undo-tree-id1084 . -11) (undo-tree-id1085 . -11) (undo-tree-id1086 . -11) (undo-tree-id1087 . -11) (undo-tree-id1088 . -11) (undo-tree-id1089 . -11) (undo-tree-id1090 . -11) (undo-tree-id1091 . -11) (undo-tree-id1092 . -11) (undo-tree-id1093 . -11) (undo-tree-id1094 . -11) (undo-tree-id1095 . -11) (undo-tree-id1096 . -11) (undo-tree-id1097 . -11) (undo-tree-id1098 . -11) (undo-tree-id1099 . -11) (undo-tree-id1100 . -11) (undo-tree-id1101 . -11) (undo-tree-id1102 . -4) (undo-tree-id1103 . -11) (undo-tree-id1104 . -11) (undo-tree-id1105 . -11) (undo-tree-id1106 . -11) (undo-tree-id1107 . -11) (undo-tree-id1108 . -11) (undo-tree-id1109 . -11) (undo-tree-id1110 . -12) (undo-tree-id1111 . -12) (undo-tree-id1112 . -12) (undo-tree-id1113 . -12) (undo-tree-id1114 . -12) (undo-tree-id1115 . -12) (undo-tree-id1116 . -12) (undo-tree-id1117 . -12) (undo-tree-id1118 . -12) (undo-tree-id1119 . -12) (undo-tree-id1120 . -12) (undo-tree-id1121 . -12) (undo-tree-id1122 . -12) 158) nil (24969 49321 183260 331000) 0 nil]) ((150 . 158)) nil (24969 49321 183271 693000) 0 nil]) ((88 . 96)) nil (24969 49321 183273 867000) 0 nil]) ((#("y" 0 1 (fontified t)) . 88)) nil (24969 49321 183275 720000) 0 nil]) ((#(", " 0 2 (fontified t)) . 88)) nil (24969 49321 183277 994000) 0 nil]) ((#("x" 0 1 (fontified t)) . 88) (t 24969 47119 998933 929000)) nil (24969 49321 183280 720000) 0 nil]) (619) nil (24969 49321 183283 345000) 0 nil]) ((13 . 25)) nil (24969 47119 972957 548000) 0 nil]) ((#("import time
" 0 6 (fontified t face font-lock-keyword-face) 6 12 (fontified t)) . 27) (undo-tree-id809 . -12) (undo-tree-id810 . -12) (undo-tree-id811 . -12) (undo-tree-id812 . -12) (undo-tree-id813 . -12) (undo-tree-id814 . -12) (undo-tree-id815 . -12) (undo-tree-id816 . -12) (undo-tree-id817 . -12) (undo-tree-id818 . -12) (undo-tree-id819 . -12) (undo-tree-id820 . -12) (undo-tree-id821 . -12) (undo-tree-id822 . -12) (undo-tree-id823 . -12) (undo-tree-id824 . -12) (undo-tree-id825 . -12) (undo-tree-id826 . -12) (undo-tree-id827 . -12) (undo-tree-id828 . -12) (undo-tree-id829 . -12) (undo-tree-id830 . -12) (undo-tree-id831 . -12) (undo-tree-id832 . -12) (undo-tree-id833 . -12) (undo-tree-id834 . -12) (undo-tree-id835 . -12) (undo-tree-id836 . -12) (undo-tree-id837 . -12) (undo-tree-id838 . -12) (undo-tree-id839 . -12) (undo-tree-id840 . -12) (undo-tree-id841 . -12) (undo-tree-id842 . -12) (undo-tree-id843 . -12) (undo-tree-id844 . -12) (undo-tree-id845 . -12) (undo-tree-id846 . -12) (undo-tree-id847 . -12) (undo-tree-id848 . -12) (undo-tree-id849 . -12) (undo-tree-id850 . -12) (undo-tree-id851 . -12) (undo-tree-id852 . -12) (undo-tree-id853 . -12) (undo-tree-id854 . -12) (undo-tree-id855 . -12) (undo-tree-id856 . -12) (undo-tree-id857 . -12) (undo-tree-id858 . -12) (undo-tree-id859 . -12) (undo-tree-id860 . -6) (t 24969 47114 868945 763000)) nil (24969 47119 973053 988000) 0 nil]) ((1 . 13)) nil (24969 47114 842423 373000) 0 nil]) ((#("import math
" 0 6 (fontified t face font-lock-keyword-face) 6 12 (fontified t)) . 27) (undo-tree-id766 . -12) (undo-tree-id767 . -12) (undo-tree-id768 . -12) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -6) (undo-tree-id772 . -12) (undo-tree-id773 . -12) (undo-tree-id774 . -12) (undo-tree-id775 . -12) (undo-tree-id776 . -12) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) 28 (t 24969 47097 517985 617000)) nil (24969 47114 842508 703000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-doc-face)) . -374) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) 375 (374 . 375)) nil (24969 47097 481115 820000) 0 nil]) ((357 . 374) (t 24969 47091 399999 604000)) nil (24969 47097 481123 765000) 0 nil]) ((#(" " 0 1 (fontified t)) . -358) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 359 (354 . 359) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -354) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -355) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (#("." 0 1 (fontified t face font-lock-doc-face)) . -356) (undo-tree-id734 . -1) (undo-tree-id735 . -1) 357 (354 . 357) (333 . 354) (326 . 333) (#("Immo" 0 4 (fontified t face font-lock-doc-face)) . -326) (undo-tree-id736 . -4) (undo-tree-id737 . -4) 330 (326 . 330) (#("Object " 0 7 (fontified t face font-lock-doc-face)) . -326) (undo-tree-id738 . -7) (undo-tree-id739 . -7) 333 (#("that " 0 5 (fontified t face font-lock-doc-face)) . -333) (undo-tree-id740 . -5) (undo-tree-id741 . -5) 338 (#("has " 0 4 (fontified t face font-lock-doc-face)) . -338) (undo-tree-id742 . -4) (undo-tree-id743 . -4) 342 (#("the " 0 4 (fontified t face font-lock-doc-face)) . -342) (undo-tree-id744 . -4) (undo-tree-id745 . -4) 346 (#("blocke " 0 7 (fontified t face font-lock-doc-face)) . -346) (undo-tree-id746 . -7) (undo-tree-id747 . -7) 353 (346 . 353) (325 . 346) (320 . 325) (t 24969 47069 470049 452000) 319) nil (24969 47091 362778 566000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 441)) nil (24969 47069 433420 786000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 441)) nil (24969 47069 433427 288000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 441)) nil (24969 47069 433430 214000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 441)) nil (24969 47069 433432 789000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 441) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) 442) nil (24969 47069 433507 228000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 442) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) 443) nil (24969 47069 433584 262000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 443) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) 444) nil (24969 47069 433618 266000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-doc-face)) . -540) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -541) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -542) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -543) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -544) (undo-tree-id719 . -1) (undo-tree-id720 . -1) 545) nil (24969 47069 433830 864000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 546)) nil (24969 47069 433839 89000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 546) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (t 24969 47047 30099 977000)) nil (24969 47069 433852 515000) 0 nil]) ((#("
" 0 1 (fontified t)) . -613) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 614 (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -614) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) 618 (#("    " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -618) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) 622 (#("\"" 0 1 (fontified t face font-lock-doc-face)) . -622) (undo-tree-id570 . -1) (undo-tree-id571 . -1) 623 (622 . 623) (613 . 622) (t 24969 47012 475176 773000) 612) nil (24969 47046 994444 154000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-doc-face)) . 809) (t 24969 47002 886197 858000)) nil (24969 47012 439318 44000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 849) (undo-tree-id405 . 1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 850) nil (24969 47002 850139 565000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 850) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) 851) nil (24969 47002 850157 579000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 805) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 806) nil (24969 47002 850344 88000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-doc-face)) . 806) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 807 (t 24969 46999 24206 321000)) nil (24969 47002 850449 375000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 807) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) 808) nil (24969 46998 999919 625000) 0 nil]) ((#("        " 0 8 (fontified t face font-lock-doc-face)) . 808) (undo-tree-id367 . -8) (undo-tree-id368 . -8) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -7) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -8) (undo-tree-id380 . -8) (undo-tree-id381 . -8) (undo-tree-id382 . -8) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) 816) nil (24969 46999 117 786000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-doc-face)) . -860) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 861) nil (24969 46999 132 373000) 0 nil]) ((#("        " 0 8 (fontified t face font-lock-doc-face)) . 861) (undo-tree-id404 . -8) 869 (t 24969 46984 376238 270000)) nil (24969 46999 137 503000) 0 nil]) ((861 . 869)) nil (24969 46984 339999 690000) 0 nil]) (863) nil (24969 46984 340005 972000) 0 nil]) ((861 . 864) (860 . 861) (858 . 860) (837 . 858) (816 . 837) (#("Sets " 0 5 (fontified t face font-lock-doc-face)) . -816) (undo-tree-id298 . -5) (undo-tree-id299 . -5) 821 (#("up " 0 3 (fontified t face font-lock-doc-face)) . -821) (undo-tree-id300 . -3) (undo-tree-id301 . -3) 824 (816 . 824) (#("Moves " 0 6 (fontified t face font-lock-doc-face)) . -816) (undo-tree-id302 . -6) (undo-tree-id303 . -6) 822 (#("the " 0 4 (fontified t face font-lock-doc-face)) . -822) (undo-tree-id304 . -4) (undo-tree-id305 . -4) 826 (#("object " 0 7 (fontified t face font-lock-doc-face)) . -826) (undo-tree-id306 . -7) 833 (816 . 833) (808 . 816) (#("M" 0 1 (fontified t face font-lock-doc-face)) . -808) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 809 (808 . 809) (807 . 808) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -807) (undo-tree-id309 . -1) 808 (804 . 808) (795 . 804) (t 24969 46963 874282 572000) 794) nil (24969 46984 340046 488000) 0 nil]) ((#(" # creates stuff" 0 1 (fontified t) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 16 (fontified t face font-lock-comment-face)) . 795) (undo-tree-id267 . 13) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -16) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (t 24969 46960 641289 513000)) nil (24969 46963 838331 70000) 0 nil]) ((797 . 798)) nil (24969 46960 604819 431000) 0 nil]) ((797 . 810) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -797) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 798 (796 . 798) (#("/" 0 1 (fontified t)) . -796) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("/" 0 1 (fontified t)) . -797) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 798 (#("does " 0 5 (fontified t)) . -798) (undo-tree-id263 . -5) (undo-tree-id264 . -5) 803 (798 . 803) (#(" " 0 1 (fontified t)) . -798) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 799 (795 . 799) (t 24969 46898 291420 821000)) nil (24969 46960 604853 545000) 0 nil]) ((1377 . 1385) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53=((#<marker at 802 in main.py> . #<marker at 2465 in main.py>))) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #54=((#<marker at 1314 in main.py> . #<marker at 2464 in main.py>) . #53#)) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #54#) fontified t)) . 1377) (undo-tree-id218 . -1) (undo-tree-id219 . -4) (undo-tree-id220 . -5) (undo-tree-id221 . -1) (undo-tree-id222 . -4) (undo-tree-id223 . -5) (undo-tree-id224 . -1) (undo-tree-id225 . -4) (undo-tree-id226 . -5) (undo-tree-id227 . -1) (undo-tree-id228 . -4) (undo-tree-id229 . -5) (undo-tree-id230 . -6) (1355 . 1363) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #54#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #54#) fontified t)) . 1355) (undo-tree-id231 . -6) (undo-tree-id232 . -1) (undo-tree-id233 . -4) (undo-tree-id234 . -5) (undo-tree-id235 . -1) (undo-tree-id236 . -4) (undo-tree-id237 . -5) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) 1361 (1307 . 1315) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #54#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #54#) fontified t)) . 1307) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) 1313 (#("    " 0 1 (fontified t highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #55=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #54#)) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #55#)) 2 3 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #55#)) 3 4 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil #55#))) . -1267) (undo-tree-id255 . -4) 1271 (1259 . 1271) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #54#) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #54#) fontified t)) . 1259) (undo-tree-id256 . -6) 1265 (t 24969 46872 845472 931000)) nil (24969 46898 266680 951000) 0 nil]) (1259) nil (24969 46898 266691 611000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1075) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1)) nil (24969 46872 819718 198000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1260) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1)) nil (24969 46872 819991 500000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1353) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (t 24969 46798 142620 410000)) nil (24969 46872 820028 289000) 0 nil]) ((#(" " 0 1 (fontified t)) . 936) (undo-tree-id178 . -1) (t 24969 46787 433640 827000)) nil (24969 46798 107010 996000) 0 nil]) ((#("
" 0 1 (fontified t)) . 549) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1)) nil (24969 46787 399408 705000) 0 nil] [nil nil ((433 . 434) (#("    " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified nil) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified nil) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #53#) fontified nil)) . 433) (#("
" 0 1 (fontified t)) . -433) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("
" 0 1 (fontified t)) . -394) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("
" 0 1 (fontified t)) . -394) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1)) ((394 . 395) (394 . 395) (433 . 434) (433 . 437) (#(" " 0 1 (fontified t)) . 433) (t 24969 46783 385648 495000)) (24969 46783 360208 367000) 0 nil]) ((#("        " 0 8 (fontified t)) . -173) (undo-tree-id168 . -8) (undo-tree-id169 . -8) 181 (172 . 181) (t 24969 46777 247660 68000) 156) nil (24969 46783 529742 200000) 0 nil]) ((196 . 204) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56=((#<marker at 59 in main.py> . #<marker at 588 in main.py>))) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #56#) fontified t) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil #56#) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil #56#) fontified t) 4 5 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #57=((#<marker at 211 in main.py> . #<marker at 588 in main.py>) . #56#)) fontified t face highlight-indent-guides-odd-face) 5 6 (highlight-indent-guides-prop (1 nil nil 1 nil #57#) fontified t)) . 196) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) 202) nil (24969 46777 213666 629000) 0 nil]) (203) nil (24969 46777 213673 331000) 0 nil]) (103) nil (24969 46777 213675 986000) 0 nil]) ((#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #58=((#<marker at 99 in main.py> . #<marker at 175 in main.py>) . #56#)) face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #58#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #58#))) . -157) (undo-tree-id133 . -7) (undo-tree-id134 . -7) (149 . 157) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #58#) face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #58#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #58#))) . -133) (125 . 133) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #58#) face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #58#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #58#))) . -103) (undo-tree-id135 . -7) (undo-tree-id136 . -7) (undo-tree-id137 . -7) (95 . 103) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #59=((#<marker at 99 in main.py> . #<marker at 175 in main.py>) . #56#)) face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #59#))) . -154) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (147 . 154) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #59#) face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #59#))) . -131) (124 . 131) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #56#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #56#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #59#) face highlight-indent-guides-odd-face) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #59#))) . -102) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (95 . 102)) nil (24969 46777 213697 767000) 0 nil]) ((#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #60=((#<marker at 59 in main.py> . #<marker at 588 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 3 4 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #61=((#<marker at 211 in main.py> . #<marker at 588 in main.py>) . #60#)) face highlight-indent-guides-odd-face) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #61#))) . -196) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (190 . 196) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #60#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#))) . -171) (167 . 171) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #60#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 3 4 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #62=((#<marker at 99 in main.py> . #<marker at 175 in main.py>) . #60#)) face highlight-indent-guides-odd-face) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #62#))) . -151) (145 . 151) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #60#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 3 4 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #62#) face highlight-indent-guides-odd-face) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #62#))) . -129) (123 . 129) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #60#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 3 4 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #62#) face highlight-indent-guides-odd-face) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #62#))) . -101) (95 . 101) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #60#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #60#))) . -63) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (59 . 63) (#("    " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #63=((#<marker at 59 in main.py> . #<marker at 588 in main.py>))) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #63#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #64=((#<marker at 211 in main.py> . #<marker at 588 in main.py>) . #63#)) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #64#) fontified nil)) . -190) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (185 . 190) (#("  " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #63#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #63#) fontified nil)) . -166) (163 . 166) (#("    " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #63#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #63#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #65=((#<marker at 99 in main.py> . #<marker at 175 in main.py>) . #63#)) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #65#) fontified nil)) . -147) (142 . 147) (#("    " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #63#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #63#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #65#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #65#) fontified nil)) . -126) (121 . 126) (#("    " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #63#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #63#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #65#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #65#) fontified nil)) . -99) (94 . 99) (#("  " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #63#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #63#) fontified nil)) . -62) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (59 . 62) 263) nil (24969 46777 213727 573000) 0 nil] [nil nil ((59 . 60)) ((#("
" 0 1 (fontified t)) . 59) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1)) (24969 46763 135174 960000) 0 nil]) ((39 . 40)) nil (24969 46763 135749 315000) 0 nil]) ((262 . 263)) nil (24969 46763 135186 712000) 0 nil]) ((371 . 372) (t 24969 46742 705723 970000)) nil (24969 46763 135190 829000) 0 nil]) ((#("     " 0 5 (fontified nil face font-lock-doc-face)) . -521) (517 . 521) (#("     " 0 5 (fontified nil face font-lock-doc-face)) . -424) (420 . 424) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 4 5 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#))) . -416) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -1) (412 . 416) (#("      " 0 6 (fontified nil face font-lock-doc-face)) . -524) (519 . 524) (#("      " 0 6 (fontified nil face font-lock-doc-face)) . -426) (421 . 426) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 4 5 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 5 6 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#))) . -417) (undo-tree-id97 . -6) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -6) (undo-tree-id105 . -6) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -1) (412 . 417) (#("       " 0 7 (fontified nil face font-lock-doc-face)) . -527) (521 . 527) (#("       " 0 7 (fontified nil face font-lock-doc-face)) . -428) (422 . 428) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 4 5 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 5 6 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 6 7 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#))) . -418) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (412 . 418) (#("        " 0 8 (fontified nil face font-lock-doc-face)) . -530) (523 . 530) (#("        " 0 8 (fontified nil face font-lock-doc-face)) . -430) (423 . 430) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #53#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 3 4 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 4 5 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 5 6 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 6 7 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#)) 7 8 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #53#))) . -419) (undo-tree-id112 . -2) (undo-tree-id113 . -6) (412 . 419) (#("  " 0 2 (fontified nil face font-lock-doc-face)) . -533) (525 . 533) (#("  " 0 2 (fontified nil face font-lock-doc-face)) . -432) (424 . 432) (#("  " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66=((#<marker at 802 in main.py> . #<marker at 2465 in main.py>))) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil)) . -420) (412 . 420) 519 (t 24969 46729 514747 802000)) nil (24969 46742 671034 462000) 0 nil]) ((#("  " 0 2 (fontified t)) . -519) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) 521 (519 . 521) (nil face font-lock-doc-face 518 . 519) (nil fontified t 518 . 519) (518 . 519) 513) nil (24969 46729 492373 268000) 0 nil]) ((#("        " 0 8 (fontified t)) . -745) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -4) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) 753 (744 . 753) 715) nil (24969 46729 492402 833000) 0 nil]) ((1187 . 1189)) nil (24969 46729 492407 141000) 0 nil]) (1188) nil (24969 46729 492410 307000) 0 nil]) ((1102 . 1104)) nil (24969 46729 492412 762000) 0 nil]) (1103) nil (24969 46729 492415 267000) 0 nil]) ((1002 . 1004)) nil (24969 46729 492417 932000) 0 nil]) (1003) nil (24969 46729 492420 336000) 0 nil]) ((917 . 919)) nil (24969 46729 492422 731000) 0 nil]) (918) nil (24969 46729 492425 586000) 0 nil]) ((#("        " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67=((#<marker at 901 in main.py> . #<marker at 2465 in main.py>) . #66#)) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68=((#<marker at 1314 in main.py> . #<marker at 2464 in main.py>) . #67#)) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil) 6 7 (highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #69=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #68#)) fontified nil face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (3 nil nil 1 nil #69#) fontified nil)) . -1181) (1171 . 1181) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil)) . -1147) (1139 . 1147) (#("        " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil) 6 7 (highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #70=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #68#)) fontified nil face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (3 nil nil 1 nil #70#) fontified nil)) . -1098) (1088 . 1098) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil)) . -1050) (1042 . 1050) (#("        " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil) 6 7 (highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #71=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #68#)) fontified nil face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (3 nil nil 1 nil #71#) fontified nil)) . -1000) (990 . 1000) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil)) . -966) (958 . 966) (#("        " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil) 6 7 (highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #72=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #68#)) fontified nil face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (3 nil nil 1 nil #72#) fontified nil)) . -917) (907 . 917) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil)) . -869) (861 . 869) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil)) . -821) (813 . 821) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #68#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #68#) fontified nil)) . -773) (765 . 773) 1202) nil (24969 46729 492437 148000) 0 nil]) ((#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #73=((#<marker at 967 in main.py> . #<marker at 1239 in main.py>) . #67#)) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #73#) fontified nil)) . -712) (704 . 712) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #73#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #73#) fontified nil)) . -683) (675 . 683) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #73#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #73#) fontified nil)) . -656) (648 . 656) (#("      " 0 1 (highlight-indent-guides-prop #75=(0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #76=(0 nil nil 1 nil #66#) fontified nil) 2 3 (highlight-indent-guides-prop #74=(1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop #78=(1 nil nil 1 nil #67#) fontified nil) 4 5 (highlight-indent-guides-prop #77=(2 nil t 1 (column nil highlight-indent-guides-even-face) #73#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop #79=(2 nil nil 1 nil #73#) fontified nil)) . -629) (621 . 629)) nil (24969 46729 492446 94000) 0 nil] [nil nil ((620 . 621) (#("      " 0 1 (highlight-indent-guides-prop #75# fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop #76# fontified nil) 2 3 (highlight-indent-guides-prop #74# fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop #78# fontified nil) 4 5 (highlight-indent-guides-prop #77# fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop #79# fontified nil)) . 620) (undo-tree-id13 . -1) (undo-tree-id14 . -2) (undo-tree-id15 . -3) (undo-tree-id16 . -4) (undo-tree-id17 . -5) (undo-tree-id18 . -6) (#("
" 0 1 (fontified t)) . -620) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 591) ((620 . 621) (620 . 626) (#(" " 0 1 (fontified t)) . 620)) (24969 46690 179773 452000) 0 nil]) ((584 . 592) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #66#) fontified t) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) fontified t face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #67#) fontified t) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #73#) fontified t face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #73#) fontified t)) . 584) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) 590) nil (24969 46690 181233 738000) 0 nil]) (591) nil (24969 46690 179804 911000) 0 nil]) ((334 . 342) (#("    " 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #80=((#<marker at 679 in main.py> . #<marker at 761 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #80#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #80#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #80#))) . -334) (undo-tree-id35 . -4) 338 (#("    " 0 1 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #81=((#<marker at 719 in main.py> . #<marker at 760 in main.py>) . #80#)) face highlight-indent-guides-odd-face) 1 2 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #81#)) 2 3 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #81#)) 3 4 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #81#))) . -338) (undo-tree-id36 . -4) 342 (334 . 342) (#("      " 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #80#) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #80#)) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #80#)) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #80#)) 4 5 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #82=((#<marker at 719 in main.py> . #<marker at 760 in main.py>) . #80#)) face highlight-indent-guides-odd-face) 5 6 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #82#))) . 334) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) 340) nil (24969 46690 179817 705000) 0 nil]) ((#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #83=((#<marker at 679 in main.py> . #<marker at 760 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #83#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #83#)) 3 4 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #84=((#<marker at 719 in main.py> . #<marker at 760 in main.py>) . #83#)) face highlight-indent-guides-odd-face) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #84#))) . -340) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (334 . 340) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #83#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #83#)) 2 3 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #83#))) . -302) (298 . 302) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #85=((#<marker at 679 in main.py> . #<marker at 760 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #85#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #86=((#<marker at 719 in main.py> . #<marker at 760 in main.py>) . #85#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #86#))) . -338) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (333 . 338) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #85#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #85#))) . -301) (298 . 301)) nil (24969 46690 179831 221000) 0 nil]) ((#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #87=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #67#)) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #87#))) . -696) (690 . 696) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #87#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #87#))) . -669) (663 . 669) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #87#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #87#))) . -644) (638 . 644) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #87#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #87#))) . -619) (613 . 619) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #87#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #87#))) . -584) (578 . 584) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#))) . -517) (513 . 517) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #88=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #67#)) face highlight-indent-guides-even-face) 7 8 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #88#))) . -702) (695 . 702) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #88#) face highlight-indent-guides-even-face) 7 8 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #88#))) . -674) (667 . 674) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #88#) face highlight-indent-guides-even-face) 7 8 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #88#))) . -648) (641 . 648) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #88#) face highlight-indent-guides-even-face) 7 8 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #88#))) . -622) (615 . 622) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #88#) face highlight-indent-guides-even-face) 7 8 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #88#))) . -586) (579 . 586) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#))) . -518) (513 . 518) (#("         " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #89=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #67#)) face highlight-indent-guides-even-face) 8 9 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #89#))) . -708) (700 . 708) (#("         " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #89#) face highlight-indent-guides-even-face) 8 9 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #89#))) . -679) (671 . 679) (#("         " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #89#) face highlight-indent-guides-even-face) 8 9 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #89#))) . -652) (644 . 652) (#("         " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #89#) face highlight-indent-guides-even-face) 8 9 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #89#))) . -625) (617 . 625) (#("         " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #89#) face highlight-indent-guides-even-face) 8 9 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #89#))) . -588) (580 . 588) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#))) . -519) (513 . 519) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #90=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #67#)) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #90#))) . -714) (705 . 714) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #90#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #90#))) . -684) (675 . 684) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #90#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #90#))) . -656) (647 . 656) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #90#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #90#))) . -628) (619 . 628) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #90#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #90#))) . -590) (581 . 590) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#))) . -520) (513 . 520) (#("                  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 9 10 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 10 11 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 11 12 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 12 13 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 13 14 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 14 15 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 15 16 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 16 17 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #91=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #67#)) face highlight-indent-guides-even-face) 17 18 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #91#))) . -720) (710 . 720) (#("                  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 9 10 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 10 11 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 11 12 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 12 13 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 13 14 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 14 15 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 15 16 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 16 17 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #91#) face highlight-indent-guides-even-face) 17 18 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #91#))) . -689) (679 . 689) (#("                  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 9 10 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 10 11 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 11 12 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 12 13 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 13 14 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 14 15 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 15 16 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 16 17 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #91#) face highlight-indent-guides-even-face) 17 18 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #91#))) . -660) (650 . 660) (#("                  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 9 10 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 10 11 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 11 12 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 12 13 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 13 14 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 14 15 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 15 16 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 16 17 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #91#) face highlight-indent-guides-even-face) 17 18 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #91#))) . -631) (621 . 631) (#("                  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 9 10 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 10 11 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 11 12 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 12 13 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 13 14 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 14 15 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 15 16 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 16 17 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #91#) face highlight-indent-guides-even-face) 17 18 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #91#))) . -592) (582 . 592) (#("                " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 9 10 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 10 11 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 11 12 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 12 13 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 13 14 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 14 15 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 15 16 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#))) . -521) (513 . 521) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #92=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #67#)) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #92#))) . -768) (750 . 768) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #92#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #92#))) . -729) (711 . 729) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #92#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #92#))) . -692) (674 . 692) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #92#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #92#))) . -655) (637 . 655) (#("          " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 8 9 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #92#) face highlight-indent-guides-even-face) 9 10 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #92#))) . -608) (590 . 608) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #67#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 5 6 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 6 7 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#)) 7 8 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #67#))) . -529) (513 . 529) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#))) . -720) (710 . 720) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#))) . -689) (679 . 689) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#))) . -660) (650 . 660) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#))) . -631) (621 . 631) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #66#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #66#))) . -592) (582 . 592) (513 . 521) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93=((#<marker at 802 in main.py> . #<marker at 1259 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94=((#<marker at 901 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #95=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #94#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #95#))) . -672) (670 . 672) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #95#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #95#))) . -649) (647 . 649) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #95#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #95#))) . -628) (626 . 628) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #95#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #95#))) . -607) (605 . 607) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #95#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #95#))) . -576) (574 . 576) (#("    " 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified t highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil #94#))) . -513) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #96=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #94#)) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #96#))) . -696) (690 . 696) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #96#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #96#))) . -669) (663 . 669) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #96#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #96#))) . -644) (638 . 644) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #96#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #96#))) . -619) (613 . 619) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 5 6 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #96#) face highlight-indent-guides-even-face) 6 7 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #96#))) . -584) (578 . 584) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#))) . -517) (513 . 517) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #97=((#<marker at 967 in main.py> . #<marker at 1132 in main.py>) . #94#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #97#))) . -702) (695 . 702) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #97#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #97#))) . -674) (667 . 674) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #97#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #97#))) . -648) (641 . 648) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #97#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #97#))) . -622) (615 . 622) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #97#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #97#))) . -586) (579 . 586) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #94#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #94#))) . -518) (513 . 518) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #98=((#<marker at 901 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #99=((#<marker at 967 in main.py> . #<marker at 2465 in main.py>) . #98#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #99#))) . -696) (690 . 696) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #98#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #99#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #99#))) . -669) (663 . 669) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #98#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #99#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #99#))) . -644) (638 . 644) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #98#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #99#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #99#))) . -619) (613 . 619) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #98#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #99#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #99#))) . -584) (578 . 584) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #98#) face highlight-indent-guides-odd-face)) . -517) (513 . 517) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100=((#<marker at 967 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#))) . -690) (685 . 690) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#))) . -664) (659 . 664) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#))) . -640) (635 . 640) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#))) . -616) (611 . 616) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#))) . -582) (577 . 582) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#))) . -516) (513 . 516)) nil (24969 46690 179890 211000) 0 nil]) ((#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #100#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -1294) (1288 . 1294) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -1274) (1268 . 1274) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -1227) (1221 . 1227) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -1181) (1175 . 1181) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #102=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #101#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #102#))) . -1133) (1125 . 1133) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -1101) (1095 . 1101) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #103=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #101#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #103#))) . -1054) (1046 . 1054) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -1008) (1002 . 1008) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #104=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #101#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #104#))) . -960) (952 . 960) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -928) (922 . 928) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #105=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #101#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #105#))) . -881) (873 . 881) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -835) (829 . 835) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -789) (783 . 789) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #101#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #101#))) . -743) (737 . 743) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face)) . -721) (717 . 721) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -1279) (1274 . 1279) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -1260) (1255 . 1260) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -1214) (1209 . 1214) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -1169) (1164 . 1169) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #107=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #106#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #107#))) . -1122) (1115 . 1122) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -1091) (1086 . 1091) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #108=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #106#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #108#))) . -1045) (1038 . 1045) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -1000) (995 . 1000) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #109=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #106#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #109#))) . -953) (946 . 953) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -922) (917 . 922) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #110=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #106#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #110#))) . -876) (869 . 876) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -831) (826 . 831) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -786) (781 . 786) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #106#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #106#))) . -741) (736 . 741) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#))) . -720) (717 . 720) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -1264) (1260 . 1264) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -1246) (1242 . 1246) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -1201) (1197 . 1201) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -1157) (1153 . 1157) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #112=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #111#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #112#))) . -1111) (1105 . 1111) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -1081) (1077 . 1081) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #113=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #111#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #113#))) . -1036) (1030 . 1036) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -992) (988 . 992) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #114=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #111#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #114#))) . -946) (940 . 946) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -916) (912 . 916) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #115=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #111#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #115#))) . -871) (865 . 871) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -827) (823 . 827) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -783) (779 . 783) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #111#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #111#))) . -739) (735 . 739) (#(" " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face)) . -719) (717 . 719) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>))) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -1249) (1246 . 1249) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -1232) (1229 . 1232) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -1188) (1185 . 1188) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -1145) (1142 . 1145) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #117=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #116#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #117#))) . -1100) (1095 . 1100) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -1071) (1068 . 1071) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #118=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #116#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #118#))) . -1027) (1022 . 1027) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -984) (981 . 984) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #119=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #116#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #119#))) . -939) (934 . 939) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -910) (907 . 910) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #120=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #116#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #120#))) . -866) (861 . 866) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -823) (820 . 823) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -780) (777 . 780) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #116#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #116#))) . -737) (734 . 737) (717 . 718) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -1234) (1232 . 1234) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -1218) (1216 . 1218) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -1175) (1173 . 1175) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -1133) (1131 . 1133) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #122=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #121#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #122#))) . -1089) (1085 . 1089) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -1061) (1059 . 1061) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #123=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #121#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #123#))) . -1018) (1014 . 1018) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -976) (974 . 976) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #124=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #121#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #124#))) . -932) (928 . 932) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -904) (902 . 904) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#)) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #125=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #121#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #125#))) . -861) (857 . 861) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -819) (817 . 819) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -777) (775 . 777) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #121#) face highlight-indent-guides-odd-face) 2 3 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #121#))) . -735) (733 . 735) (#(" " 0 1 (fontified t highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face)) . -717) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -1249) (1246 . 1249) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -1232) (1229 . 1232) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -1188) (1185 . 1188) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -1145) (1142 . 1145) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #127=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #126#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #127#))) . -1100) (1095 . 1100) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -1071) (1068 . 1071) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #128=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #126#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #128#))) . -1027) (1022 . 1027) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -984) (981 . 984) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #129=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #126#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #129#))) . -939) (934 . 939) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -910) (907 . 910) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #130=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #126#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #130#))) . -866) (861 . 866) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -823) (820 . 823) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -780) (777 . 780) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #126#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #126#))) . -737) (734 . 737) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#))) . -718) (717 . 718) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #100#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -1264) (1260 . 1264) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -1246) (1242 . 1246) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -1201) (1197 . 1201) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -1157) (1153 . 1157) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #132=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #131#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #132#))) . -1111) (1105 . 1111) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -1081) (1077 . 1081) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #133=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #131#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #133#))) . -1036) (1030 . 1036) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -992) (988 . 992) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #134=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #131#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #134#))) . -946) (940 . 946) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -916) (912 . 916) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #135=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #131#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #135#))) . -871) (865 . 871) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -827) (823 . 827) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -783) (779 . 783) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #131#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #131#))) . -739) (735 . 739) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face)) . -719) (717 . 719) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136=((#<marker at 1314 in main.py> . #<marker at 2464 in main.py>) . #100#)) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil)) . -1279) (1274 . 1279) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil)) . -1260) (1255 . 1260) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil)) . -1214) (1209 . 1214) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil)) . -1169) (1164 . 1169) (#("        " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil) 6 7 (highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #137=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #136#)) fontified nil face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (3 nil nil 1 nil #137#) fontified nil)) . -1122) (1115 . 1122) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil)) . -1091) (1086 . 1091) (#("        " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil) 6 7 (highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #138=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #136#)) fontified nil face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (3 nil nil 1 nil #138#) fontified nil)) . -1045) (1038 . 1045) (#("      " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified nil face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified nil) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) fontified nil face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #100#) fontified nil) 4 5 (highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) fontified nil face highlight-indent-guides-even-face) 5 6 (highlight-indent-guides-prop (2 nil nil 1 nil #136#) fontified nil)) . -1000) (995 . 1000) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #136#)) 6 7 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #139=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #136#)) face highlight-indent-guides-odd-face) 7 8 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #139#))) . -953) (946 . 953) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #136#))) . -922) (917 . 922) (#("        " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #136#)) 6 7 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #140=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #136#)) face highlight-indent-guides-odd-face) 7 8 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #140#))) . -876) (869 . 876) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #136#))) . -831) (826 . 831) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #136#))) . -786) (781 . 786) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #136#) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #136#))) . -741) (736 . 741) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #100#))) . -720) (717 . 720) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #100#)) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -1294) (1288 . 1294) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -1274) (1268 . 1274) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -1227) (1221 . 1227) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -1181) (1175 . 1181) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #142=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #141#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #142#))) . -1133) (1125 . 1133) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -1101) (1095 . 1101) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #143=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #141#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #143#))) . -1054) (1046 . 1054) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -1008) (1002 . 1008) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #144=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #141#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #144#))) . -960) (952 . 960) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -928) (922 . 928) (#("       " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#)) 5 6 (fontified nil highlight-indent-guides-prop (3 nil t 1 (column nil highlight-indent-guides-odd-face) #145=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #141#)) face highlight-indent-guides-odd-face) 6 7 (fontified nil highlight-indent-guides-prop (3 nil nil 1 nil #145#))) . -881) (873 . 881) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -835) (829 . 835) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -789) (783 . 789) (#("     " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #141#) face highlight-indent-guides-even-face) 4 5 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #141#))) . -743) (737 . 743) (#("   " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #100#) face highlight-indent-guides-odd-face)) . -721) (717 . 721) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146=((#<marker at 1314 in main.py> . #<marker at 2465 in main.py>) . #93#)) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -1279) (1274 . 1279) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -1260) (1255 . 1260) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -1214) (1209 . 1214) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -1169) (1164 . 1169) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #147=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #146#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #147#))) . -1122) (1115 . 1122) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -1091) (1086 . 1091) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #148=((#<marker at 1719 in main.py> . #<marker at 1719 in main.py>) . #146#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #148#))) . -1045) (1038 . 1045) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -1000) (995 . 1000) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #149=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #146#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #149#))) . -953) (946 . 953) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -922) (917 . 922) (#("      " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#)) 4 5 (fontified nil highlight-indent-guides-prop (2 nil t 1 (column nil highlight-indent-guides-even-face) #150=((#<marker at 1493 in main.py> . #<marker at 1493 in main.py>) . #146#)) face highlight-indent-guides-even-face) 5 6 (fontified nil highlight-indent-guides-prop (2 nil nil 1 nil #150#))) . -876) (869 . 876) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -831) (826 . 831) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -786) (781 . 786) (#("    " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#)) 2 3 (fontified nil highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) face highlight-indent-guides-odd-face) 3 4 (fontified nil highlight-indent-guides-prop (1 nil nil 1 nil #146#))) . -741) (736 . 741) (#("  " 0 1 (fontified nil highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) face highlight-indent-guides-even-face) 1 2 (fontified nil highlight-indent-guides-prop (0 nil nil 1 nil #93#))) . -720) (717 . 720)) nil (24969 46690 180033 810000) 0 nil]) ((1307 . 1315) (#("    " 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #93#) fontified t face highlight-indent-guides-even-face) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil #93#) fontified t) 2 3 (highlight-indent-guides-prop (1 nil t 1 (column nil highlight-indent-guides-odd-face) #146#) fontified t face highlight-indent-guides-odd-face) 3 4 (highlight-indent-guides-prop (1 nil nil 1 nil #146#) fontified t)) . 1307) (undo-tree-id44 . -3) 1310) nil (24969 46690 180095 506000) 0 nil]) ((1281 . 1283) 1279) nil (24969 46690 180098 591000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1374) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 1375 (#("    " 0 4 (fontified t)) . -1375) (undo-tree-id47 . -4) 1379 (1375 . 1379) (#("    " 0 4 (fontified nil)) . 1374) (undo-tree-id48 . -4) (1378 . 1379) (1373 . 1378) 1373) nil (24969 46690 180110 854000) 0 nil]) ((1771 . 1773) (1743 . 1745) 1742 (1713 . 1715) 1712 (1690 . 1692)) nil (24969 46690 180116 545000) 0 nil]) (1691) nil (24969 46690 180119 40000) 0 nil]) ((1664 . 1666) 1662 (t 24969 46589 750978 382000)) nil (24969 46690 180122 246000) 0 nil]) ((1787 . 1788)) nil (24969 46589 728988 107000) 0 nil]) ((nil rear-nonsticky nil 1786 . 1787) (nil fontified nil 1 . 1787) (1 . 1787)) nil (24969 46589 728995 251000) 0 nil]) ((#("comments.length" 0 14 (fontified t) 14 15 (fontified t rear-nonsticky t)) . 1) (undo-tree-id8 . -15) (undo-tree-id9 . -14) (undo-tree-id10 . -14) (undo-tree-id11 . -14) (undo-tree-id12 . -14)) nil (24969 46589 729015 198000) 0 nil]) ((nil rear-nonsticky nil 15 . 16) (nil fontified nil 1 . 16) (1 . 16) (t 24969 46556 659026 348000)) nil (24969 46589 729019 637000) 0 nil] [nil nil ((nil rear-nonsticky nil 15 . 16) (nil fontified nil 1 . 16) (1 . 16) (t 24969 46556 659026 348000)) ((#("comments.length" 0 14 (fontified nil) 14 15 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id0 . -15) (undo-tree-id1 . -14) (undo-tree-id2 . -14) (undo-tree-id3 . -15) (undo-tree-id4 . -15) (undo-tree-id5 . -14) (undo-tree-id6 . -15) (undo-tree-id7 . -14) (nil rear-nonsticky t 15 . 16)) (24969 46559 719183 344000) 0 nil]) nil nil (24969 46559 720169 652000) 0 nil] #151# 152061 667 nil)